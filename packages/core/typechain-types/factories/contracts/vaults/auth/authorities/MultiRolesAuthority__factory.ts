/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultiRolesAuthority,
  MultiRolesAuthorityInterface,
} from "../../../../../contracts/vaults/auth/authorities/MultiRolesAuthority";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "PublicCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RoleCapabilityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract Authority",
        name: "authority",
        type: "address",
      },
    ],
    name: "TargetCustomAuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "UserRoleUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "canCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
    ],
    name: "doesRoleHaveCapability",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
    ],
    name: "doesUserHaveRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "getRolesWithCapability",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getTargetCustomAuthority",
    outputs: [
      {
        internalType: "contract Authority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "isCapabilityPublic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Authority",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setNewAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setPublicCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRoleCapability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "contract Authority",
        name: "customAuthority",
        type: "address",
      },
    ],
    name: "setTargetCustomAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setUserRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018e8380380620018e883398181016040528101906200003791906200018a565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a3505050620001d1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010d82620000e0565b9050919050565b6200011f8162000100565b81146200012b57600080fd5b50565b6000815190506200013f8162000114565b92915050565b6000620001528262000100565b9050919050565b620001648162000145565b81146200017057600080fd5b50565b600081519050620001848162000159565b92915050565b60008060408385031215620001a457620001a3620000db565b5b6000620001b4858286016200012e565b9250506020620001c78582860162000173565b9150509250929050565b61170780620001e16000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063c53a398511610066578063c53a398514610295578063e688747b146102c5578063ea7ca276146102f5578063ed0d0efb1461032557610100565b80638da5cb5b1461020d5780639d0eba611461022b578063b700961314610247578063bf7e214f1461027757610100565b80634b5159da116100d35780634b5159da1461019d57806367aff484146101b9578063728b952b146101d55780637a9e5e4b146101f157610100565b806306a36aee146101055780630bade8a4146101355780630ea9b75b1461016557806313af403514610181575b600080fd5b61011f600480360381019061011a9190611143565b610355565b60405161012c9190611189565b60405180910390f35b61014f600480360381019061014a91906111fc565b61036d565b60405161015c9190611244565b60405180910390f35b61017f600480360381019061017a91906112c4565b61038d565b005b61019b60048036038101906101969190611143565b610539565b005b6101b760048036038101906101b29190611317565b610643565b005b6101d360048036038101906101ce9190611357565b610774565b005b6101ef60048036038101906101ea91906113e8565b6108f3565b005b61020b60048036038101906102069190611428565b610a3c565b005b610215610bfd565b6040516102229190611464565b60405180910390f35b61024560048036038101906102409190611143565b610c21565b005b610261600480360381019061025c919061147f565b610cd4565b60405161026e9190611244565b60405180910390f35b61027f610efd565b60405161028c9190611531565b60405180910390f35b6102af60048036038101906102aa9190611143565b610f23565b6040516102bc9190611531565b60405180910390f35b6102df60048036038101906102da919061154c565b610f56565b6040516102ec9190611244565b60405180910390f35b61030f600480360381019061030a919061158c565b610fc1565b60405161031c9190611244565b60405180910390f35b61033f600480360381019061033a91906111fc565b61101a565b60405161034c9190611189565b60405180910390f35b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915054906101000a900460ff1681565b6103bb336000357fffffffff0000000000000000000000000000000000000000000000000000000016611032565b6103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190611629565b60405180910390fd5b801561046e578260ff166001901b60001b60066000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082825417925050819055506104d9565b8260ff166001901b60001b1960066000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600082825416925050819055505b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b1518360405161052c9190611244565b60405180910390a3505050565b610567336000357fffffffff0000000000000000000000000000000000000000000000000000000016611032565b6105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90611629565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7660405160405180910390a350565b610671336000357fffffffff0000000000000000000000000000000000000000000000000000000016611032565b6106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a790611629565b60405180910390fd5b8060056000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103826040516107689190611244565b60405180910390a25050565b6107a2336000357fffffffff0000000000000000000000000000000000000000000000000000000016611032565b6107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890611629565b60405180910390fd5b8015610843578160ff166001901b60001b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254179250508190555061089c565b8160ff166001901b60001b19600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825416925050819055505b8160ff168373ffffffffffffffffffffffffffffffffffffffff167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf2836040516108e69190611244565b60405180910390a3505050565b610921336000357fffffffff0000000000000000000000000000000000000000000000000000000016611032565b610960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095790611629565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff206560405160405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b565750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b700961333306000357fffffffff00000000000000000000000000000000000000000000000000000000166040518463ffffffff1660e01b8152600401610b1493929190611658565b602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5591906116a4565b5b610b5f57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019860405160405180910390a350565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7957600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610df3578073ffffffffffffffffffffffffffffffffffffffff1663b70096138686866040518463ffffffff1660e01b8152600401610daa93929190611658565b602060405180830381865afa158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb91906116a4565b915050610ef6565b60056000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1680610ef2575060066000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054166000801b14155b9150505b9392505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060018460ff1660066000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205460001c901c161415905092915050565b60008060018360ff16600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460001c901c161415905092915050565b60066020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806110d85750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611110826110e5565b9050919050565b61112081611105565b811461112b57600080fd5b50565b60008135905061113d81611117565b92915050565b600060208284031215611159576111586110e0565b5b60006111678482850161112e565b91505092915050565b6000819050919050565b61118381611170565b82525050565b600060208201905061119e600083018461117a565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111d9816111a4565b81146111e457600080fd5b50565b6000813590506111f6816111d0565b92915050565b600060208284031215611212576112116110e0565b5b6000611220848285016111e7565b91505092915050565b60008115159050919050565b61123e81611229565b82525050565b60006020820190506112596000830184611235565b92915050565b600060ff82169050919050565b6112758161125f565b811461128057600080fd5b50565b6000813590506112928161126c565b92915050565b6112a181611229565b81146112ac57600080fd5b50565b6000813590506112be81611298565b92915050565b6000806000606084860312156112dd576112dc6110e0565b5b60006112eb86828701611283565b93505060206112fc868287016111e7565b925050604061130d868287016112af565b9150509250925092565b6000806040838503121561132e5761132d6110e0565b5b600061133c858286016111e7565b925050602061134d858286016112af565b9150509250929050565b6000806000606084860312156113705761136f6110e0565b5b600061137e8682870161112e565b935050602061138f86828701611283565b92505060406113a0868287016112af565b9150509250925092565b60006113b582611105565b9050919050565b6113c5816113aa565b81146113d057600080fd5b50565b6000813590506113e2816113bc565b92915050565b600080604083850312156113ff576113fe6110e0565b5b600061140d8582860161112e565b925050602061141e858286016113d3565b9150509250929050565b60006020828403121561143e5761143d6110e0565b5b600061144c848285016113d3565b91505092915050565b61145e81611105565b82525050565b60006020820190506114796000830184611455565b92915050565b600080600060608486031215611498576114976110e0565b5b60006114a68682870161112e565b93505060206114b78682870161112e565b92505060406114c8868287016111e7565b9150509250925092565b6000819050919050565b60006114f76114f26114ed846110e5565b6114d2565b6110e5565b9050919050565b6000611509826114dc565b9050919050565b600061151b826114fe565b9050919050565b61152b81611510565b82525050565b60006020820190506115466000830184611522565b92915050565b60008060408385031215611563576115626110e0565b5b600061157185828601611283565b9250506020611582858286016111e7565b9150509250929050565b600080604083850312156115a3576115a26110e0565b5b60006115b18582860161112e565b92505060206115c285828601611283565b9150509250929050565b600082825260208201905092915050565b7f554e415554484f52495a45440000000000000000000000000000000000000000600082015250565b6000611613600c836115cc565b915061161e826115dd565b602082019050919050565b6000602082019050818103600083015261164281611606565b9050919050565b611652816111a4565b82525050565b600060608201905061166d6000830186611455565b61167a6020830185611455565b6116876040830184611649565b949350505050565b60008151905061169e81611298565b92915050565b6000602082840312156116ba576116b96110e0565b5b60006116c88482850161168f565b9150509291505056fea26469706673582212200c8c9836c319114fa206d5a28612d65233cd6325ea41958d4c453ee8bc46eb7164736f6c634300080c0033";

type MultiRolesAuthorityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiRolesAuthorityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiRolesAuthority__factory extends ContractFactory {
  constructor(...args: MultiRolesAuthorityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiRolesAuthority> {
    return super.deploy(
      _owner,
      _authority,
      overrides || {}
    ) as Promise<MultiRolesAuthority>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _authority, overrides || {});
  }
  override attach(address: string): MultiRolesAuthority {
    return super.attach(address) as MultiRolesAuthority;
  }
  override connect(signer: Signer): MultiRolesAuthority__factory {
    return super.connect(signer) as MultiRolesAuthority__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiRolesAuthorityInterface {
    return new utils.Interface(_abi) as MultiRolesAuthorityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiRolesAuthority {
    return new Contract(address, _abi, signerOrProvider) as MultiRolesAuthority;
  }
}
