/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Fetcher,
  FetcherInterface,
} from "../../../../contracts/utils/newFetcher.sol/Fetcher";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_type",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract Controller",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract MarketManager",
        name: "_marketManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
    ],
    name: "fetchDynamic",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct Fetcher.DynamicVaultBundle",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "duringAssessment",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "onlyReputable",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "resolved",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "alive",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "atLoss",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "base_budget",
                type: "uint256",
              },
            ],
            internalType: "struct MarketManager.MarketPhaseData",
            name: "phase",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "longZCB",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortZCB",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "trusted",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "faceValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "marketId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "principal",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedYield",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "address",
                name: "Instrument_address",
                type: "address",
              },
              {
                internalType: "enum Vault.InstrumentType",
                name: "instrument_type",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maturityDate",
                type: "uint256",
              },
            ],
            internalType: "struct Vault.InstrumentData",
            name: "instrument",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "approved_principal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "approved_yield",
            type: "uint256",
          },
        ],
        internalType: "struct Fetcher.DynamicMarketBundle[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Controller",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract MarketManager",
        name: "_marketManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offset",
        type: "uint256",
      },
    ],
    name: "fetchInitial",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "marketIds",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "N",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sigma",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "alpha",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "omega",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "delta",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "r",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "s",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "steak",
                type: "uint256",
              },
            ],
            internalType: "struct MarketManager.MarketParameters",
            name: "default_params",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "onlyVerified",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "r",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "asset_limit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total_asset_limit",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Fetcher.CollateralBundle",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct Fetcher.StaticVaultBundle",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "long",
            type: "address",
          },
          {
            internalType: "address",
            name: "short",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "N",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sigma",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "alpha",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "omega",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "delta",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "r",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "s",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "steak",
                type: "uint256",
              },
            ],
            internalType: "struct MarketManager.MarketParameters",
            name: "parameters",
            type: "tuple",
          },
        ],
        internalType: "struct Fetcher.StaticMarketBundle[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        internalType: "contract MarketManager",
        name: "_marketManager",
        type: "address",
      },
    ],
    name: "isUnresolvedMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003514380380620035148339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61315c80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e179eff1461005c5780632dd489091461008e57806354fd4d50146100ac57806356d27491146100ca578063e2c2008c146100fc575b600080fd5b61007660048036038101906100719190611b0f565b61012c565b60405161008593929190611fcd565b60405180910390f35b610096610730565b6040516100a3919061205c565b60405180910390f35b6100b46107be565b6040516100c1919061205c565b60405180910390f35b6100e460048036038101906100df9190611b0f565b61084c565b6040516100f3939291906123f1565b60405180910390f35b6101166004803603810190610111919061242f565b610c51565b604051610123919061247e565b60405180910390f35b6101346117c0565b606060006101406117c0565b606060004290508973ffffffffffffffffffffffffffffffffffffffff1663b1b7e1f2896040518263ffffffff1660e01b81526004016101809190612499565b600060405180830381865afa15801561019d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101c69190612611565b836020018190525060008a73ffffffffffffffffffffffffffffffffffffffff16638c64ea4a8a6040518263ffffffff1660e01b81526004016102099190612499565b602060405180830381865afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190612698565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102ee57610289610c5d565b600067ffffffffffffffff8111156102a4576102a36124b9565b5b6040519080825280602002602001820160405280156102dd57816020015b6102ca611813565b8152602001906001900390816102c25790505b508396509650965050505050610726565b6103658173ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190612703565b610d76565b8460e001819052508073ffffffffffffffffffffffffffffffffffffffff16637572cb1f6040518163ffffffff1660e01b815260040161010060405180830381865afa1580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd9190612804565b84604001819052508073ffffffffffffffffffffffffffffffffffffffff1663f7d070de6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610454919061285e565b8460600190151590811515815250508073ffffffffffffffffffffffffffffffffffffffff16636c8ae38c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d2919061288b565b8460800181815250508073ffffffffffffffffffffffffffffffffffffffff16635f260bb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a919061288b565b8460a00181815250508073ffffffffffffffffffffffffffffffffffffffff1663c83baf4e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c2919061288b565b8460c001818152505088846000018181525050600084602001515114156106495783600067ffffffffffffffff8111156105ff576105fe6124b9565b5b60405190808252806020026020018201604052801561063857816020015b610625611813565b81526020019060019003908161061d5790505b508396509650965050505050610726565b60006106578a8d8d8c610eb2565b90506000815190508067ffffffffffffffff811115610679576106786124b9565b5b6040519080825280602002602001820160405280156106b257816020015b61069f611813565b8152602001906001900390816106975790505b50945060005b81811015610715576106e48382815181106106d6576106d56128b8565b5b60200260200101518e611160565b8682815181106106f7576106f66128b8565b5b6020026020010181905250808061070d90612916565b9150506106b8565b508585859850985098505050505050505b9450945094915050565b6000805461073d9061298e565b80601f01602080910402602001604051908101604052809291908181526020018280546107699061298e565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505081565b600180546107cb9061298e565b80601f01602080910402602001604051908101604052809291908181526020018280546107f79061298e565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b505050505081565b610854611874565b60606000610860611874565b6060600042905087836000018181525050600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16638c64ea4a8a6040518263ffffffff1660e01b81526004016108c29190612499565b602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190612698565b73ffffffffffffffffffffffffffffffffffffffff16141561098b57610927611305565b600067ffffffffffffffff811115610942576109416124b9565b5b60405190808252806020026020018201604052801561097b57816020015b61096861188e565b8152602001906001900390816109605790505b5082955095509550505050610c47565b8973ffffffffffffffffffffffffffffffffffffffff16638c64ea4a896040518263ffffffff1660e01b81526004016109c49190612499565b602060405180830381865afa1580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a059190612698565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a73919061288b565b83602001818152505060008a73ffffffffffffffffffffffffffffffffffffffff1663b1b7e1f28a6040518263ffffffff1660e01b8152600401610ab79190612499565b600060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610afd9190612611565b511415610b695782600067ffffffffffffffff811115610b2057610b1f6124b9565b5b604051908082528060200260200182016040528015610b5957816020015b610b4661188e565b815260200190600190039081610b3e5790505b5082955095509550505050610c47565b6000610b77898c8c8b610eb2565b90506000815190508067ffffffffffffffff811115610b9957610b986124b9565b5b604051908082528060200260200182016040528015610bd257816020015b610bbf61188e565b815260200190600190039081610bb75790505b50935060005b81811015610c3757610c06838281518110610bf657610bf56128b8565b5b60200260200101518c8f8f611329565b858281518110610c1957610c186128b8565b5b60200260200101819052508080610c2f90612916565b915050610bd8565b5084848497509750975050505050505b9450945094915050565b60006001905092915050565b610c656117c0565b60405180610100016040528060008152602001600067ffffffffffffffff811115610c9357610c926124b9565b5b604051908082528060200260200182016040528015610cc15781602001602082028036833780820191505090505b50815260200160405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525081526020016000151581526020016000815260200160008152602001600081526020016040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016040518060200160405280600081525081526020016000815250815250905090565b610d7e6118d7565b81816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e01573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e2a9190612a66565b81602001819052508173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea19190612ae8565b60ff16816040018181525050919050565b606060008473ffffffffffffffffffffffffffffffffffffffff1663b1b7e1f2876040518263ffffffff1660e01b8152600401610eef9190612499565b600060405180830381865afa158015610f0c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f359190612611565b90506000815190508084101580610f4c5750600081145b15610fa457600067ffffffffffffffff811115610f6c57610f6b6124b9565b5b604051908082528060200260200182016040528015610f9a5781602001602082028036833780820191505090505b5092505050611158565b6000808267ffffffffffffffff811115610fc157610fc06124b9565b5b604051908082528060200260200182016040528015610fef5781602001602082028036833780820191505090505b5090506000600187856110029190612b15565b61100c9190612b15565b90505b83831061101b576110ae565b61103f858281518110611031576110306128b8565b5b602002602001015189610c51565b1561108d57848181518110611057576110566128b8565b5b6020026020010151828481518110611072576110716128b8565b5b602002602001018181525050828061108990612916565b9350505b600081141561109b576110ae565b80806110a690612b49565b91505061100f565b508167ffffffffffffffff8111156110c9576110c86124b9565b5b6040519080825280602002602001820160405280156110f75781602001602082028036833780820191505090505b50945060005b8281101561115257818181518110611118576111176128b8565b5b6020026020010151868281518110611133576111326128b8565b5b602002602001018181525050808061114a90612916565b9150506110fd565b50505050505b949350505050565b611168611813565b60008273ffffffffffffffffffffffffffffffffffffffff1663eb44fdd3856040518263ffffffff1660e01b81526004016111a39190612499565b600060405180830381865afa1580156111c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111e99190612cbf565b905080608001518260200181815250508060200151826040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060400151826060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1663c6ceb96b856040518263ffffffff1660e01b81526004016112aa9190612499565b61010060405180830381865afa1580156112c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ec9190612804565b8260800181905250838260000181815250505092915050565b61130d611874565b6040518060400160405280600081526020016000815250905090565b61133161188e565b60008373ffffffffffffffffffffffffffffffffffffffff16638c64ea4a866040518263ffffffff1660e01b815260040161136c9190612499565b602060405180830381865afa158015611389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ad9190612698565b9050858260000181815250508273ffffffffffffffffffffffffffffffffffffffff16634cba8cde876040518263ffffffff1660e01b81526004016113f29190612499565b60c060405180830381865afa15801561140f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114339190612da8565b82602001819052508273ffffffffffffffffffffffffffffffffffffffff1663153542cc876040518263ffffffff1660e01b81526004016114749190612499565b602060405180830381865afa158015611491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b59190612dd5565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611523919061288b565b8260400181815250508273ffffffffffffffffffffffffffffffffffffffff1663920f4e55876040518263ffffffff1660e01b81526004016115659190612499565b602060405180830381865afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190612dd5565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611614919061288b565b8260600181815250508073ffffffffffffffffffffffffffffffffffffffff16634dc54a388273ffffffffffffffffffffffffffffffffffffffff166350c6e6cf896040518263ffffffff1660e01b81526004016116729190612499565b602060405180830381865afa15801561168f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b39190612e40565b6040518263ffffffff1660e01b81526004016116cf9190612ecc565b600060405180830381865afa1580156116ec573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117159190613060565b826080018190525060008473ffffffffffffffffffffffffffffffffffffffff1663ac1b6b01886040518263ffffffff1660e01b81526004016117589190612499565b6040805180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179891906130f9565b905080600001518360a001818152505080602001518360c00181815250505050949350505050565b60405180610100016040528060008152602001606081526020016117e261190e565b815260200160001515815260200160008152602001600081526020016000815260200161180d6118d7565b81525090565b6040518060a001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200161186e61190e565b81525090565b604051806040016040528060008152602001600081525090565b6040518060e00160405280600081526020016118a8611953565b815260200160008152602001600081526020016118c3611993565b815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c00160405280600015158152602001600015158152602001600015158152602001600015158152602001600015158152602001600081525090565b60405180610160016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611a0a57611a09612154565b5b8152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a5682611a2b565b9050919050565b6000611a6882611a4b565b9050919050565b611a7881611a5d565b8114611a8357600080fd5b50565b600081359050611a9581611a6f565b92915050565b6000611aa682611a4b565b9050919050565b611ab681611a9b565b8114611ac157600080fd5b50565b600081359050611ad381611aad565b92915050565b6000819050919050565b611aec81611ad9565b8114611af757600080fd5b50565b600081359050611b0981611ae3565b92915050565b60008060008060808587031215611b2957611b28611a21565b5b6000611b3787828801611a86565b9450506020611b4887828801611ac4565b9350506040611b5987828801611afa565b9250506060611b6a87828801611afa565b91505092959194509250565b611b7f81611ad9565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611bbd8383611b76565b60208301905092915050565b6000602082019050919050565b6000611be182611b85565b611beb8185611b90565b9350611bf683611ba1565b8060005b83811015611c27578151611c0e8882611bb1565b9750611c1983611bc9565b925050600181019050611bfa565b5085935050505092915050565b61010082016000820151611c4b6000850182611b76565b506020820151611c5e6020850182611b76565b506040820151611c716040850182611b76565b506060820151611c846060850182611b76565b506080820151611c976080850182611b76565b5060a0820151611caa60a0850182611b76565b5060c0820151611cbd60c0850182611b76565b5060e0820151611cd060e0850182611b76565b50505050565b60008115159050919050565b611ceb81611cd6565b82525050565b611cfa81611a4b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d3a578082015181840152602081019050611d1f565b83811115611d49576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d6b82611d00565b611d758185611d0b565b9350611d85818560208601611d1c565b611d8e81611d4f565b840191505092915050565b6000606083016000830151611db16000860182611cf1565b5060208301518482036020860152611dc98282611d60565b9150506040830151611dde6040860182611b76565b508091505092915050565b60006101e083016000830151611e026000860182611b76565b5060208301518482036020860152611e1a8282611bd6565b9150506040830151611e2f6040860182611c34565b506060830151611e43610140860182611ce2565b506080830151611e57610160860182611b76565b5060a0830151611e6b610180860182611b76565b5060c0830151611e7f6101a0860182611b76565b5060e08301518482036101c0860152611e988282611d99565b9150508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61018082016000820151611ee86000850182611b76565b506020820151611efb6020850182611b76565b506040820151611f0e6040850182611cf1565b506060820151611f216060850182611cf1565b506080820151611f346080850182611c34565b50505050565b6000611f468383611ed1565b6101808301905092915050565b6000602082019050919050565b6000611f6b82611ea5565b611f758185611eb0565b9350611f8083611ec1565b8060005b83811015611fb1578151611f988882611f3a565b9750611fa383611f53565b925050600181019050611f84565b5085935050505092915050565b611fc781611ad9565b82525050565b60006060820190508181036000830152611fe78186611de9565b90508181036020830152611ffb8185611f60565b905061200a6040830184611fbe565b949350505050565b600082825260208201905092915050565b600061202e82611d00565b6120388185612012565b9350612048818560208601611d1c565b61205181611d4f565b840191505092915050565b600060208201905081810360008301526120768184612023565b905092915050565b6040820160008201516120946000850182611b76565b5060208201516120a76020850182611b76565b50505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60c0820160008201516120ef6000850182611ce2565b5060208201516121026020850182611ce2565b5060408201516121156040850182611ce2565b5060608201516121286060850182611ce2565b50608082015161213b6080850182611ce2565b5060a082015161214e60a0850182611b76565b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061219457612193612154565b5b50565b60008190506121a582612183565b919050565b60006121b582612197565b9050919050565b6121c5816121aa565b82525050565b6000610160830160008301516121e46000860182611ce2565b5060208301516121f76020860182611b76565b50604083015161220a6040860182611b76565b50606083015161221d6060860182611b76565b5060808301516122306080860182611b76565b5060a083015161224360a0860182611b76565b5060c083015161225660c0860182611b76565b5060e083015184820360e086015261226e8282611d60565b915050610100830151612285610100860182611cf1565b5061012083015161229a6101208601826121bc565b506101408301516122af610140860182611b76565b508091505092915050565b6000610180830160008301516122d36000860182611b76565b5060208301516122e660208601826120d9565b5060408301516122f960e0860182611b76565b50606083015161230d610100860182611b76565b50608083015184820361012086015261232682826121cb565b91505060a083015161233c610140860182611b76565b5060c0830151612350610160860182611b76565b508091505092915050565b600061236783836122ba565b905092915050565b6000602082019050919050565b6000612387826120ad565b61239181856120b8565b9350836020820285016123a3856120c9565b8060005b858110156123df57848403895281516123c0858261235b565b94506123cb8361236f565b925060208a019950506001810190506123a7565b50829750879550505050505092915050565b6000608082019050612406600083018661207e565b8181036040830152612418818561237c565b90506124276060830184611fbe565b949350505050565b6000806040838503121561244657612445611a21565b5b600061245485828601611afa565b925050602061246585828601611ac4565b9150509250929050565b61247881611cd6565b82525050565b6000602082019050612493600083018461246f565b92915050565b60006020820190506124ae6000830184611fbe565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6124f182611d4f565b810181811067ffffffffffffffff821117156125105761250f6124b9565b5b80604052505050565b6000612523611a17565b905061252f82826124e8565b919050565b600067ffffffffffffffff82111561254f5761254e6124b9565b5b602082029050602081019050919050565b600080fd5b60008151905061257481611ae3565b92915050565b600061258d61258884612534565b612519565b905080838252602082019050602084028301858111156125b0576125af612560565b5b835b818110156125d957806125c58882612565565b8452602084019350506020810190506125b2565b5050509392505050565b600082601f8301126125f8576125f76124b4565b5b815161260884826020860161257a565b91505092915050565b60006020828403121561262757612626611a21565b5b600082015167ffffffffffffffff81111561264557612644611a26565b5b612651848285016125e3565b91505092915050565b600061266582611a4b565b9050919050565b6126758161265a565b811461268057600080fd5b50565b6000815190506126928161266c565b92915050565b6000602082840312156126ae576126ad611a21565b5b60006126bc84828501612683565b91505092915050565b60006126d082611a4b565b9050919050565b6126e0816126c5565b81146126eb57600080fd5b50565b6000815190506126fd816126d7565b92915050565b60006020828403121561271957612718611a21565b5b6000612727848285016126ee565b91505092915050565b600080fd5b600080fd5b6000610100828403121561275157612750612730565b5b61275c610100612519565b9050600061276c84828501612565565b600083015250602061278084828501612565565b602083015250604061279484828501612565565b60408301525060606127a884828501612565565b60608301525060806127bc84828501612565565b60808301525060a06127d084828501612565565b60a08301525060c06127e484828501612565565b60c08301525060e06127f884828501612565565b60e08301525092915050565b6000610100828403121561281b5761281a611a21565b5b60006128298482850161273a565b91505092915050565b61283b81611cd6565b811461284657600080fd5b50565b60008151905061285881612832565b92915050565b60006020828403121561287457612873611a21565b5b600061288284828501612849565b91505092915050565b6000602082840312156128a1576128a0611a21565b5b60006128af84828501612565565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061292182611ad9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612954576129536128e7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129a657607f821691505b602082108114156129ba576129b961295f565b5b50919050565b600080fd5b600067ffffffffffffffff8211156129e0576129df6124b9565b5b6129e982611d4f565b9050602081019050919050565b6000612a09612a04846129c5565b612519565b905082815260208101848484011115612a2557612a246129c0565b5b612a30848285611d1c565b509392505050565b600082601f830112612a4d57612a4c6124b4565b5b8151612a5d8482602086016129f6565b91505092915050565b600060208284031215612a7c57612a7b611a21565b5b600082015167ffffffffffffffff811115612a9a57612a99611a26565b5b612aa684828501612a38565b91505092915050565b600060ff82169050919050565b612ac581612aaf565b8114612ad057600080fd5b50565b600081519050612ae281612abc565b92915050565b600060208284031215612afe57612afd611a21565b5b6000612b0c84828501612ad3565b91505092915050565b6000612b2082611ad9565b9150612b2b83611ad9565b925082821015612b3e57612b3d6128e7565b5b828203905092915050565b6000612b5482611ad9565b91506000821415612b6857612b676128e7565b5b600182039050919050565b6000612b7e82611a4b565b9050919050565b612b8e81612b73565b8114612b9957600080fd5b50565b600081519050612bab81612b85565b92915050565b6000612bbc82611a4b565b9050919050565b612bcc81612bb1565b8114612bd757600080fd5b50565b600081519050612be981612bc3565b92915050565b600060e08284031215612c0557612c04612730565b5b612c0f60e0612519565b90506000612c1f84828501612b9c565b6000830152506020612c3384828501612bda565b6020830152506040612c4784828501612bda565b604083015250606082015167ffffffffffffffff811115612c6b57612c6a612735565b5b612c7784828501612a38565b6060830152506080612c8b84828501612565565b60808301525060a0612c9f84828501612565565b60a08301525060c0612cb384828501612565565b60c08301525092915050565b600060208284031215612cd557612cd4611a21565b5b600082015167ffffffffffffffff811115612cf357612cf2611a26565b5b612cff84828501612bef565b91505092915050565b600060c08284031215612d1e57612d1d612730565b5b612d2860c0612519565b90506000612d3884828501612849565b6000830152506020612d4c84828501612849565b6020830152506040612d6084828501612849565b6040830152506060612d7484828501612849565b6060830152506080612d8884828501612849565b60808301525060a0612d9c84828501612565565b60a08301525092915050565b600060c08284031215612dbe57612dbd611a21565b5b6000612dcc84828501612d08565b91505092915050565b600060208284031215612deb57612dea611a21565b5b6000612df984828501612bda565b91505092915050565b6000612e0d82611a4b565b9050919050565b612e1d81612e02565b8114612e2857600080fd5b50565b600081519050612e3a81612e14565b92915050565b600060208284031215612e5657612e55611a21565b5b6000612e6484828501612e2b565b91505092915050565b6000819050919050565b6000612e92612e8d612e8884611a2b565b612e6d565b611a2b565b9050919050565b6000612ea482612e77565b9050919050565b6000612eb682612e99565b9050919050565b612ec681612eab565b82525050565b6000602082019050612ee16000830184612ebd565b92915050565b612ef081611a4b565b8114612efb57600080fd5b50565b600081519050612f0d81612ee7565b92915050565b60038110612f2057600080fd5b50565b600081519050612f3281612f13565b92915050565b60006101608284031215612f4f57612f4e612730565b5b612f5a610160612519565b90506000612f6a84828501612849565b6000830152506020612f7e84828501612565565b6020830152506040612f9284828501612565565b6040830152506060612fa684828501612565565b6060830152506080612fba84828501612565565b60808301525060a0612fce84828501612565565b60a08301525060c0612fe284828501612565565b60c08301525060e082015167ffffffffffffffff81111561300657613005612735565b5b61301284828501612a38565b60e08301525061010061302784828501612efe565b6101008301525061012061303d84828501612f23565b6101208301525061014061305384828501612565565b6101408301525092915050565b60006020828403121561307657613075611a21565b5b600082015167ffffffffffffffff81111561309457613093611a26565b5b6130a084828501612f38565b91505092915050565b6000604082840312156130bf576130be612730565b5b6130c96040612519565b905060006130d984828501612565565b60008301525060206130ed84828501612565565b60208301525092915050565b60006040828403121561310f5761310e611a21565b5b600061311d848285016130a9565b9150509291505056fea26469706673582212203fed00444362939a8c72c3f5d3acb686686a75f4edff53acd84f37e58c4c121a64736f6c634300080c0033";

type FetcherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FetcherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Fetcher__factory extends ContractFactory {
  constructor(...args: FetcherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _type: PromiseOrValue<string>,
    _version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Fetcher> {
    return super.deploy(_type, _version, overrides || {}) as Promise<Fetcher>;
  }
  override getDeployTransaction(
    _type: PromiseOrValue<string>,
    _version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_type, _version, overrides || {});
  }
  override attach(address: string): Fetcher {
    return super.attach(address) as Fetcher;
  }
  override connect(signer: Signer): Fetcher__factory {
    return super.connect(signer) as Fetcher__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FetcherInterface {
    return new utils.Interface(_abi) as FetcherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Fetcher {
    return new Contract(address, _abi, signerOrProvider) as Fetcher;
  }
}
