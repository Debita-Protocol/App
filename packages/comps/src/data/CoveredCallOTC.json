{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_utilizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerContract",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shortCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_longCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cash",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tradeTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityTransferFrom",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimatedTotalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaturityBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instrumentApprovalCondition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "isLiquid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAllPositions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountFreed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountNeeded",
          "type": "uint256"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_liquidatedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "longCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yield",
          "type": "uint256"
        }
      ],
      "name": "onMarketApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prepareWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_debtPayment",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePerContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullRawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readyForWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_Utilizer",
          "type": "address"
        }
      ],
      "name": "setUtilizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "store_internal_balance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strikePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testqueriedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract Vault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101a0604052670de0b6b3a7640000600a553480156200001e57600080fd5b506040516200158e3803806200158e83398101604081905262000041916200029f565b600180546001600160a01b0319166001600160a01b038d16908117909155604080516362eb326360e11b815290518d928d92909163c5d664c6916004808201926020929091908290030181865afa158015620000a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c791906200035d565b600080546001600160a01b0319166001600160a01b0392831690811790915560405163095ea7b360e01b8152918416600483015260001960248301529063095ea7b3906044016020604051808303816000875af11580156200012d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000153919062000384565b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200018d858862000246602090811b62000e7f17901c565b8614620001d45760405162461bcd60e51b8152602060048201526011602482015270696e636f72726563742073657474696e6760781b604482015260640160405180910390fd5b6001600160a01b038a8116608052600054811660a05260c089905260e088905261010087905261012086905284811661014052600780546001600160a01b031916918516919091179055610180819052620002308242620003a8565b6101605250620003ca9950505050505050505050565b60006200025d83670de0b6b3a76400008462000266565b90505b92915050565b8282028115158415858304851417166200027f57600080fd5b0492915050565b6001600160a01b03811681146200029c57600080fd5b50565b60008060008060008060008060008060006101608c8e031215620002c257600080fd5b8b51620002cf8162000286565b60208d0151909b50620002e28162000286565b60408d0151909a50620002f58162000286565b8099505060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c0151620003258162000286565b6101008d0151909450620003398162000286565b809350506101208c015191506101408c015190509295989b509295989b9093969950565b6000602082840312156200037057600080fd5b81516200037d8162000286565b9392505050565b6000602082840312156200039757600080fd5b815180151581146200037d57600080fd5b808201808211156200026057634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610180516111376200045760003960006103e40152600081816102cd015281816107820152610c800152600061040b0152600081816104e70152610b56015260006103b501526000610499015260008181610441015261047201526000610360015260006104c001526111376000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063852a12e311610125578063c576ce01116100ad578063d832f7911161007c578063d832f79114610534578063e0186b8d14610547578063efbb5cb0146102ef578063f3aa68d314610550578063fbfa77cf1461055857600080fd5b8063c576ce0114610494578063c9ac4332146104bb578063cb29bb9a146104e2578063cdddd4e51461050957600080fd5b8063961be391116100f4578063961be39114610406578063a4e2d6341461042d578063b0667cf81461043f578063bdf0f25314610465578063c52987cf1461046d57600080fd5b8063852a12e31461039d578063870dcaeb146103b057806387479487146103d75780638eac2066146103df57600080fd5b8063537d9409116101a85780636817031b116101775780636817031b146103355780636f307dc3146103485780637158da7c1461035b5780637dc0d1d01461038257806383e754a01461039557600080fd5b8063537d9409146102f657806357b25996146103195780635b89c4891461029b57806366d16cc31461032c57600080fd5b8063416288dd116101ef578063416288dd1461028957806349dcf4ed1461029d5780634e71d92d146102c05780634e8bfdaa146102c857806350bb4beb146102ef57600080fd5b80631104aafd14610221578063350896fe1461023857806335aa2e44146102635780633af9e66914610276575b600080fd5b6002545b6040519081526020015b60405180910390f35b60045461024b906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b61024b610271366004610f76565b61056b565b610225610284366004610fa4565b610595565b61029b610297366004610fc1565b5050565b005b6102a5610696565b6040805193845260208401929092529082015260600161022f565b61029b610739565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6000610225565b610309610304366004610f76565b6108e1565b604051901515815260200161022f565b61029b610327366004610fa4565b610928565b61022560085481565b61029b610343366004610fa4565b610a3c565b60005461024b906001600160a01b031681565b61024b7f000000000000000000000000000000000000000000000000000000000000000081565b60075461024b906001600160a01b031681565b610309610b3d565b6103096103ab366004610f76565b610bd1565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b610225600a81565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b61024b7f000000000000000000000000000000000000000000000000000000000000000081565b600154600160a01b900460ff16610309565b7f0000000000000000000000000000000000000000000000000000000000000000610225565b610309610c77565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b61024b7f000000000000000000000000000000000000000000000000000000000000000081565b6102257f000000000000000000000000000000000000000000000000000000000000000081565b61051f610517366004610f76565b600080915091565b6040805192835260208301919091520161022f565b61029b610542366004610f76565b610cc5565b610225600a5481565b61029b610d5b565b60015461024b906001600160a01b031681565b6005818154811061057b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000306001600160a01b03831603610628576003546000546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610fe3565b6106229190611012565b92915050565b6000546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610fe3565b600154600090819081906001600160a01b031633146106d05760405162461bcd60e51b81526004016106c790611025565b60405180910390fd5b6106d8610c77565b61071c5760405162461bcd60e51b81526020600482015260156024820152746e6f7420726561647920746f20776974686472617760581b60448201526064016106c7565b6107346001805460ff60a01b1916600160a01b179055565b909192565b6004546001600160a01b0316331461077f5760405162461bcd60e51b815260206004820152600960248201526810aaba34b634bd32b960b91b60448201526064016106c7565b427f0000000000000000000000000000000000000000000000000000000000000000106107dc5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081b585d1d5c995960aa1b60448201526064016106c7565b6107e4610e9b565b600854156108df5760005460085460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611053565b50600060088190556009805460ff191660019081179091555460405163109d3ea960e11b815230600482015260248101929092526001600160a01b03169063213a7d5290604401600060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b505050505b565b6000610916604051806040016040528060088152602001671a5cdb1a5c5d5a5960c21b81525061091030610595565b84610eea565b8161092030610595565b101592915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611075565b6001600160a01b0316336001600160a01b031614806109cd57503360009081526006602052604090205460ff165b610a075760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016106c7565b6001600160a01b038116610a1a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190611075565b6001600160a01b0316336001600160a01b03161480610ae157503360009081526006602052604090205460ff165b610b1b5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016106c7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190610fe3565b1015905090565b6001546000906001600160a01b03163314610bfe5760405162461bcd60e51b81526004016106c790611025565b60005460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190611053565b6000610ca4600a7f0000000000000000000000000000000000000000000000000000000000000000611092565b4210158015610cb35750600854155b80610cc0575060095460ff165b905090565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d409190611053565b508060036000828254610d539190611092565b909155505050565b6001546001600160a01b03163314610d855760405162461bcd60e51b81526004016106c790611025565b610d8e30610595565b60025560015460408051637e0b9fe360e11b815290516001600160a01b039092169163fc173fc6916004808201926020929091908290030181865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff9190611053565b156108df57600154600254604051634b674ead60e11b81526001600160a01b03909216916396ce9d5a91610e399160040190815260200190565b602060405180830381865afa158015610e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7a9190610fe3565b600255565b6000610e9483670de0b6b3a764000084610f36565b9392505050565b60085415610ee05760405162461bcd60e51b81526020600482015260126024820152711c1c9bd99a5d08185b1c9958591e481cd95d60721b60448201526064016106c7565b6000600855565b50565b610f31838383604051602401610f02939291906110a5565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052610f55565b505050565b828202811515841585830485141716610f4e57600080fd5b0492915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610f8857600080fd5b5035919050565b6001600160a01b0381168114610ee757600080fd5b600060208284031215610fb657600080fd5b8135610e9481610f8f565b60008060408385031215610fd457600080fd5b50508035926020909101359150565b600060208284031215610ff557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561062257610622610ffc565b60208082526014908201527318d85b1b195c881b5d5cdd081899481d985d5b1d60621b604082015260600190565b60006020828403121561106557600080fd5b81518015158114610e9457600080fd5b60006020828403121561108757600080fd5b8151610e9481610f8f565b8082018082111561062257610622610ffc565b606081526000845180606084015260005b818110156110d357602081880181015160808684010152016110b6565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea264697066735822122006795eb2eeafa4548893f3610198bae7f49aa84d52eb3f773283ddd9ca2d90ae64736f6c63430008110033",
    "sourceMap": "501:4582:24:-:0;;;2985:4;2953:36;;1373:1212;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:5:25;:21;;-1:-1:-1;;;;;;893:21:25;-1:-1:-1;;;;;893:21:25;;;;;;;;943:18;;;-1:-1:-1;;;943:18:25;;;;893:21;;2003:9:24;;893:21:25;;943:16;;:18;;;;;;;;;;;;;;;893:21;943:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;924:10;:38;;-1:-1:-1;;;;;;924:38:25;-1:-1:-1;;;;;924:38:25;;;;;;;;;972:36;;-1:-1:-1;;;972:36:25;;1781:32:81;;;972:36:25;;;1763:51:81;-1:-1:-1;;1830:18:81;;;1823:34;924:38:25;972:18;;1736::81;;972:36:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1050:8:25;:20;;-1:-1:-1;;;;;;1050:20:25;-1:-1:-1;;;;;1050:20:25;;;;;;;;;;-1:-1:-1;2105:45:24::1;:15:::0;2132:17;2105:26:::1;;::::0;;::::1;;;:45:::0;::::1;:::i;:::-;2085:16;:65;2077:95;;;::::0;-1:-1:-1;;;2077:95:24;;2352:2:81;2077:95:24::1;::::0;::::1;2334:21:81::0;2391:2;2371:18;;;2364:30;-1:-1:-1;;;2410:18:81;;;2403:47;2467:18;;2077:95:24::1;;;;;;;;-1:-1:-1::0;;;;;2183:20:24;;::::1;;::::0;2240:10:::1;::::0;;::::1;2214:37;::::0;2283:26:::1;::::0;;;2320:36:::1;::::0;;;2240:10:::1;2367:34:::0;;;2412:32:::1;::::0;;;2455:12;;::::1;;::::0;2477:6:::1;:16:::0;;-1:-1:-1;;;;;;2477:16:24::1;::::0;;::::1;::::0;;;::::1;::::0;;2504:22:::1;::::0;;;2552:26:::1;2570:8:::0;2552:15:::1;:26;:::i;:::-;2537:41;::::0;-1:-1:-1;501:4582:24;;-1:-1:-1;;;;;;;;;;501:4582:24;981:164:30;1046:7;1072:21;1083:1;598:4;1091:1;1072:10;:21::i;:::-;1065:28;;981:164;;;;;:::o;1507:535::-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;14:131:81:-;-1:-1:-1;;;;;89:31:81;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1163::-;310:6;318;326;334;342;350;358;366;374;382;390:7;444:3;432:9;423:7;419:23;415:33;412:53;;;461:1;458;451:12;412:53;493:9;487:16;512:31;537:5;512:31;:::i;:::-;612:2;597:18;;591:25;562:5;;-1:-1:-1;625:33:81;591:25;625:33;:::i;:::-;729:2;714:18;;708:25;677:7;;-1:-1:-1;742:33:81;708:25;742:33;:::i;:::-;794:7;784:17;;;841:2;830:9;826:18;820:25;810:35;;885:3;874:9;870:19;864:26;854:36;;930:3;919:9;915:19;909:26;899:36;;975:3;964:9;960:19;954:26;944:36;;1025:3;1014:9;1010:19;1004:26;1039:33;1064:7;1039:33;:::i;:::-;1143:3;1128:19;;1122:26;1091:7;;-1:-1:-1;1157:33:81;1122:26;1157:33;:::i;:::-;1209:7;1199:17;;;1256:3;1245:9;1241:19;1235:26;1225:36;;1302:3;1291:9;1287:19;1281:26;1270:37;;150:1163;;;;;;;;;;;;;;:::o;1318:266::-;1403:6;1456:2;1444:9;1435:7;1431:23;1427:32;1424:52;;;1472:1;1469;1462:12;1424:52;1504:9;1498:16;1523:31;1548:5;1523:31;:::i;:::-;1573:5;1318:266;-1:-1:-1;;;1318:266:81:o;1868:277::-;1935:6;1988:2;1976:9;1967:7;1963:23;1959:32;1956:52;;;2004:1;2001;1994:12;1956:52;2036:9;2030:16;2089:5;2082:13;2075:21;2068:5;2065:32;2055:60;;2111:1;2108;2101:12;2496:222;2561:9;;;2582:10;;;2579:133;;;2634:10;2629:3;2625:20;2622:1;2615:31;2669:4;2666:1;2659:15;2697:4;2694:1;2687:15;2496:222;501:4582:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "501:4582:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5925:99:25;6000:16;;5925:99;;;160:25:81;;;148:2;133:18;5925:99:25;;;;;;;;1339:23;;;;;-1:-1:-1;;;;;1339:23:25;;;;;;-1:-1:-1;;;;;360:32:81;;;342:51;;330:2;315:18;1339:23:25;196:203:81;1369:27:25;;;;;;:::i;:::-;;:::i;2991:211::-;;;;;;:::i;:::-;;:::i;1625:79::-;;;;;;:::i;:::-;;;;;;4214:388;;;:::i;:::-;;;;1432:25:81;;;1488:2;1473:18;;1466:34;;;;1516:18;;;1509:34;1420:2;1405:18;4214:388:25;1230:319:81;4472:371:24;;;:::i;892:37::-;;;;;4734:81:25;4792:20;4734:81;;6030:230;;;;;;:::i;:::-;;:::i;:::-;;;1719:14:81;;1712:22;1694:41;;1682:2;1667:18;6030:230:25;1554:187:81;1710:143:25;;;;;;:::i;:::-;;:::i;1006:21:24:-;;;;;;2080:101:25;;;;;;:::i;:::-;;:::i;1084:23::-;;;;;-1:-1:-1;;;;;1084:23:25;;;627:40:24;;;;;978:21;;;;;-1:-1:-1;;;;;978:21:24;;;2798:150;;;:::i;2410:221:25:-;;;;;;:::i;:::-;;:::i;764:40:24:-;;;;;1034:42;;1074:2;1034:42;;936:34;;;;;856:29;;;;;4895:76:25;4957:6;;-1:-1:-1;;;4957:6:25;;;;4895:76;;3067:129:24;3176:11;3067:129;;4884:191;;;:::i;674:36::-;;;;;716:41;;;;;587:33;;;;;811:39;;;;;4609:118:25;;;;;;:::i;:::-;4684:25;4711:13;4609:118;;;;;;;;2143:25:81;;;2199:2;2184:18;;2177:34;;;;2116:18;4609:118:25;1969:248:81;3271:149:25;;;;;;:::i;:::-;;:::i;2953:36:24:-;;;;;;5693:226:25;;;:::i;1113:18::-;;;;;-1:-1:-1;;;;;1113:18:25;;;1369:27;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1369:27:25;;-1:-1:-1;1369:27:25;:::o;2991:211::-;3063:7;3100:4;-1:-1:-1;;;;;3084:21:25;;;3081:70;;3143:8;;3114:10;;:26;;-1:-1:-1;;;3114:26:25;;-1:-1:-1;;;;;360:32:81;;;3114:26:25;;;342:51:81;3114:10:25;;;;:20;;315:18:81;;3114:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;;:::i;:::-;3107:44;2991:211;-1:-1:-1;;2991:211:25:o;3081:70::-;3168:10;;:26;;-1:-1:-1;;;3168:26:25;;-1:-1:-1;;;;;360:32:81;;;3168:26:25;;;342:51:81;3168:10:25;;;;:20;;315:18:81;;3168:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4214:388::-;685:5;;4324:15;;;;;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;;;;;;;;;4432:20:::1;:18;:20::i;:::-;4424:54;;;::::0;-1:-1:-1;;;4424:54:25;;3450:2:81;4424:54:25::1;::::0;::::1;3432:21:81::0;3489:2;3469:18;;;3462:30;-1:-1:-1;;;3508:18:81;;;3501:51;3569:18;;4424:54:25::1;3248:345:81::0;4424:54:25::1;4567:19;4877:4:::0;4868:13;;-1:-1:-1;;;;4868:13:25;-1:-1:-1;;;4868:13:25;;;4821:68;4567:19:::1;4214:388:::0;;;:::o;4472:371:24:-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;3800:2:81;418:44:25;;;3782:21:81;3839:1;3819:18;;;3812:29;-1:-1:-1;;;3857:18:81;;;3850:39;3906:18;;418:44:25;3598:332:81;418:44:25;4543:15:24::1;4528:12;:30;4520:54;;;::::0;-1:-1:-1;;;4520:54:24;;4137:2:81;4520:54:24::1;::::0;::::1;4119:21:81::0;4176:2;4156:18;;;4149:30;-1:-1:-1;;;4195:18:81;;;4188:41;4246:18;;4520:54:24::1;3935:335:81::0;4520:54:24::1;4584:19;:17;:19::i;:::-;4619:6;::::0;4615:22;4630:7:::1;4615:22;4691:10;::::0;4723:6:::1;::::0;4691:39:::1;::::0;-1:-1:-1;;;4691:39:24;;4711:10:::1;4691:39;::::0;::::1;4449:51:81::0;4516:18;;;4509:34;;;;-1:-1:-1;;;;;4691:10:24;;::::1;::::0;:19:::1;::::0;4422:18:81;;4691:39:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4750:1:24::1;4741:6;:10:::0;;;4762:15:::1;:22:::0;;-1:-1:-1;;4762:22:24::1;4780:4;4762:22:::0;;::::1;::::0;;;4795:5;:40:::1;::::0;-1:-1:-1;;;4795:40:24;;4822:4:::1;4795:40;::::0;::::1;5004:51:81::0;5071:18;;;5064:50;;;;-1:-1:-1;;;;;4795:5:24::1;::::0;:18:::1;::::0;4977::81;;4795:40:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;472:1:25;4472:371:24:o:0;6030:230:25:-;6092:4;6123:67;;;;;;;;;;;;;;-1:-1:-1;;;6123:67:25;;;6147:34;6175:4;6147:19;:34::i;:::-;6183:6;6123:11;:67::i;:::-;6246:6;6208:34;6236:4;6208:19;:34::i;:::-;:44;;;6030:230;-1:-1:-1;;6030:230:25:o;1710:143::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;5583:2:81;522:78:25;;;5565:21:81;5622:2;5602:18;;;5595:30;-1:-1:-1;;;5641:18:81;;;5634:41;5692:18;;522:78:25;5381:335:81;522:78:25;-1:-1:-1;;;;;1792:23:25;::::1;1784:32;;;::::0;::::1;;1826:8;:20:::0;;-1:-1:-1;;;;;;1826:20:25::1;-1:-1:-1::0;;;;;1826:20:25;;;::::1;::::0;;;::::1;::::0;;1710:143::o;2080:101::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;5583:2:81;522:78:25;;;5565:21:81;5622:2;5602:18;;;5595:30;-1:-1:-1;;;5641:18:81;;;5634:41;5692:18;;522:78:25;5381:335:81;522:78:25;2150:5:::1;:23:::0;;-1:-1:-1;;;;;;2150:23:25::1;-1:-1:-1::0;;;;;2150:23:25;;;::::1;::::0;;;::::1;::::0;;2080:101::o;2798:150:24:-;2866:4;2888:10;;:35;;-1:-1:-1;;;2888:35:24;;2917:4;2888:35;;;342:51:81;2927:14:24;;-1:-1:-1;;;;;2888:10:24;;:20;;315:18:81;;2888:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;2881:60;;2798:150;:::o;2410:221:25:-;685:5;;2480:4;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;2580:10:::1;::::0;;2608:5;2580:43:::1;::::0;-1:-1:-1;;;2580:43:25;;-1:-1:-1;;;;;2608:5:25;;::::1;2580:43;::::0;::::1;4449:51:81::0;4516:18;;;4509:34;;;2580:10:25;::::1;::::0;:19:::1;::::0;4422:18:81;;2580:43:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4884:191:24:-:0;4943:4;4987:28;1074:2;4987:12;:28;:::i;:::-;4968:15;:47;;:62;;;;-1:-1:-1;5019:6:24;;:11;4968:62;4967:99;;;-1:-1:-1;5051:15:24;;;;4967:99;4958:109;;4884:191;:::o;3271:149:25:-;3326:10;;:57;;-1:-1:-1;;;3326:57:25;;3350:10;3326:57;;;6091:34:81;3369:4:25;6141:18:81;;;6134:43;6193:18;;;6186:34;;;-1:-1:-1;;;;;3326:10:25;;;;:23;;6026:18:81;;3326:57:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3406:6;3394:8;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3271:149:25:o;5693:226::-;685:5;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;5775:34:::1;5803:4;5775:19;:34::i;:::-;5756:16;:53:::0;5824:5:::1;::::0;:24:::1;::::0;;-1:-1:-1;;;5824:24:25;;;;-1:-1:-1;;;;;5824:5:25;;::::1;::::0;:22:::1;::::0;:24:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:24:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5820:90;;;5869:5;::::0;5893:16:::1;::::0;5869:41:::1;::::0;-1:-1:-1;;;5869:41:25;;-1:-1:-1;;;;;5869:5:25;;::::1;::::0;:23:::1;::::0;:41:::1;::::0;::::1;;160:25:81::0;;;148:2;133:18;;14:177;5869:41:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5850:16;:60:::0;5693:226::o;981:164:30:-;1046:7;1072:21;1083:1;598:4;1091:1;1072:10;:21::i;:::-;1065:28;981:164;-1:-1:-1;;;981:164:30:o;3613:732:24:-;3825:6;;:11;3817:42;;;;-1:-1:-1;;;3817:42:24;;6433:2:81;3817:42:24;;;6415:21:81;6472:2;6452:18;;;6445:30;-1:-1:-1;;;6491:18:81;;;6484:48;6549:18;;3817:42:24;6231:342:81;3817:42:24;3990:1;3981:6;:10;3613:732::o;3948:391::-;3650:695;3613:732::o;10843:157:46:-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:46;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:46;-1:-1:-1;;;10932:60:46;;;10916:15;:77::i;:::-;10843:157;;;:::o;1507:535:30:-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;181:376:46:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;404:180:81:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:81;;404:180;-1:-1:-1;404:180:81:o;589:131::-;-1:-1:-1;;;;;664:31:81;;654:42;;644:70;;710:1;707;700:12;725:247;784:6;837:2;825:9;816:7;812:23;808:32;805:52;;;853:1;850;843:12;805:52;892:9;879:23;911:31;936:5;911:31;:::i;977:248::-;1045:6;1053;1106:2;1094:9;1085:7;1081:23;1077:32;1074:52;;;1122:1;1119;1112:12;1074:52;-1:-1:-1;;1145:23:81;;;1215:2;1200:18;;;1187:32;;-1:-1:-1;977:248:81:o;2445:184::-;2515:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:52;;;2584:1;2581;2574:12;2536:52;-1:-1:-1;2607:16:81;;2445:184;-1:-1:-1;2445:184:81:o;2634:127::-;2695:10;2690:3;2686:20;2683:1;2676:31;2726:4;2723:1;2716:15;2750:4;2747:1;2740:15;2766:128;2833:9;;;2854:11;;;2851:37;;;2868:18;;:::i;2899:344::-;3101:2;3083:21;;;3140:2;3120:18;;;3113:30;-1:-1:-1;;;3174:2:81;3159:18;;3152:50;3234:2;3219:18;;2899:344::o;4554:277::-;4621:6;4674:2;4662:9;4653:7;4649:23;4645:32;4642:52;;;4690:1;4687;4680:12;4642:52;4722:9;4716:16;4775:5;4768:13;4761:21;4754:5;4751:32;4741:60;;4797:1;4794;4787:12;5125:251;5195:6;5248:2;5236:9;5227:7;5223:23;5219:32;5216:52;;;5264:1;5261;5254:12;5216:52;5296:9;5290:16;5315:31;5340:5;5315:31;:::i;5721:125::-;5786:9;;;5807:10;;;5804:36;;;5820:18;;:::i;6578:678::-;6783:2;6772:9;6765:21;6746:4;6815:6;6809:13;6858:6;6853:2;6842:9;6838:18;6831:34;6883:1;6893:145;6907:6;6904:1;6901:13;6893:145;;;7021:4;7005:14;;;7001:25;;6995:32;6989:3;6970:17;;;6966:27;6959:69;6922:12;6893:145;;;6897:3;7088:1;7082:3;7073:6;7062:9;7058:22;7054:32;7047:43;7158:3;7151:2;7147:7;7142:2;7134:6;7130:15;7126:29;7115:9;7111:45;7107:55;7099:63;;;7200:6;7193:4;7182:9;7178:20;7171:36;7243:6;7238:2;7227:9;7223:18;7216:34;6578:678;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "20879": [
        {
          "start": 1216,
          "length": 32
        }
      ],
      "20881": [
        {
          "start": 864,
          "length": 32
        }
      ],
      "20883": [
        {
          "start": 1089,
          "length": 32
        },
        {
          "start": 1138,
          "length": 32
        }
      ],
      "20885": [
        {
          "start": 1177,
          "length": 32
        }
      ],
      "20887": [
        {
          "start": 949,
          "length": 32
        }
      ],
      "20889": [
        {
          "start": 1255,
          "length": 32
        },
        {
          "start": 2902,
          "length": 32
        }
      ],
      "20891": [
        {
          "start": 1035,
          "length": 32
        }
      ],
      "20893": [
        {
          "start": 717,
          "length": 32
        },
        {
          "start": 1922,
          "length": 32
        },
        {
          "start": 3200,
          "length": 32
        }
      ],
      "20895": [
        {
          "start": 996,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "Utilizer()": "350896fe",
    "balanceOfUnderlying(address)": "3af9e669",
    "cash()": "961be391",
    "claim()": "4e71d92d",
    "estimatedTotalAssets()": "efbb5cb0",
    "getMaturityBalance()": "1104aafd",
    "instrumentApprovalCondition()": "83e754a0",
    "isLiquid(uint256)": "537d9409",
    "isLocked()": "a4e2d634",
    "liquidateAllPositions()": "50bb4beb",
    "liquidatePosition(uint256)": "cdddd4e5",
    "longCollateral()": "cb29bb9a",
    "maturityTime()": "4e8bfdaa",
    "onMarketApproval(uint256,uint256)": "416288dd",
    "oracle()": "7dc0d1d0",
    "prepareWithdraw()": "49dcf4ed",
    "pricePerContract()": "c576ce01",
    "profit()": "66d16cc3",
    "pullRawFunds(uint256)": "d832f791",
    "queryPrice()": "b0667cf8",
    "readyForWithdrawal()": "bdf0f253",
    "redeemUnderlying(uint256)": "852a12e3",
    "setOracle()": "5b89c489",
    "setUtilizer(address)": "57b25996",
    "setVault(address)": "6817031b",
    "shortCollateral()": "870dcaeb",
    "store_internal_balance()": "f3aa68d3",
    "strikePrice()": "c52987cf",
    "testqueriedPrice()": "e0186b8d",
    "timeThreshold()": "87479487",
    "tradeTime()": "8eac2066",
    "underlying()": "6f307dc3",
    "underlyingAsset()": "7158da7c",
    "utilizer()": "c9ac4332",
    "validators(uint256)": "35aa2e44",
    "vault()": "fbfa77cf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerContract\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shortCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_cash\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityTransferFrom\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimatedTotalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaturityBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instrumentApprovalCondition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isLiquid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAllPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountFreed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountNeeded\",\"type\":\"uint256\"}],\"name\":\"liquidatePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"}],\"name\":\"onMarketApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prepareWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debtPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullRawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readyForWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Utilizer\",\"type\":\"address\"}],\"name\":\"setUtilizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"store_internal_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testqueriedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOfUnderlying(address)\":{\"details\":\"May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers\",\"params\":{\"user\":\"The user to get the underlying balance of.\"},\"returns\":{\"_0\":\"The user's Instrument balance in underlying tokens.\"}},\"constructor\":{\"params\":{\"_pricePerContract\":\"is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values \",\"_shortCollateral\":\"depends on how much underlyingAsset is in the vault. \"}},\"prepareWithdraw()\":{\"details\":\"prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs\"},\"redeemUnderlying(uint256)\":{\"params\":{\"amount\":\"The amount of underlying tokens to withdraw.\"},\"returns\":{\"_0\":\"An error code, or 0 if the withdrawal was successful.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"Utilizer()\":{\"notice\":\"address of user who submits the liquidity proposal \"},\"balanceOfUnderlying(address)\":{\"notice\":\"Returns a user's Instrument balance in underlying tokens.\"},\"claim()\":{\"notice\":\"either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings \"},\"instrumentApprovalCondition()\":{\"notice\":\"returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  \"},\"onMarketApproval(uint256,uint256)\":{\"notice\":\"hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic\"},\"prepareWithdraw()\":{\"notice\":\"checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, \"},\"pullRawFunds(uint256)\":{\"notice\":\"raw funds should not be harvested by the vault\"},\"queryPrice()\":{\"notice\":\"queries oracle for the latest price of the underlying \"},\"readyForWithdrawal()\":{\"notice\":\"called at maturity\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Withdraws a specific amount of underlying tokens from the Instrument.\"},\"store_internal_balance()\":{\"notice\":\"called before resolve, to avoid calculating redemption price based on manipulations \"}},\"notice\":\"This contract acts as an OTC option platform Utilizer will \\\"propose\\\" a strike price to buy At maturity, premiums from utilizer will be collected by the vault when expires below strike price \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/dov.sol\":\"CoveredCallOTC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/math/=lib/prb-math/src/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/bonds/GBC.sol\":{\"keccak256\":\"0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84\",\"dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T\"]},\"contracts/bonds/boundedDerivatives.sol\":{\"keccak256\":\"0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0\",\"urls\":[\"bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c\",\"dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H\"]},\"contracts/bonds/libraries.sol\":{\"keccak256\":\"0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091\",\"urls\":[\"bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e\",\"dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV\"]},\"contracts/bonds/synthetic.sol\":{\"keccak256\":\"0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d\",\"urls\":[\"bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0\",\"dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA\"]},\"contracts/chainlink/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c\",\"dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM\"]},\"contracts/chainlink/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca\",\"dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc\"]},\"contracts/instruments/IRateCalculator.sol\":{\"keccak256\":\"0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a\",\"dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1\"]},\"contracts/instruments/VaultAccount.sol\":{\"keccak256\":\"0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1\",\"dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc\"]},\"contracts/instruments/poolConstants.sol\":{\"keccak256\":\"0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4\",\"urls\":[\"bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a\",\"dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx\"]},\"contracts/instruments/poolInstrument.sol\":{\"keccak256\":\"0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900\",\"urls\":[\"bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2\",\"dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q\"]},\"contracts/protocol/controller.sol\":{\"keccak256\":\"0xe58c38fb1a7e1c0ab54e8f004acc2bdf9b2cf648b0899b07ba6479989028535b\",\"urls\":[\"bzz-raw://1a9f44ce8175fcae6c4ee9f5336cef3c217285bc4024586abe38043b0f82d719\",\"dweb:/ipfs/QmVsti9n4qNndumVdmtjw4TPwX6fJGUEEsozbfmxVDuLex\"]},\"contracts/protocol/factories.sol\":{\"keccak256\":\"0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78\",\"urls\":[\"bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382\",\"dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa\"]},\"contracts/protocol/marketmanager.sol\":{\"keccak256\":\"0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2\",\"urls\":[\"bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1\",\"dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu\"]},\"contracts/protocol/reputationmanager.sol\":{\"keccak256\":\"0x06b2855678353af07ac5ec030ebbe0007b42c86ee1d4a7dbd6dc9b2a54e30900\",\"urls\":[\"bzz-raw://2a7732fcb8529ef671bfa808281c19a7b28906cecdd3d6a7d45e38c8781ad9d4\",\"dweb:/ipfs/QmPt5Wui91sDG9gRjqVxs4Tu4QWFzMgbHPDL5oAsfUYtuv\"]},\"contracts/protocol/reputationtoken.sol\":{\"keccak256\":\"0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863\",\"urls\":[\"bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e\",\"dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et\"]},\"contracts/protocol/validatorManager.sol\":{\"keccak256\":\"0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c\",\"urls\":[\"bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d\",\"dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h\"]},\"contracts/utils/helpers.sol\":{\"keccak256\":\"0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779\",\"urls\":[\"bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933\",\"dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D\"]},\"contracts/vaults/auth/Auth.sol\":{\"keccak256\":\"0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e\",\"dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ\"]},\"contracts/vaults/dov.sol\":{\"keccak256\":\"0x7584e16e518fe92bb0d62f0fd3e75d99c2a58282a0d5011b1f115232aeaa1417\",\"urls\":[\"bzz-raw://8f7e8cc8c1dc91252ef9df6fb80fcc24049805cc7d29980a110bd1916b896054\",\"dweb:/ipfs/QmY4pZ2wMbZd3dWs6bsBsttyLiytD2A4LZFkiZTKDkERNn\"]},\"contracts/vaults/instrument.sol\":{\"keccak256\":\"0x32f237c5ee3b8b43f5fdba636ea6b1e1feb97b83d931ed0c3e2e8c9f3d8bb6df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fad67ed5bdf39af52990d801e859ac7d1849ebe9a4317cb59e007268ac0e95b5\",\"dweb:/ipfs/QmcHoALuanxzAgRXCtBnEZCXP76sfDfbgvSawYHYU3r4bV\"]},\"contracts/vaults/mixins/ERC4626.sol\":{\"keccak256\":\"0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb\",\"dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY\"]},\"contracts/vaults/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"contracts/vaults/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"contracts/vaults/utils/SafeCastLib.sol\":{\"keccak256\":\"0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e\",\"dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd\"]},\"contracts/vaults/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"contracts/vaults/vault.sol\":{\"keccak256\":\"0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9\",\"urls\":[\"bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247\",\"dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4\",\"dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427\",\"dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_utilizer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_underlyingAsset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerContract",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shortCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_longCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_cash",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tradeTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityTransferFrom",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "estimatedTotalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaturityBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "instrumentApprovalCondition",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLiquid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateAllPositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountFreed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountNeeded",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_liquidatedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "longCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maturityTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yield",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onMarketApproval"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_profit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_debtPayment",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pricePerContract",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "profit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullRawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "queryPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "readyForWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemUnderlying",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOracle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_Utilizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUtilizer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVault"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "store_internal_balance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strikePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testqueriedPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradeTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingAsset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validators",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract Vault",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOfUnderlying(address)": {
            "details": "May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers",
            "params": {
              "user": "The user to get the underlying balance of."
            },
            "returns": {
              "_0": "The user's Instrument balance in underlying tokens."
            }
          },
          "constructor": {
            "params": {
              "_pricePerContract": "is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values ",
              "_shortCollateral": "depends on how much underlyingAsset is in the vault. "
            }
          },
          "prepareWithdraw()": {
            "details": "prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs"
          },
          "redeemUnderlying(uint256)": {
            "params": {
              "amount": "The amount of underlying tokens to withdraw."
            },
            "returns": {
              "_0": "An error code, or 0 if the withdrawal was successful."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "Utilizer()": {
            "notice": "address of user who submits the liquidity proposal "
          },
          "balanceOfUnderlying(address)": {
            "notice": "Returns a user's Instrument balance in underlying tokens."
          },
          "claim()": {
            "notice": "either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings "
          },
          "instrumentApprovalCondition()": {
            "notice": "returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  "
          },
          "onMarketApproval(uint256,uint256)": {
            "notice": "hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic"
          },
          "prepareWithdraw()": {
            "notice": "checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, "
          },
          "pullRawFunds(uint256)": {
            "notice": "raw funds should not be harvested by the vault"
          },
          "queryPrice()": {
            "notice": "queries oracle for the latest price of the underlying "
          },
          "readyForWithdrawal()": {
            "notice": "called at maturity"
          },
          "redeemUnderlying(uint256)": {
            "notice": "Withdraws a specific amount of underlying tokens from the Instrument."
          },
          "store_internal_balance()": {
            "notice": "called before resolve, to avoid calculating redemption price based on manipulations "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/math/=lib/prb-math/src/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vaults/dov.sol": "CoveredCallOTC"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bonds/GBC.sol": {
        "keccak256": "0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488",
        "urls": [
          "bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84",
          "dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T"
        ],
        "license": "UNLICENSED"
      },
      "contracts/bonds/boundedDerivatives.sol": {
        "keccak256": "0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0",
        "urls": [
          "bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c",
          "dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H"
        ],
        "license": null
      },
      "contracts/bonds/libraries.sol": {
        "keccak256": "0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091",
        "urls": [
          "bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e",
          "dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV"
        ],
        "license": null
      },
      "contracts/bonds/synthetic.sol": {
        "keccak256": "0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d",
        "urls": [
          "bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0",
          "dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA"
        ],
        "license": null
      },
      "contracts/chainlink/VRFConsumerBaseV2.sol": {
        "keccak256": "0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1",
        "urls": [
          "bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c",
          "dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM"
        ],
        "license": "MIT"
      },
      "contracts/chainlink/VRFCoordinatorV2Interface.sol": {
        "keccak256": "0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2",
        "urls": [
          "bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca",
          "dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc"
        ],
        "license": "MIT"
      },
      "contracts/instruments/IRateCalculator.sol": {
        "keccak256": "0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6",
        "urls": [
          "bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a",
          "dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1"
        ],
        "license": "ISC"
      },
      "contracts/instruments/VaultAccount.sol": {
        "keccak256": "0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff",
        "urls": [
          "bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1",
          "dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc"
        ],
        "license": "ISC"
      },
      "contracts/instruments/poolConstants.sol": {
        "keccak256": "0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4",
        "urls": [
          "bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a",
          "dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx"
        ],
        "license": null
      },
      "contracts/instruments/poolInstrument.sol": {
        "keccak256": "0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900",
        "urls": [
          "bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2",
          "dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q"
        ],
        "license": null
      },
      "contracts/protocol/controller.sol": {
        "keccak256": "0xe58c38fb1a7e1c0ab54e8f004acc2bdf9b2cf648b0899b07ba6479989028535b",
        "urls": [
          "bzz-raw://1a9f44ce8175fcae6c4ee9f5336cef3c217285bc4024586abe38043b0f82d719",
          "dweb:/ipfs/QmVsti9n4qNndumVdmtjw4TPwX6fJGUEEsozbfmxVDuLex"
        ],
        "license": null
      },
      "contracts/protocol/factories.sol": {
        "keccak256": "0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78",
        "urls": [
          "bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382",
          "dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa"
        ],
        "license": null
      },
      "contracts/protocol/marketmanager.sol": {
        "keccak256": "0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2",
        "urls": [
          "bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1",
          "dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu"
        ],
        "license": null
      },
      "contracts/protocol/reputationmanager.sol": {
        "keccak256": "0x06b2855678353af07ac5ec030ebbe0007b42c86ee1d4a7dbd6dc9b2a54e30900",
        "urls": [
          "bzz-raw://2a7732fcb8529ef671bfa808281c19a7b28906cecdd3d6a7d45e38c8781ad9d4",
          "dweb:/ipfs/QmPt5Wui91sDG9gRjqVxs4Tu4QWFzMgbHPDL5oAsfUYtuv"
        ],
        "license": null
      },
      "contracts/protocol/reputationtoken.sol": {
        "keccak256": "0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863",
        "urls": [
          "bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e",
          "dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et"
        ],
        "license": null
      },
      "contracts/protocol/validatorManager.sol": {
        "keccak256": "0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c",
        "urls": [
          "bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d",
          "dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h"
        ],
        "license": null
      },
      "contracts/utils/helpers.sol": {
        "keccak256": "0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779",
        "urls": [
          "bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933",
          "dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D"
        ],
        "license": null
      },
      "contracts/vaults/auth/Auth.sol": {
        "keccak256": "0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7",
        "urls": [
          "bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e",
          "dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/dov.sol": {
        "keccak256": "0x7584e16e518fe92bb0d62f0fd3e75d99c2a58282a0d5011b1f115232aeaa1417",
        "urls": [
          "bzz-raw://8f7e8cc8c1dc91252ef9df6fb80fcc24049805cc7d29980a110bd1916b896054",
          "dweb:/ipfs/QmY4pZ2wMbZd3dWs6bsBsttyLiytD2A4LZFkiZTKDkERNn"
        ],
        "license": null
      },
      "contracts/vaults/instrument.sol": {
        "keccak256": "0x32f237c5ee3b8b43f5fdba636ea6b1e1feb97b83d931ed0c3e2e8c9f3d8bb6df",
        "urls": [
          "bzz-raw://fad67ed5bdf39af52990d801e859ac7d1849ebe9a4317cb59e007268ac0e95b5",
          "dweb:/ipfs/QmcHoALuanxzAgRXCtBnEZCXP76sfDfbgvSawYHYU3r4bV"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/mixins/ERC4626.sol": {
        "keccak256": "0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2",
        "urls": [
          "bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb",
          "dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeCastLib.sol": {
        "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
        "urls": [
          "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
          "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/vault.sol": {
        "keccak256": "0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9",
        "urls": [
          "bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247",
          "dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2",
        "urls": [
          "bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4",
          "dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab",
        "urls": [
          "bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427",
          "dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vaults/dov.sol",
    "id": 21142,
    "exportedSymbols": {
      "Auth": [
        20847
      ],
      "Controller": [
        12406
      ],
      "CoveredCallOTC": [
        21141
      ],
      "ERC20": [
        24133
      ],
      "ERC4626": [
        23522
      ],
      "FixedPointMathLib": [
        24816
      ],
      "Instrument": [
        21600
      ],
      "MarketManager": [
        15445
      ],
      "Math": [
        56517
      ],
      "PoolInstrument": [
        9109
      ],
      "SafeCastLib": [
        25050
      ],
      "SafeTransferLib": [
        25135
      ],
      "Vault": [
        27323
      ],
      "console": [
        44703
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5084:24",
    "nodes": [
      {
        "id": 20862,
        "nodeType": "PragmaDirective",
        "src": "0:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 20863,
        "nodeType": "ImportDirective",
        "src": "26:21:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/vault.sol",
        "file": "./vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 27324,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20865,
        "nodeType": "ImportDirective",
        "src": "48:41:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/tokens/ERC20.sol",
        "file": "./tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 24134,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20864,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24133,
              "src": "56:5:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20866,
        "nodeType": "ImportDirective",
        "src": "90:52:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "openzeppelin-contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 56518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20868,
        "nodeType": "ImportDirective",
        "src": "143:64:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/utils/FixedPointMathLib.sol",
        "file": "./utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 24817,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20867,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24816,
              "src": "151:17:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20869,
        "nodeType": "ImportDirective",
        "src": "208:31:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 44704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20871,
        "nodeType": "ImportDirective",
        "src": "240:44:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/instrument.sol",
        "file": "./instrument.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21142,
        "sourceUnit": 22903,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20870,
              "name": "Instrument",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21600,
              "src": "248:10:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21141,
        "nodeType": "ContractDefinition",
        "src": "501:4582:24",
        "nodes": [
          {
            "id": 20877,
            "nodeType": "UsingForDirective",
            "src": "544:36:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 20875,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "550:17:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24816,
              "src": "550:17:24"
            },
            "typeName": {
              "id": 20876,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 20879,
            "nodeType": "VariableDeclaration",
            "src": "587:33:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c9ac4332",
            "mutability": "immutable",
            "name": "utilizer",
            "nameLocation": "612:8:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20878,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20881,
            "nodeType": "VariableDeclaration",
            "src": "627:40:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "7158da7c",
            "mutability": "immutable",
            "name": "underlyingAsset",
            "nameLocation": "652:15:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20880,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "627:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20883,
            "nodeType": "VariableDeclaration",
            "src": "674:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c52987cf",
            "mutability": "immutable",
            "name": "strikePrice",
            "nameLocation": "699:11:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20882,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20885,
            "nodeType": "VariableDeclaration",
            "src": "716:41:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c576ce01",
            "mutability": "immutable",
            "name": "pricePerContract",
            "nameLocation": "741:16:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20884,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "716:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20887,
            "nodeType": "VariableDeclaration",
            "src": "764:40:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "870dcaeb",
            "mutability": "immutable",
            "name": "shortCollateral",
            "nameLocation": "789:15:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20886,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "764:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20889,
            "nodeType": "VariableDeclaration",
            "src": "811:39:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb29bb9a",
            "mutability": "immutable",
            "name": "longCollateral",
            "nameLocation": "836:14:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20888,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20891,
            "nodeType": "VariableDeclaration",
            "src": "856:29:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "961be391",
            "mutability": "immutable",
            "name": "cash",
            "nameLocation": "881:4:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20890,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20893,
            "nodeType": "VariableDeclaration",
            "src": "892:37:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e8bfdaa",
            "mutability": "immutable",
            "name": "maturityTime",
            "nameLocation": "917:12:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20892,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "892:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20895,
            "nodeType": "VariableDeclaration",
            "src": "936:34:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "8eac2066",
            "mutability": "immutable",
            "name": "tradeTime",
            "nameLocation": "961:9:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20894,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "936:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20897,
            "nodeType": "VariableDeclaration",
            "src": "978:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "993:6:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20896,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20899,
            "nodeType": "VariableDeclaration",
            "src": "1006:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "66d16cc3",
            "mutability": "mutable",
            "name": "profit",
            "nameLocation": "1021:6:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20898,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1006:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20902,
            "nodeType": "VariableDeclaration",
            "src": "1034:42:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "87479487",
            "mutability": "constant",
            "name": "timeThreshold",
            "nameLocation": "1058:13:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20900,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 20901,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1074:2:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "id": 20904,
            "nodeType": "VariableDeclaration",
            "src": "1083:20:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utilizerClaimed",
            "nameLocation": "1088:15:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20903,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1083:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 20991,
            "nodeType": "FunctionDefinition",
            "src": "1373:1212:24",
            "nodes": [],
            "body": {
              "id": 20990,
              "nodeType": "Block",
              "src": "2013:572:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20935,
                          "name": "_shortCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20917,
                          "src": "2085:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 20938,
                              "name": "_pricePerContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20915,
                              "src": "2132:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 20936,
                              "name": "_longCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20919,
                              "src": "2105:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 20937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2121:10:24",
                            "memberName": "divWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24751,
                            "src": "2105:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 20939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2105:45:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2085:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742073657474696e67",
                        "id": 20941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2152:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        },
                        "value": "incorrect setting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        }
                      ],
                      "id": 20934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2077:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:95:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20943,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:95:24"
                },
                {
                  "expression": {
                    "id": 20946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20944,
                      "name": "utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20879,
                      "src": "2183:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20945,
                      "name": "_utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20909,
                      "src": "2194:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2183:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20947,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:20:24"
                },
                {
                  "expression": {
                    "id": 20953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20948,
                      "name": "underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20881,
                      "src": "2214:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20951,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21242,
                          "src": "2240:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24133",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$24133",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 20950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2232:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 20949,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2232:19:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2214:37:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20954,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:37:24"
                },
                {
                  "expression": {
                    "id": 20957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20955,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20883,
                      "src": "2283:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20956,
                      "name": "_strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20913,
                      "src": "2297:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2283:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20958,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:26:24"
                },
                {
                  "expression": {
                    "id": 20961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20959,
                      "name": "pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20885,
                      "src": "2320:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20960,
                      "name": "_pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20915,
                      "src": "2339:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2320:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20962,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:36:24"
                },
                {
                  "expression": {
                    "id": 20965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20963,
                      "name": "shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20887,
                      "src": "2367:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20964,
                      "name": "_shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20917,
                      "src": "2385:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2367:34:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20966,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:34:24"
                },
                {
                  "expression": {
                    "id": 20969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20967,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20889,
                      "src": "2412:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20968,
                      "name": "_longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20919,
                      "src": "2429:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2412:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20970,
                  "nodeType": "ExpressionStatement",
                  "src": "2412:32:24"
                },
                {
                  "expression": {
                    "id": 20973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20971,
                      "name": "cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20891,
                      "src": "2455:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20972,
                      "name": "_cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20921,
                      "src": "2462:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2455:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20974,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:12:24"
                },
                {
                  "expression": {
                    "id": 20977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20975,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20897,
                      "src": "2477:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20976,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20923,
                      "src": "2486:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2477:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20978,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:16:24"
                },
                {
                  "expression": {
                    "id": 20981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20979,
                      "name": "tradeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20895,
                      "src": "2504:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20980,
                      "name": "_tradeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20927,
                      "src": "2516:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2504:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20982,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:22:24"
                },
                {
                  "expression": {
                    "id": 20988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20983,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20893,
                      "src": "2537:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 20987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 20984,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2552:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 20985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2558:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2552:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 20986,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20925,
                        "src": "2570:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2552:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2537:41:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20989,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:41:24"
                }
              ]
            },
            "documentation": {
              "id": 20905,
              "nodeType": "StructuredDocumentation",
              "src": "1111:257:24",
              "text": "@param _shortCollateral depends on how much underlyingAsset is in the vault. \n @param _pricePerContract is the price that the utilizer is willing to buy \n the call option. Usually implied vol here is lower than external implied vol values "
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 20930,
                    "name": "_vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20907,
                    "src": "1995:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 20931,
                    "name": "_utilizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20909,
                    "src": "2003:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 20932,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 20929,
                  "name": "Instrument",
                  "nameLocations": [
                    "1984:10:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21600,
                  "src": "1984:10:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1984:29:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 20928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20907,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1393:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1385:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20909,
                  "mutability": "mutable",
                  "name": "_utilizer",
                  "nameLocation": "1417:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1409:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20911,
                  "mutability": "mutable",
                  "name": "_underlyingAsset",
                  "nameLocation": "1445:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1437:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20913,
                  "mutability": "mutable",
                  "name": "_strikePrice",
                  "nameLocation": "1480:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1472:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20915,
                  "mutability": "mutable",
                  "name": "_pricePerContract",
                  "nameLocation": "1511:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1503:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20917,
                  "mutability": "mutable",
                  "name": "_shortCollateral",
                  "nameLocation": "1611:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1603:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20919,
                  "mutability": "mutable",
                  "name": "_longCollateral",
                  "nameLocation": "1719:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1711:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20921,
                  "mutability": "mutable",
                  "name": "_cash",
                  "nameLocation": "1821:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1813:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20923,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "1846:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1838:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20925,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1907:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1899:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20927,
                  "mutability": "mutable",
                  "name": "_tradeTime",
                  "nameLocation": "1934:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 20991,
                  "src": "1926:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1384:599:24"
            },
            "returnParameters": {
              "id": 20933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2013:0:24"
            },
            "scope": 21141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 20995,
            "nodeType": "FunctionDefinition",
            "src": "2591:30:24",
            "nodes": [],
            "body": {
              "id": 20994,
              "nodeType": "Block",
              "src": "2619:2:24",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "5b89c489",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOracle",
            "nameLocation": "2600:9:24",
            "parameters": {
              "id": 20992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:2:24"
            },
            "returnParameters": {
              "id": 20993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2619:0:24"
            },
            "scope": 21141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21013,
            "nodeType": "FunctionDefinition",
            "src": "2798:150:24",
            "nodes": [],
            "body": {
              "id": 21012,
              "nodeType": "Block",
              "src": "2871:77:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21006,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2917:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21141",
                                "typeString": "contract CoveredCallOTC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21141",
                                "typeString": "contract CoveredCallOTC"
                              }
                            ],
                            "id": 21005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2909:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2909:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2909:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21002,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21242,
                          "src": "2888:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24133",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 21003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2899:9:24",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23776,
                        "src": "2888:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 21008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2888:35:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 21009,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20889,
                      "src": "2927:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2888:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21001,
                  "id": 21011,
                  "nodeType": "Return",
                  "src": "2881:60:24"
                }
              ]
            },
            "baseFunctions": [
              21599
            ],
            "documentation": {
              "id": 20996,
              "nodeType": "StructuredDocumentation",
              "src": "2627:166:24",
              "text": "@notice returns true if the instrument can be approved\n and funds can be directed from vault. Utilizer must have escrowed\n to this contract before  "
            },
            "functionSelector": "83e754a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "instrumentApprovalCondition",
            "nameLocation": "2807:27:24",
            "overrides": {
              "id": 20998,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2844:8:24"
            },
            "parameters": {
              "id": 20997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:2:24"
            },
            "returnParameters": {
              "id": 21001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21013,
                  "src": "2866:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20999,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2865:6:24"
            },
            "scope": 21141,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21016,
            "nodeType": "VariableDeclaration",
            "src": "2953:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "e0186b8d",
            "mutability": "mutable",
            "name": "testqueriedPrice",
            "nameLocation": "2968:16:24",
            "scope": 21141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21014,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2953:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 21015,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2985:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 21025,
            "nodeType": "FunctionDefinition",
            "src": "3067:129:24",
            "nodes": [],
            "body": {
              "id": 21024,
              "nodeType": "Block",
              "src": "3123:73:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21022,
                    "name": "strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20883,
                    "src": "3176:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21021,
                  "id": 21023,
                  "nodeType": "Return",
                  "src": "3169:18:24"
                }
              ]
            },
            "documentation": {
              "id": 21017,
              "nodeType": "StructuredDocumentation",
              "src": "2996:66:24",
              "text": "@notice queries oracle for the latest price of the underlying "
            },
            "functionSelector": "b0667cf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "queryPrice",
            "nameLocation": "3076:10:24",
            "parameters": {
              "id": 21018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3086:2:24"
            },
            "returnParameters": {
              "id": 21021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21020,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3117:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21025,
                  "src": "3109:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:15:24"
            },
            "scope": 21141,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21068,
            "nodeType": "FunctionDefinition",
            "src": "3613:732:24",
            "nodes": [],
            "body": {
              "id": 21067,
              "nodeType": "Block",
              "src": "3650:695:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21030,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20899,
                          "src": "3825:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 21031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3835:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3825:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f66697420616c726561647920736574",
                        "id": 21033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3838:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        },
                        "value": "profit already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        }
                      ],
                      "id": 21029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3817:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21035,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:42:24"
                },
                {
                  "assignments": [
                    21037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21037,
                      "mutability": "mutable",
                      "name": "queriedPrice",
                      "nameLocation": "3878:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 21067,
                      "src": "3870:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3870:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21040,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21038,
                      "name": "queryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21025,
                      "src": "3893:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 21039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3893:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3870:35:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21041,
                      "name": "queriedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21037,
                      "src": "3952:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 21042,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20883,
                      "src": "3968:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3952:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 21065,
                    "nodeType": "Block",
                    "src": "4104:235:24",
                    "statements": [
                      {
                        "assignments": [
                          21049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21049,
                            "mutability": "mutable",
                            "name": "profitInCash",
                            "nameLocation": "4126:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 21065,
                            "src": "4118:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21048,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4118:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21057,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 21055,
                              "name": "shortCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20887,
                              "src": "4181:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21050,
                                    "name": "queriedPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21037,
                                    "src": "4142:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 21051,
                                    "name": "strikePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20883,
                                    "src": "4157:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4142:26:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 21053,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4141:28:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 21054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4170:10:24",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24719,
                            "src": "4141:39:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 21056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4141:56:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4118:79:24"
                      },
                      {
                        "expression": {
                          "id": 21063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 21058,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20899,
                            "src": "4281:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 21061,
                                "name": "queriedPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21037,
                                "src": "4314:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 21059,
                                "name": "profitInCash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21049,
                                "src": "4290:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 21060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4303:10:24",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24751,
                              "src": "4290:23:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 21062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4290:37:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4281:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21064,
                        "nodeType": "ExpressionStatement",
                        "src": "4281:46:24"
                      }
                    ]
                  },
                  "id": 21066,
                  "nodeType": "IfStatement",
                  "src": "3948:391:24",
                  "trueBody": {
                    "expression": {
                      "id": 21046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 21044,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20899,
                        "src": "3981:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 21045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3981:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21047,
                    "nodeType": "ExpressionStatement",
                    "src": "3981:10:24"
                  }
                }
              ]
            },
            "documentation": {
              "id": 21026,
              "nodeType": "StructuredDocumentation",
              "src": "3202:406:24",
              "text": "@notice for a given queriedPrice(usually the spot chainlink price at maturity)\n what is the profit returned to the utilizer \n @dev utillizers can call this function at maturity so they can realize profit it is positive \n if they miss the window(timethreshold), they can't realize profit. \n param queriedPrice must be the exact price at which option is exercised, at maturity"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "profitForUtilizer",
            "nameLocation": "3622:17:24",
            "parameters": {
              "id": 21027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:2:24"
            },
            "returnParameters": {
              "id": 21028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3650:0:24"
            },
            "scope": 21141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21117,
            "nodeType": "FunctionDefinition",
            "src": "4472:371:24",
            "nodes": [],
            "body": {
              "id": 21116,
              "nodeType": "Block",
              "src": "4510:333:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21075,
                          "name": "maturityTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20893,
                          "src": "4528:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 21076,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4543:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4549:9:24",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4543:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4528:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d617475726564",
                        "id": 21079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4560:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        },
                        "value": "not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        }
                      ],
                      "id": 21074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4520:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4520:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21081,
                  "nodeType": "ExpressionStatement",
                  "src": "4520:54:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21082,
                      "name": "profitForUtilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21068,
                      "src": "4584:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21084,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:19:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21085,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20899,
                      "src": "4619:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 21086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4627:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4619:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21089,
                  "nodeType": "IfStatement",
                  "src": "4615:22:24",
                  "trueBody": {
                    "functionReturnParameters": 21073,
                    "id": 21088,
                    "nodeType": "Return",
                    "src": "4630:7:24"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21093,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4711:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4715:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4711:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21095,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20899,
                        "src": "4723:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21090,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21242,
                        "src": "4691:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24133",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4702:8:24",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23883,
                      "src": "4691:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4691:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21097,
                  "nodeType": "ExpressionStatement",
                  "src": "4691:39:24"
                },
                {
                  "expression": {
                    "id": 21100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21098,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20899,
                      "src": "4741:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 21099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4750:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4741:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21101,
                  "nodeType": "ExpressionStatement",
                  "src": "4741:10:24"
                },
                {
                  "expression": {
                    "id": 21104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21102,
                      "name": "utilizerClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20904,
                      "src": "4762:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 21103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4780:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4762:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21105,
                  "nodeType": "ExpressionStatement",
                  "src": "4762:22:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21111,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4822:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21141",
                              "typeString": "contract CoveredCallOTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21141",
                              "typeString": "contract CoveredCallOTC"
                            }
                          ],
                          "id": 21110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4814:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4814:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4814:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4829:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 21106,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21245,
                        "src": "4795:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27323",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 21108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4801:12:24",
                      "memberName": "pingMaturity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26771,
                      "src": "4795:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 21114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4795:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21115,
                  "nodeType": "ExpressionStatement",
                  "src": "4795:40:24"
                }
              ]
            },
            "documentation": {
              "id": 21069,
              "nodeType": "StructuredDocumentation",
              "src": "4351:116:24",
              "text": "@notice either option buyers(utilizers) or sellers(protocol)\n can claim their proportion of the winnings "
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21071,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "4498:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21163,
                  "src": "4498:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4498:12:24"
              }
            ],
            "name": "claim",
            "nameLocation": "4481:5:24",
            "parameters": {
              "id": 21070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4486:2:24"
            },
            "returnParameters": {
              "id": 21073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4510:0:24"
            },
            "scope": 21141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21140,
            "nodeType": "FunctionDefinition",
            "src": "4884:191:24",
            "nodes": [],
            "body": {
              "id": 21139,
              "nodeType": "Block",
              "src": "4948:127:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 21124,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4968:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 21125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4974:9:24",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4968:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21126,
                                    "name": "maturityTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20893,
                                    "src": "4987:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 21127,
                                    "name": "timeThreshold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20902,
                                    "src": "5002:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4987:28:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4968:47:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21130,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20899,
                                  "src": "5019:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 21131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5029:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5019:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4968:62:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 21134,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4967:64:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 21135,
                          "name": "utilizerClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20904,
                          "src": "5051:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4967:99:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 21137,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4965:102:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21123,
                  "id": 21138,
                  "nodeType": "Return",
                  "src": "4958:109:24"
                }
              ]
            },
            "baseFunctions": [
              21398
            ],
            "documentation": {
              "id": 21118,
              "nodeType": "StructuredDocumentation",
              "src": "4849:30:24",
              "text": "@notice called at maturity"
            },
            "functionSelector": "bdf0f253",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readyForWithdrawal",
            "nameLocation": "4893:18:24",
            "overrides": {
              "id": 21120,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4926:8:24"
            },
            "parameters": {
              "id": 21119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4911:2:24"
            },
            "returnParameters": {
              "id": 21123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21122,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21140,
                  "src": "4943:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21121,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4943:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4942:6:24"
            },
            "scope": 21141,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20873,
              "name": "Instrument",
              "nameLocations": [
                "528:10:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21600,
              "src": "528:10:24"
            },
            "id": 20874,
            "nodeType": "InheritanceSpecifier",
            "src": "528:10:24"
          }
        ],
        "canonicalName": "CoveredCallOTC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 20872,
          "nodeType": "StructuredDocumentation",
          "src": "286:215:24",
          "text": "@notice This contract acts as an OTC option platform\n Utilizer will \"propose\" a strike price to buy\n At maturity, premiums from utilizer will be collected by the vault when expires\n below strike price "
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21141,
          21600
        ],
        "name": "CoveredCallOTC",
        "nameLocation": "510:14:24",
        "scope": 21142,
        "usedErrors": []
      }
    ]
  },
  "id": 24
}