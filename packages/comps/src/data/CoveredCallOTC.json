{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_utilizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerContract",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shortCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_longCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cash",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tradeTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityTransfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimatedTotalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaturityBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instrumentApprovalCondition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instrumentStaticSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerContract",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shortCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_longCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tradeTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "isLiquid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAllPositions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountFreed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountNeeded",
          "type": "uint256"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_liquidatedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "longCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yield",
          "type": "uint256"
        }
      ],
      "name": "onMarketApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prepareWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_debtPayment",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePerContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullRawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readyForWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_Utilizer",
          "type": "address"
        }
      ],
      "name": "setUtilizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "store_internal_balance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strikePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testqueriedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract Vault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "537:5230:24:-:0;;;3165:4;3133:36;;1361:1032;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:5:25;:21;;-1:-1:-1;;;;;;893:21:25;-1:-1:-1;;;;;893:21:25;;;;;;;;943:18;;;-1:-1:-1;;;943:18:25;;;;893:21;;1891:9:24;;893:21:25;;943:16;;:18;;;;;;;;;;;;;;;893:21;943:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;924:10;:38;;-1:-1:-1;;;;;;924:38:25;-1:-1:-1;;;;;924:38:25;;;;;;;;;972:36;;-1:-1:-1;;;972:36:25;;1509:32:81;;;972:36:25;;;1491:51:81;-1:-1:-1;;1558:18:81;;;1551:34;924:38:25;972:18;;1464::81;;972:36:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1050:8:25;:20;;-1:-1:-1;;;;;;1050:20:25;-1:-1:-1;;;;;1050:20:25;;;;;;;;;;-1:-1:-1;1992:46:24::1;:16:::0;2020:17;1992:27:::1;;::::0;;::::1;;;:46:::0;::::1;:::i;:::-;1973:15;:65;1965:95;;;::::0;-1:-1:-1;;;1965:95:24;;2080:2:81;1965:95:24::1;::::0;::::1;2062:21:81::0;2119:2;2099:18;;;2092:30;-1:-1:-1;;;2138:18:81;;;2131:47;2195:18;;1965:95:24::1;;;;;;;;-1:-1:-1::0;;;;;2071:20:24;;::::1;;::::0;2101:26:::1;::::0;;;2138:36:::1;::::0;;;2185:34:::1;::::0;;;2230:32:::1;::::0;;;2273:12;::::1;;::::0;2307:27:::1;2324:10:::0;2307:15:::1;:27;:::i;:::-;2295:39;::::0;2360:26:::1;2378:8:::0;2360:15:::1;:26;:::i;:::-;2345:41;::::0;-1:-1:-1;537:5230:24;;-1:-1:-1;;;;;;;;537:5230:24;647:164:30;712:7;738:21;749:1;752;598:4;738:10;:21::i;:::-;731:28;;647:164;;;;;:::o;1507:535::-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;14:131:81:-;-1:-1:-1;;;;;89:31:81;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:891::-;292:6;300;308;316;324;332;340;348;356;409:3;397:9;388:7;384:23;380:33;377:53;;;426:1;423;416:12;377:53;458:9;452:16;477:31;502:5;477:31;:::i;:::-;577:2;562:18;;556:25;527:5;;-1:-1:-1;590:33:81;556:25;590:33;:::i;:::-;642:7;632:17;;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;777:3;766:9;762:19;756:26;746:36;;822:3;811:9;807:19;801:26;791:36;;872:3;861:9;857:19;851:26;886:33;911:7;886:33;:::i;:::-;938:7;928:17;;;985:3;974:9;970:19;964:26;954:36;;1030:3;1019:9;1015:19;1009:26;999:36;;150:891;;;;;;;;;;;:::o;1046:266::-;1131:6;1184:2;1172:9;1163:7;1159:23;1155:32;1152:52;;;1200:1;1197;1190:12;1152:52;1232:9;1226:16;1251:31;1276:5;1251:31;:::i;:::-;1301:5;1046:266;-1:-1:-1;;;1046:266:81:o;1596:277::-;1663:6;1716:2;1704:9;1695:7;1691:23;1687:32;1684:52;;;1732:1;1729;1722:12;1684:52;1764:9;1758:16;1817:5;1810:13;1803:21;1796:5;1793:32;1783:60;;1839:1;1836;1829:12;2224:222;2289:9;;;2310:10;;;2307:133;;;2362:10;2357:3;2353:20;2350:1;2343:31;2397:4;2394:1;2387:15;2425:4;2422:1;2415:15;2224:222;537:5230:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c8063852a12e311610130578063c576ce01116100b8578063d832f7911161007c578063d832f79114610648578063e0186b8d1461065b578063efbb5cb01461040f578063f3aa68d314610664578063fbfa77cf1461066c57600080fd5b8063c576ce01146105a0578063c9ac4332146105c7578063cb29bb9a146105ee578063cdddd4e514610615578063d0e30db01461064057600080fd5b8063961be391116100ff578063961be39114610512578063a4e2d63414610539578063b0667cf81461054b578063bdf0f25314610571578063c52987cf1461057957600080fd5b8063852a12e3146104a9578063870dcaeb146104bc57806387479487146104e35780638eac2066146104eb57600080fd5b80634e8bfdaa116101be5780636817031b116101825780636817031b146104555780636f307dc3146104685780637adbf9731461047b5780637dc0d1d01461048e57806383e754a0146104a157600080fd5b80634e8bfdaa146103e857806350bb4beb1461040f578063537d94091461041657806357b259961461043957806366d16cc31461044c57600080fd5b80633af9e669116102055780633af9e6691461038e578063416288dd146103a157806344ed456f146103b557806349dcf4ed146103bd5780634e71d92d146103e057600080fd5b80631104aafd1461023757806329bb64c81461024e578063350896fe1461035057806335aa2e441461037b575b600080fd5b6002545b6040519081526020015b60405180910390f35b600754604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201526001600160a01b0390911660c082015260e001610245565b600454610363906001600160a01b031681565b6040516001600160a01b039091168152602001610245565b6103636103893660046114a2565b61067f565b61023b61039c3660046114d0565b6106a9565b6103b36103af3660046114ed565b5050565b005b6103b36107aa565b6103c56108db565b60408051938452602084019290925290820152606001610245565b6103b3610975565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b600061023b565b6104296104243660046114a2565b610b01565b6040519015158152602001610245565b6103b36104473660046114d0565b610b48565b61023b60085481565b6103b36104633660046114d0565b610c5c565b600054610363906001600160a01b031681565b6103b36104893660046114d0565b610d5d565b600754610363906001600160a01b031681565b610429610e42565b6104296104b73660046114a2565b610ed6565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b61023b600a81565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6103637f000000000000000000000000000000000000000000000000000000000000000081565b600154600160a01b900460ff16610429565b7f000000000000000000000000000000000000000000000000000000000000000061023b565b610429610f7c565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6103637f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b61062b6106233660046114a2565b600080915091565b60408051928352602083019190915201610245565b6103b3610fca565b6103b36106563660046114a2565b61101f565b61023b600a5481565b6103b36110b5565b600154610363906001600160a01b031681565b6005818154811061068f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000306001600160a01b0383160361073c576003546000546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c919061150f565b610736919061153e565b92915050565b6000546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610736919061150f565b6004546001600160a01b031633146107dd5760405162461bcd60e51b81526004016107d490611551565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004211156108445760405162461bcd60e51b81526020600482015260146024820152731c995919595b481dda5b991bddc81c185cdcd95960621b60448201526064016107d4565b60005460405163a9059cbb60e01b81523360048201527f000000000000000000000000000000000000000000000000000000000000000060248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d89190611574565b50565b600154600090819081906001600160a01b0316331461090c5760405162461bcd60e51b81526004016107d490611596565b610914610f7c565b6109585760405162461bcd60e51b81526020600482015260156024820152746e6f7420726561647920746f20776974686472617760581b60448201526064016107d4565b6109706001805460ff60a01b1916600160a01b179055565b909192565b6004546001600160a01b0316331461099f5760405162461bcd60e51b81526004016107d490611551565b427f0000000000000000000000000000000000000000000000000000000000000000106109fc5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081b585d1d5c995960aa1b60448201526064016107d4565b610a046111f5565b60085415610aff5760005460085460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190611574565b50600060088190556009805460ff191660019081179091555460405163109d3ea960e11b815230600482015260248101929092526001600160a01b03169063213a7d5290604401600060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b505050505b565b6000610b36604051806040016040528060088152602001671a5cdb1a5c5d5a5960c21b815250610b30306106a9565b84611241565b81610b40306106a9565b101592915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906115c4565b6001600160a01b0316336001600160a01b03161480610bed57503360009081526006602052604090205460ff165b610c275760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107d4565b6001600160a01b038116610c3a57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd391906115c4565b6001600160a01b0316336001600160a01b03161480610d0157503360009081526006602052604090205460ff165b610d3b5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107d4565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd491906115c4565b6001600160a01b0316336001600160a01b031614610e205760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016107d4565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf919061150f565b1015905090565b6001546000906001600160a01b03163314610f035760405162461bcd60e51b81526004016107d490611596565b60005460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611574565b6000610fa9600a7f00000000000000000000000000000000000000000000000000000000000000006115e1565b4210158015610fb85750600854155b80610fc5575060095460ff165b905090565b6004546001600160a01b03163314610ff45760405162461bcd60e51b81526004016107d490611551565b610aff33307f000000000000000000000000000000000000000000000000000000000000000061128d565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a9190611574565b5080600360008282546110ad91906115e1565b909155505050565b6001546001600160a01b031633146110df5760405162461bcd60e51b81526004016107d490611596565b6110e8306106a9565b60025560015460408051637e0b9fe360e11b815290516001600160a01b039092169163fc173fc6916004808201926020929091908290030181865afa158015611135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111599190611574565b15610aff57600154600254604051634b674ead60e11b81526001600160a01b03909216916396ce9d5a916111939160040190815260200190565b602060405180830381865afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d4919061150f565b600255565b60006111ee8383670de0b6b3a7640000611462565b9392505050565b6008541561123a5760405162461bcd60e51b81526020600482015260126024820152711c1c9bd99a5d08185b1c9958591e481cd95d60721b60448201526064016107d4565b6000600855565b611288838383604051602401611259939291906115f4565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052611481565b505050565b600154600160a01b900460ff16156112a457600080fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663fc173fc66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131b9190611574565b156113905760015460405163098b6def60e11b8152600481018390526001600160a01b0390911690631316dbde90602401602060405180830381865afa158015611369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138d919061150f565b90505b6000546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd906064016020604051808303816000875af11580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140f9190611574565b50816001600160a01b0316836001600160a01b03167fb694ac7b1acb87c2bd80288c8e244829d9291406c57928137d913bd13664c9dd8360405161145591815260200190565b60405180910390a3505050565b82820281151584158583048514171661147a57600080fd5b0492915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000602082840312156114b457600080fd5b5035919050565b6001600160a01b03811681146108d857600080fd5b6000602082840312156114e257600080fd5b81356111ee816114bb565b6000806040838503121561150057600080fd5b50508035926020909101359150565b60006020828403121561152157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073657610736611528565b60208082526009908201526810aaba34b634bd32b960b91b604082015260600190565b60006020828403121561158657600080fd5b815180151581146111ee57600080fd5b60208082526014908201527318d85b1b195c881b5d5cdd081899481d985d5b1d60621b604082015260600190565b6000602082840312156115d657600080fd5b81516111ee816114bb565b8082018082111561073657610736611528565b606081526000845180606084015260005b818110156116225760208188018101516080868401015201611605565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220c0dee837e863013d22c56fe9e3c6544ab25fbdd04dd926f2669690e332f6f75864736f6c63430008110033",
    "sourceMap": "537:5230:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5943:99:25;6018:16;;5943:99;;;160:25:81;;;148:2;133:18;5943:99:25;;;;;;;;5428:337:24;5751:6;;5428:337;;;5662:11;511:25:81;;5675:16:24;567:2:81;552:18;;545:34;5693:15:24;595:18:81;;;588:34;;;;5710:14:24;653:2:81;638:18;;631:34;5726:12:24;696:3:81;681:19;;674:35;5740:9:24;740:3:81;725:19;;718:35;-1:-1:-1;;;;;5751:6:24;;;784:3:81;769:19;;762:61;498:3;483:19;5428:337:24;196:633:81;1339:23:25;;;;;-1:-1:-1;;;;;1339:23:25;;;;;;-1:-1:-1;;;;;998:32:81;;;980:51;;968:2;953:18;1339:23:25;834:203:81;1369:27:25;;;;;;:::i;:::-;;:::i;2991:211::-;;;;;;:::i;:::-;;:::i;1625:79::-;;;;;;:::i;:::-;;;;;;2548:253:24;;;:::i;4214:388:25:-;;;:::i;:::-;;;;2070:25:81;;;2126:2;2111:18;;2104:34;;;;2154:18;;;2147:34;2058:2;2043:18;4214:388:25;1868:319:81;4652:371:24;;;:::i;880:37::-;;;;;4734:81:25;4792:20;4734:81;;6048:230;;;;;;:::i;:::-;;:::i;:::-;;;2357:14:81;;2350:22;2332:41;;2320:2;2305:18;6048:230:25;2192:187:81;1710:143:25;;;;;;:::i;:::-;;:::i;994:21:24:-;;;;;;2080:101:25;;;;;;:::i;:::-;;:::i;1084:23::-;;;;;-1:-1:-1;;;;;1084:23:25;;;2399:143:24;;;;;;:::i;:::-;;:::i;966:21::-;;;;;-1:-1:-1;;;;;966:21:24;;;2978:150;;;:::i;2410:221:25:-;;;;;;:::i;:::-;;:::i;752:40:24:-;;;;;1022:42;;1062:2;1022:42;;924:34;;;;;844:29;;;;;4895:76:25;4957:6;;-1:-1:-1;;;4957:6:25;;;;4895:76;;3247:129:24;3356:11;3247:129;;5064:191;;;:::i;662:36::-;;;;;704:41;;;;;623:33;;;;;799:39;;;;;4609:118:25;;;;;;:::i;:::-;4684:25;4711:13;4609:118;;;;;;;;2781:25:81;;;2837:2;2822:18;;2815:34;;;;2754:18;4609:118:25;2607:248:81;5306:116:24;;;:::i;3271:149:25:-;;;;;;:::i;:::-;;:::i;3133:36:24:-;;;;;;5711:226:25;;;:::i;1113:18::-;;;;;-1:-1:-1;;;;;1113:18:25;;;1369:27;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1369:27:25;;-1:-1:-1;1369:27:25;:::o;2991:211::-;3063:7;3100:4;-1:-1:-1;;;;;3084:21:25;;;3081:70;;3143:8;;3114:10;;:26;;-1:-1:-1;;;3114:26:25;;-1:-1:-1;;;;;998:32:81;;;3114:26:25;;;980:51:81;3114:10:25;;;;:20;;953:18:81;;3114:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;;:::i;:::-;3107:44;2991:211;-1:-1:-1;;2991:211:25:o;3081:70::-;3168:10;;:26;;-1:-1:-1;;;3168:26:25;;-1:-1:-1;;;;;998:32:81;;;3168:26:25;;;980:51:81;3168:10:25;;;;:20;;953:18:81;;3168:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2548:253:24:-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;;;;;;;;;2701:9:24::1;2683:15;:27;;2675:60;;;::::0;-1:-1:-1;;;2675:60:24;;4076:2:81;2675:60:24::1;::::0;::::1;4058:21:81::0;4115:2;4095:18;;;4088:30;-1:-1:-1;;;4134:18:81;;;4127:50;4194:18;;2675:60:24::1;3874:344:81::0;2675:60:24::1;2746:10;::::0;:47:::1;::::0;-1:-1:-1;;;2746:47:24;;2766:10:::1;2746:47;::::0;::::1;4397:51:81::0;2778:14:24::1;4464:18:81::0;;;4457:34;-1:-1:-1;;;;;2746:10:24;;::::1;::::0;:19:::1;::::0;4370:18:81;;2746:47:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2548:253::o:0;4214:388:25:-;685:5;;4324:15;;;;;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;4432:20:::1;:18;:20::i;:::-;4424:54;;;::::0;-1:-1:-1;;;4424:54:25;;5335:2:81;4424:54:25::1;::::0;::::1;5317:21:81::0;5374:2;5354:18;;;5347:30;-1:-1:-1;;;5393:18:81;;;5386:51;5454:18;;4424:54:25::1;5133:345:81::0;4424:54:25::1;4567:19;4877:4:::0;4868:13;;-1:-1:-1;;;;4868:13:25;-1:-1:-1;;;4868:13:25;;;4821:68;4567:19:::1;4214:388:::0;;;:::o;4652:371:24:-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;4723:15:24::1;4708:12;:30;4700:54;;;::::0;-1:-1:-1;;;4700:54:24;;5685:2:81;4700:54:24::1;::::0;::::1;5667:21:81::0;5724:2;5704:18;;;5697:30;-1:-1:-1;;;5743:18:81;;;5736:41;5794:18;;4700:54:24::1;5483:335:81::0;4700:54:24::1;4764:19;:17;:19::i;:::-;4799:6;::::0;4795:22;4810:7:::1;4795:22;4871:10;::::0;4903:6:::1;::::0;4871:39:::1;::::0;-1:-1:-1;;;4871:39:24;;4891:10:::1;4871:39;::::0;::::1;4397:51:81::0;4464:18;;;4457:34;;;;-1:-1:-1;;;;;4871:10:24;;::::1;::::0;:19:::1;::::0;4370:18:81;;4871:39:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4930:1:24::1;4921:6;:10:::0;;;4942:15:::1;:22:::0;;-1:-1:-1;;4942:22:24::1;4960:4;4942:22:::0;;::::1;::::0;;;4975:5;:40:::1;::::0;-1:-1:-1;;;4975:40:24;;5002:4:::1;4975:40;::::0;::::1;5991:51:81::0;6058:18;;;6051:50;;;;-1:-1:-1;;;;;4975:5:24::1;::::0;:18:::1;::::0;5964::81;;4975:40:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;472:1:25;4652:371:24:o:0;6048:230:25:-;6110:4;6141:67;;;;;;;;;;;;;;-1:-1:-1;;;6141:67:25;;;6165:34;6193:4;6165:19;:34::i;:::-;6201:6;6141:11;:67::i;:::-;6264:6;6226:34;6254:4;6226:19;:34::i;:::-;:44;;;6048:230;-1:-1:-1;;6048:230:25:o;1710:143::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;6570:2:81;522:78:25;;;6552:21:81;6609:2;6589:18;;;6582:30;-1:-1:-1;;;6628:18:81;;;6621:41;6679:18;;522:78:25;6368:335:81;522:78:25;-1:-1:-1;;;;;1792:23:25;::::1;1784:32;;;::::0;::::1;;1826:8;:20:::0;;-1:-1:-1;;;;;;1826:20:25::1;-1:-1:-1::0;;;;;1826:20:25;;;::::1;::::0;;;::::1;::::0;;1710:143::o;2080:101::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;6570:2:81;522:78:25;;;6552:21:81;6609:2;6589:18;;;6582:30;-1:-1:-1;;;6628:18:81;;;6621:41;6679:18;;522:78:25;6368:335:81;522:78:25;2150:5:::1;:23:::0;;-1:-1:-1;;;;;;2150:23:25::1;-1:-1:-1::0;;;;;2150:23:25;;;::::1;::::0;;;::::1;::::0;;2080:101::o;2399:143:24:-;2479:5;;;;;;;;;-1:-1:-1;;;;;2479:5:24;-1:-1:-1;;;;;2473:18:24;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2460:33:24;:10;-1:-1:-1;;;;;2460:33:24;;2452:55;;;;-1:-1:-1;;;2452:55:24;;6910:2:81;2452:55:24;;;6892:21:81;6949:1;6929:18;;;6922:29;-1:-1:-1;;;6967:18:81;;;6960:39;7016:18;;2452:55:24;6708:332:81;2452:55:24;2518:6;:16;;-1:-1:-1;;;;;;2518:16:24;-1:-1:-1;;;;;2518:16:24;;;;;;;;;;2399:143::o;2978:150::-;3046:4;3068:10;;:35;;-1:-1:-1;;;3068:35:24;;3097:4;3068:35;;;980:51:81;3107:14:24;;-1:-1:-1;;;;;3068:10:24;;:20;;953:18:81;;3068:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;3061:60;;2978:150;:::o;2410:221:25:-;685:5;;2480:4;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;2580:10:::1;::::0;;2608:5;2580:43:::1;::::0;-1:-1:-1;;;2580:43:25;;-1:-1:-1;;;;;2608:5:25;;::::1;2580:43;::::0;::::1;4397:51:81::0;4464:18;;;4457:34;;;2580:10:25;::::1;::::0;:19:::1;::::0;4370:18:81;;2580:43:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5064:191:24:-:0;5123:4;5167:28;1062:2;5167:12;:28;:::i;:::-;5148:15;:47;;:62;;;;-1:-1:-1;5199:6:24;;:11;5148:62;5147:99;;;-1:-1:-1;5231:15:24;;;;5147:99;5138:109;;5064:191;:::o;5306:116::-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;5355:60:24::1;5373:10;5393:4;5400:14;5355:17;:60::i;3271:149:25:-:0;3326:10;;:57;;-1:-1:-1;;;3326:57:25;;3350:10;3326:57;;;7415:34:81;3369:4:25;7465:18:81;;;7458:43;7517:18;;;7510:34;;;-1:-1:-1;;;;;3326:10:25;;;;:23;;7350:18:81;;3326:57:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3406:6;3394:8;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3271:149:25:o;5711:226::-;685:5;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;5793:34:::1;5821:4;5793:19;:34::i;:::-;5774:16;:53:::0;5842:5:::1;::::0;:24:::1;::::0;;-1:-1:-1;;;5842:24:25;;;;-1:-1:-1;;;;;5842:5:25;;::::1;::::0;:22:::1;::::0;:24:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:24:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5838:90;;;5887:5;::::0;5911:16:::1;::::0;5887:41:::1;::::0;-1:-1:-1;;;5887:41:25;;-1:-1:-1;;;;;5887:5:25;;::::1;::::0;:23:::1;::::0;:41:::1;::::0;::::1;;160:25:81::0;;;148:2;133:18;;14:177;5887:41:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5868:16;:60:::0;5711:226::o;647:164:30:-;712:7;738:21;749:1;752;598:4;738:10;:21::i;:::-;731:28;647:164;-1:-1:-1;;;647:164:30:o;3793:732:24:-;4005:6;;:11;3997:42;;;;-1:-1:-1;;;3997:42:24;;7757:2:81;3997:42:24;;;7739:21:81;7796:2;7776:18;;;7769:30;-1:-1:-1;;;7815:18:81;;;7808:48;7873:18;;3997:42:24;7555:342:81;3997:42:24;4170:1;4161:6;:10;2548:253::o;10843:157:46:-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:46;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:46;-1:-1:-1;;;10932:60:46;;;10916:15;:77::i;:::-;10843:157;;;:::o;5327:277:25:-;780:6;;-1:-1:-1;;;780:6:25;;;;779:7;771:16;;;;;;5429:5:::1;;;;;;;;;-1:-1:-1::0;;;;;5429:5:25::1;-1:-1:-1::0;;;;;5429:22:25::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5425:70;;;5464:5;::::0;:31:::1;::::0;-1:-1:-1;;;5464:31:25;;::::1;::::0;::::1;160:25:81::0;;;-1:-1:-1;;;;;5464:5:25;;::::1;::::0;:23:::1;::::0;133:18:81;;5464:31:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5455:40;;5425:70;5506:10;::::0;:41:::1;::::0;-1:-1:-1;;;5506:41:25;;-1:-1:-1;;;;;7433:15:81;;;5506:41:25::1;::::0;::::1;7415:34:81::0;7485:15;;;7465:18;;;7458:43;7517:18;;;7510:34;;;5506:10:25;;::::1;::::0;:23:::1;::::0;7350:18:81;;5506:41:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5586:2;-1:-1:-1::0;;;;;5562:35:25::1;5580:4;-1:-1:-1::0;;;;;5562:35:25::1;;5590:6;5562:35;;;;160:25:81::0;;148:2;133:18;;14:177;5562:35:25::1;;;;;;;;5327:277:::0;;;:::o;1507:535:30:-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;181:376:46:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;1042:180:81:-;1101:6;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;-1:-1:-1;1193:23:81;;1042:180;-1:-1:-1;1042:180:81:o;1227:131::-;-1:-1:-1;;;;;1302:31:81;;1292:42;;1282:70;;1348:1;1345;1338:12;1363:247;1422:6;1475:2;1463:9;1454:7;1450:23;1446:32;1443:52;;;1491:1;1488;1481:12;1443:52;1530:9;1517:23;1549:31;1574:5;1549:31;:::i;1615:248::-;1683:6;1691;1744:2;1732:9;1723:7;1719:23;1715:32;1712:52;;;1760:1;1757;1750:12;1712:52;-1:-1:-1;;1783:23:81;;;1853:2;1838:18;;;1825:32;;-1:-1:-1;1615:248:81:o;3083:184::-;3153:6;3206:2;3194:9;3185:7;3181:23;3177:32;3174:52;;;3222:1;3219;3212:12;3174:52;-1:-1:-1;3245:16:81;;3083:184;-1:-1:-1;3083:184:81:o;3272:127::-;3333:10;3328:3;3324:20;3321:1;3314:31;3364:4;3361:1;3354:15;3388:4;3385:1;3378:15;3404:128;3471:9;;;3492:11;;;3489:37;;;3506:18;;:::i;3537:332::-;3739:2;3721:21;;;3778:1;3758:18;;;3751:29;-1:-1:-1;;;3811:2:81;3796:18;;3789:39;3860:2;3845:18;;3537:332::o;4502:277::-;4569:6;4622:2;4610:9;4601:7;4597:23;4593:32;4590:52;;;4638:1;4635;4628:12;4590:52;4670:9;4664:16;4723:5;4716:13;4709:21;4702:5;4699:32;4689:60;;4745:1;4742;4735:12;4784:344;4986:2;4968:21;;;5025:2;5005:18;;;4998:30;-1:-1:-1;;;5059:2:81;5044:18;;5037:50;5119:2;5104:18;;4784:344::o;6112:251::-;6182:6;6235:2;6223:9;6214:7;6210:23;6206:32;6203:52;;;6251:1;6248;6241:12;6203:52;6283:9;6277:16;6302:31;6327:5;6302:31;:::i;7045:125::-;7110:9;;;7131:10;;;7128:36;;;7144:18;;:::i;7902:678::-;8107:2;8096:9;8089:21;8070:4;8139:6;8133:13;8182:6;8177:2;8166:9;8162:18;8155:34;8207:1;8217:145;8231:6;8228:1;8225:13;8217:145;;;8345:4;8329:14;;;8325:25;;8319:32;8313:3;8294:17;;;8290:27;8283:69;8246:12;8217:145;;;8221:3;8412:1;8406:3;8397:6;8386:9;8382:22;8378:32;8371:43;8482:3;8475:2;8471:7;8466:2;8458:6;8454:15;8450:29;8439:9;8435:45;8431:55;8423:63;;;8524:6;8517:4;8506:9;8502:20;8495:36;8567:6;8562:2;8551:9;8547:18;8540:34;7902:678;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "20926": [
        {
          "start": 1484,
          "length": 32
        }
      ],
      "20928": [
        {
          "start": 599,
          "length": 32
        },
        {
          "start": 1357,
          "length": 32
        },
        {
          "start": 1406,
          "length": 32
        }
      ],
      "20930": [
        {
          "start": 634,
          "length": 32
        },
        {
          "start": 1445,
          "length": 32
        }
      ],
      "20932": [
        {
          "start": 672,
          "length": 32
        },
        {
          "start": 1217,
          "length": 32
        }
      ],
      "20934": [
        {
          "start": 712,
          "length": 32
        },
        {
          "start": 1523,
          "length": 32
        },
        {
          "start": 2140,
          "length": 32
        },
        {
          "start": 3675,
          "length": 32
        },
        {
          "start": 4091,
          "length": 32
        }
      ],
      "20936": [
        {
          "start": 1303,
          "length": 32
        }
      ],
      "20938": [
        {
          "start": 750,
          "length": 32
        },
        {
          "start": 1005,
          "length": 32
        },
        {
          "start": 2466,
          "length": 32
        },
        {
          "start": 3973,
          "length": 32
        }
      ],
      "20940": [
        {
          "start": 788,
          "length": 32
        },
        {
          "start": 1264,
          "length": 32
        },
        {
          "start": 2015,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "Utilizer()": "350896fe",
    "balanceOfUnderlying(address)": "3af9e669",
    "cash()": "961be391",
    "claim()": "4e71d92d",
    "deposit()": "d0e30db0",
    "estimatedTotalAssets()": "efbb5cb0",
    "getMaturityBalance()": "1104aafd",
    "instrumentApprovalCondition()": "83e754a0",
    "instrumentStaticSnapshot()": "29bb64c8",
    "isLiquid(uint256)": "537d9409",
    "isLocked()": "a4e2d634",
    "liquidateAllPositions()": "50bb4beb",
    "liquidatePosition(uint256)": "cdddd4e5",
    "longCollateral()": "cb29bb9a",
    "maturityTime()": "4e8bfdaa",
    "onMarketApproval(uint256,uint256)": "416288dd",
    "oracle()": "7dc0d1d0",
    "prepareWithdraw()": "49dcf4ed",
    "pricePerContract()": "c576ce01",
    "profit()": "66d16cc3",
    "pullRawFunds(uint256)": "d832f791",
    "queryPrice()": "b0667cf8",
    "readyForWithdrawal()": "bdf0f253",
    "redeemUnderlying(uint256)": "852a12e3",
    "returnCollateral()": "44ed456f",
    "setOracle(address)": "7adbf973",
    "setUtilizer(address)": "57b25996",
    "setVault(address)": "6817031b",
    "shortCollateral()": "870dcaeb",
    "store_internal_balance()": "f3aa68d3",
    "strikePrice()": "c52987cf",
    "testqueriedPrice()": "e0186b8d",
    "timeThreshold()": "87479487",
    "tradeTime()": "8eac2066",
    "underlying()": "6f307dc3",
    "utilizer()": "c9ac4332",
    "validators(uint256)": "35aa2e44",
    "vault()": "fbfa77cf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerContract\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shortCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_cash\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityTransfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimatedTotalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaturityBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instrumentApprovalCondition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instrumentStaticSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerContract\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shortCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isLiquid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAllPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountFreed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountNeeded\",\"type\":\"uint256\"}],\"name\":\"liquidatePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"}],\"name\":\"onMarketApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prepareWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debtPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullRawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readyForWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Utilizer\",\"type\":\"address\"}],\"name\":\"setUtilizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"store_internal_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testqueriedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOfUnderlying(address)\":{\"details\":\"May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers\",\"params\":{\"user\":\"The user to get the underlying balance of.\"},\"returns\":{\"_0\":\"The user's Instrument balance in underlying tokens.\"}},\"constructor\":{\"params\":{\"_pricePerContract\":\"is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values \",\"_shortCollateral\":\"depends on how much underlyingAsset is in the vault. \"}},\"prepareWithdraw()\":{\"details\":\"prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs\"},\"redeemUnderlying(uint256)\":{\"params\":{\"amount\":\"The amount of underlying tokens to withdraw.\"},\"returns\":{\"_0\":\"An error code, or 0 if the withdrawal was successful.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"Utilizer()\":{\"notice\":\"address of user who submits the liquidity proposal \"},\"balanceOfUnderlying(address)\":{\"notice\":\"Returns a user's Instrument balance in underlying tokens.\"},\"claim()\":{\"notice\":\"either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings \"},\"deposit()\":{\"notice\":\"deposit for the utilizer\"},\"instrumentApprovalCondition()\":{\"notice\":\"returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  \"},\"onMarketApproval(uint256,uint256)\":{\"notice\":\"hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic\"},\"prepareWithdraw()\":{\"notice\":\"checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, \"},\"pullRawFunds(uint256)\":{\"notice\":\"raw funds should not be harvested by the vault\"},\"queryPrice()\":{\"notice\":\"queries oracle for the latest price of the underlying \"},\"readyForWithdrawal()\":{\"notice\":\"called at maturity\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Withdraws a specific amount of underlying tokens from the Instrument.\"},\"store_internal_balance()\":{\"notice\":\"called before resolve, to avoid calculating redemption price based on manipulations \"}},\"notice\":\"This contract acts as an OTC option platform Utilizer will \\\"propose\\\" a strike price to buy At maturity, premiums from utilizer will be collected by the vault when expires below strike price \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/dov.sol\":\"CoveredCallOTC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/math/=lib/prb-math/src/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/bonds/GBC.sol\":{\"keccak256\":\"0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84\",\"dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T\"]},\"contracts/bonds/boundedDerivatives.sol\":{\"keccak256\":\"0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0\",\"urls\":[\"bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c\",\"dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H\"]},\"contracts/bonds/libraries.sol\":{\"keccak256\":\"0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091\",\"urls\":[\"bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e\",\"dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV\"]},\"contracts/bonds/synthetic.sol\":{\"keccak256\":\"0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d\",\"urls\":[\"bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0\",\"dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA\"]},\"contracts/chainlink/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c\",\"dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM\"]},\"contracts/chainlink/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca\",\"dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc\"]},\"contracts/instruments/IRateCalculator.sol\":{\"keccak256\":\"0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a\",\"dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1\"]},\"contracts/instruments/VaultAccount.sol\":{\"keccak256\":\"0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1\",\"dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc\"]},\"contracts/instruments/poolConstants.sol\":{\"keccak256\":\"0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4\",\"urls\":[\"bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a\",\"dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx\"]},\"contracts/instruments/poolInstrument.sol\":{\"keccak256\":\"0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900\",\"urls\":[\"bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2\",\"dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q\"]},\"contracts/protocol/controller.sol\":{\"keccak256\":\"0xa8c00017577c3a903dcbf0733e1ce6420cee38fb92d1a9bd8000c390b5b6f535\",\"urls\":[\"bzz-raw://950e14bd26c51df1e985040a4bcd9767eadcdf5966903aa37b70b1900e965e6e\",\"dweb:/ipfs/Qmazcs17SBNwksZ3r5CQAQEAvK7sLfyjgC3CvZFjiFqsDS\"]},\"contracts/protocol/factories.sol\":{\"keccak256\":\"0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78\",\"urls\":[\"bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382\",\"dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa\"]},\"contracts/protocol/marketmanager.sol\":{\"keccak256\":\"0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2\",\"urls\":[\"bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1\",\"dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu\"]},\"contracts/protocol/reputationmanager.sol\":{\"keccak256\":\"0x8ae3f8c947d35fc3664a4c87871e3a154253dfd59de4f226ecd77cb73a8f7a06\",\"urls\":[\"bzz-raw://2bed62e72142649ec265fbd9ee46d75adf8ff42505b8d2d4a275b54b54b74de0\",\"dweb:/ipfs/Qmb1Dw3NVcsFujEEpPt5SqMpd8VnxrY5LsTDxHh7N9iTry\"]},\"contracts/protocol/reputationtoken.sol\":{\"keccak256\":\"0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863\",\"urls\":[\"bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e\",\"dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et\"]},\"contracts/protocol/validatorManager.sol\":{\"keccak256\":\"0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c\",\"urls\":[\"bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d\",\"dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h\"]},\"contracts/utils/helpers.sol\":{\"keccak256\":\"0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779\",\"urls\":[\"bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933\",\"dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D\"]},\"contracts/vaults/auth/Auth.sol\":{\"keccak256\":\"0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e\",\"dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ\"]},\"contracts/vaults/dov.sol\":{\"keccak256\":\"0x2fa30db5ee716ca7ba5d804be202996a599ce11cb3a316a7134ba1b691204b22\",\"urls\":[\"bzz-raw://6678c9146610a9fd124959917f551aecf9e07c8f0bb2bae6b63cf943db2943fa\",\"dweb:/ipfs/QmaR21xPhDPJioEkvPEUrE74BEhXdAQs9mHbQAXek9Usg8\"]},\"contracts/vaults/instrument.sol\":{\"keccak256\":\"0x012b89147bf697e67baf9f7a17568ada1c4b3a21d4628454354c34e9a9dbd87e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e73edbea2d30a4a1017033b3807899a1fab86d611dd8fb4b6a768682bb66698e\",\"dweb:/ipfs/QmeXxJArSgPhCcKXt9Xa2ucjWtcB75bLtwXdyviJfoXNF8\"]},\"contracts/vaults/mixins/ERC4626.sol\":{\"keccak256\":\"0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb\",\"dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY\"]},\"contracts/vaults/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"contracts/vaults/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"contracts/vaults/utils/SafeCastLib.sol\":{\"keccak256\":\"0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e\",\"dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd\"]},\"contracts/vaults/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"contracts/vaults/vault.sol\":{\"keccak256\":\"0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9\",\"urls\":[\"bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247\",\"dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4\",\"dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427\",\"dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_utilizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerContract",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shortCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_longCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_cash",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tradeTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityTransfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "estimatedTotalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaturityBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "instrumentApprovalCondition",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "instrumentStaticSnapshot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerContract",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shortCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_longCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tradeTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLiquid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateAllPositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountFreed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountNeeded",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_liquidatedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "longCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maturityTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yield",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onMarketApproval"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_profit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_debtPayment",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pricePerContract",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "profit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullRawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "queryPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "readyForWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemUnderlying",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "returnCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOracle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_Utilizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUtilizer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVault"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "store_internal_balance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strikePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testqueriedPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradeTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validators",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract Vault",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOfUnderlying(address)": {
            "details": "May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers",
            "params": {
              "user": "The user to get the underlying balance of."
            },
            "returns": {
              "_0": "The user's Instrument balance in underlying tokens."
            }
          },
          "constructor": {
            "params": {
              "_pricePerContract": "is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values ",
              "_shortCollateral": "depends on how much underlyingAsset is in the vault. "
            }
          },
          "prepareWithdraw()": {
            "details": "prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs"
          },
          "redeemUnderlying(uint256)": {
            "params": {
              "amount": "The amount of underlying tokens to withdraw."
            },
            "returns": {
              "_0": "An error code, or 0 if the withdrawal was successful."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "Utilizer()": {
            "notice": "address of user who submits the liquidity proposal "
          },
          "balanceOfUnderlying(address)": {
            "notice": "Returns a user's Instrument balance in underlying tokens."
          },
          "claim()": {
            "notice": "either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings "
          },
          "deposit()": {
            "notice": "deposit for the utilizer"
          },
          "instrumentApprovalCondition()": {
            "notice": "returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  "
          },
          "onMarketApproval(uint256,uint256)": {
            "notice": "hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic"
          },
          "prepareWithdraw()": {
            "notice": "checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, "
          },
          "pullRawFunds(uint256)": {
            "notice": "raw funds should not be harvested by the vault"
          },
          "queryPrice()": {
            "notice": "queries oracle for the latest price of the underlying "
          },
          "readyForWithdrawal()": {
            "notice": "called at maturity"
          },
          "redeemUnderlying(uint256)": {
            "notice": "Withdraws a specific amount of underlying tokens from the Instrument."
          },
          "store_internal_balance()": {
            "notice": "called before resolve, to avoid calculating redemption price based on manipulations "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/math/=lib/prb-math/src/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vaults/dov.sol": "CoveredCallOTC"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bonds/GBC.sol": {
        "keccak256": "0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488",
        "urls": [
          "bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84",
          "dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T"
        ],
        "license": "UNLICENSED"
      },
      "contracts/bonds/boundedDerivatives.sol": {
        "keccak256": "0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0",
        "urls": [
          "bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c",
          "dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H"
        ],
        "license": null
      },
      "contracts/bonds/libraries.sol": {
        "keccak256": "0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091",
        "urls": [
          "bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e",
          "dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV"
        ],
        "license": null
      },
      "contracts/bonds/synthetic.sol": {
        "keccak256": "0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d",
        "urls": [
          "bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0",
          "dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA"
        ],
        "license": null
      },
      "contracts/chainlink/VRFConsumerBaseV2.sol": {
        "keccak256": "0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1",
        "urls": [
          "bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c",
          "dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM"
        ],
        "license": "MIT"
      },
      "contracts/chainlink/VRFCoordinatorV2Interface.sol": {
        "keccak256": "0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2",
        "urls": [
          "bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca",
          "dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc"
        ],
        "license": "MIT"
      },
      "contracts/instruments/IRateCalculator.sol": {
        "keccak256": "0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6",
        "urls": [
          "bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a",
          "dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1"
        ],
        "license": "ISC"
      },
      "contracts/instruments/VaultAccount.sol": {
        "keccak256": "0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff",
        "urls": [
          "bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1",
          "dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc"
        ],
        "license": "ISC"
      },
      "contracts/instruments/poolConstants.sol": {
        "keccak256": "0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4",
        "urls": [
          "bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a",
          "dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx"
        ],
        "license": null
      },
      "contracts/instruments/poolInstrument.sol": {
        "keccak256": "0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900",
        "urls": [
          "bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2",
          "dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q"
        ],
        "license": null
      },
      "contracts/protocol/controller.sol": {
        "keccak256": "0xa8c00017577c3a903dcbf0733e1ce6420cee38fb92d1a9bd8000c390b5b6f535",
        "urls": [
          "bzz-raw://950e14bd26c51df1e985040a4bcd9767eadcdf5966903aa37b70b1900e965e6e",
          "dweb:/ipfs/Qmazcs17SBNwksZ3r5CQAQEAvK7sLfyjgC3CvZFjiFqsDS"
        ],
        "license": null
      },
      "contracts/protocol/factories.sol": {
        "keccak256": "0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78",
        "urls": [
          "bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382",
          "dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa"
        ],
        "license": null
      },
      "contracts/protocol/marketmanager.sol": {
        "keccak256": "0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2",
        "urls": [
          "bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1",
          "dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu"
        ],
        "license": null
      },
      "contracts/protocol/reputationmanager.sol": {
        "keccak256": "0x8ae3f8c947d35fc3664a4c87871e3a154253dfd59de4f226ecd77cb73a8f7a06",
        "urls": [
          "bzz-raw://2bed62e72142649ec265fbd9ee46d75adf8ff42505b8d2d4a275b54b54b74de0",
          "dweb:/ipfs/Qmb1Dw3NVcsFujEEpPt5SqMpd8VnxrY5LsTDxHh7N9iTry"
        ],
        "license": null
      },
      "contracts/protocol/reputationtoken.sol": {
        "keccak256": "0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863",
        "urls": [
          "bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e",
          "dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et"
        ],
        "license": null
      },
      "contracts/protocol/validatorManager.sol": {
        "keccak256": "0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c",
        "urls": [
          "bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d",
          "dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h"
        ],
        "license": null
      },
      "contracts/utils/helpers.sol": {
        "keccak256": "0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779",
        "urls": [
          "bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933",
          "dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D"
        ],
        "license": null
      },
      "contracts/vaults/auth/Auth.sol": {
        "keccak256": "0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7",
        "urls": [
          "bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e",
          "dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/dov.sol": {
        "keccak256": "0x2fa30db5ee716ca7ba5d804be202996a599ce11cb3a316a7134ba1b691204b22",
        "urls": [
          "bzz-raw://6678c9146610a9fd124959917f551aecf9e07c8f0bb2bae6b63cf943db2943fa",
          "dweb:/ipfs/QmaR21xPhDPJioEkvPEUrE74BEhXdAQs9mHbQAXek9Usg8"
        ],
        "license": null
      },
      "contracts/vaults/instrument.sol": {
        "keccak256": "0x012b89147bf697e67baf9f7a17568ada1c4b3a21d4628454354c34e9a9dbd87e",
        "urls": [
          "bzz-raw://e73edbea2d30a4a1017033b3807899a1fab86d611dd8fb4b6a768682bb66698e",
          "dweb:/ipfs/QmeXxJArSgPhCcKXt9Xa2ucjWtcB75bLtwXdyviJfoXNF8"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/mixins/ERC4626.sol": {
        "keccak256": "0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2",
        "urls": [
          "bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb",
          "dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeCastLib.sol": {
        "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
        "urls": [
          "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
          "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/vault.sol": {
        "keccak256": "0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9",
        "urls": [
          "bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247",
          "dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2",
        "urls": [
          "bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4",
          "dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab",
        "urls": [
          "bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427",
          "dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vaults/dov.sol",
    "id": 21259,
    "exportedSymbols": {
      "Auth": [
        20892
      ],
      "Controller": [
        12408
      ],
      "CoveredCallOTC": [
        21258
      ],
      "ERC20": [
        24256
      ],
      "ERC4626": [
        23645
      ],
      "FixedPointMathLib": [
        24939
      ],
      "Instrument": [
        21723
      ],
      "MarketManager": [
        15447
      ],
      "Math": [
        56640
      ],
      "PoolInstrument": [
        9109
      ],
      "SafeCastLib": [
        25173
      ],
      "SafeTransferLib": [
        25258
      ],
      "Vault": [
        27446
      ],
      "console": [
        44826
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5768:24",
    "nodes": [
      {
        "id": 20907,
        "nodeType": "PragmaDirective",
        "src": "0:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 20908,
        "nodeType": "ImportDirective",
        "src": "26:21:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/vault.sol",
        "file": "./vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 27447,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20910,
        "nodeType": "ImportDirective",
        "src": "48:41:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/tokens/ERC20.sol",
        "file": "./tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 24257,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20909,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24256,
              "src": "56:5:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20911,
        "nodeType": "ImportDirective",
        "src": "90:52:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "openzeppelin-contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 56641,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20913,
        "nodeType": "ImportDirective",
        "src": "143:64:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/utils/FixedPointMathLib.sol",
        "file": "./utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 24940,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20912,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24939,
              "src": "151:17:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20914,
        "nodeType": "ImportDirective",
        "src": "208:31:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 44827,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20916,
        "nodeType": "ImportDirective",
        "src": "240:44:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/instrument.sol",
        "file": "./instrument.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 23026,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20915,
              "name": "Instrument",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21723,
              "src": "248:10:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20918,
        "nodeType": "ImportDirective",
        "src": "285:34:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/vault.sol",
        "file": "./vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21259,
        "sourceUnit": 27447,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20917,
              "name": "Vault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27446,
              "src": "293:5:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21258,
        "nodeType": "ContractDefinition",
        "src": "537:5230:24",
        "nodes": [
          {
            "id": 20924,
            "nodeType": "UsingForDirective",
            "src": "580:36:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 20922,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "586:17:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24939,
              "src": "586:17:24"
            },
            "typeName": {
              "id": 20923,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 20926,
            "nodeType": "VariableDeclaration",
            "src": "623:33:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c9ac4332",
            "mutability": "immutable",
            "name": "utilizer",
            "nameLocation": "648:8:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20925,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20928,
            "nodeType": "VariableDeclaration",
            "src": "662:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c52987cf",
            "mutability": "immutable",
            "name": "strikePrice",
            "nameLocation": "687:11:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20927,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "662:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20930,
            "nodeType": "VariableDeclaration",
            "src": "704:41:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c576ce01",
            "mutability": "immutable",
            "name": "pricePerContract",
            "nameLocation": "729:16:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20929,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20932,
            "nodeType": "VariableDeclaration",
            "src": "752:40:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "870dcaeb",
            "mutability": "immutable",
            "name": "shortCollateral",
            "nameLocation": "777:15:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "752:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20934,
            "nodeType": "VariableDeclaration",
            "src": "799:39:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb29bb9a",
            "mutability": "immutable",
            "name": "longCollateral",
            "nameLocation": "824:14:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20933,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "799:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20936,
            "nodeType": "VariableDeclaration",
            "src": "844:29:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "961be391",
            "mutability": "immutable",
            "name": "cash",
            "nameLocation": "869:4:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20935,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "844:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20938,
            "nodeType": "VariableDeclaration",
            "src": "880:37:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e8bfdaa",
            "mutability": "immutable",
            "name": "maturityTime",
            "nameLocation": "905:12:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20937,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20940,
            "nodeType": "VariableDeclaration",
            "src": "924:34:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "8eac2066",
            "mutability": "immutable",
            "name": "tradeTime",
            "nameLocation": "949:9:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20939,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "924:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20942,
            "nodeType": "VariableDeclaration",
            "src": "966:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "981:6:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "966:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20944,
            "nodeType": "VariableDeclaration",
            "src": "994:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "66d16cc3",
            "mutability": "mutable",
            "name": "profit",
            "nameLocation": "1009:6:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20943,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "994:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20947,
            "nodeType": "VariableDeclaration",
            "src": "1022:42:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "87479487",
            "mutability": "constant",
            "name": "timeThreshold",
            "nameLocation": "1046:13:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20945,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1022:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 20946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1062:2:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "id": 20949,
            "nodeType": "VariableDeclaration",
            "src": "1071:20:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utilizerClaimed",
            "nameLocation": "1076:15:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20948,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1071:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21024,
            "nodeType": "FunctionDefinition",
            "src": "1361:1032:24",
            "nodes": [],
            "body": {
              "id": 21023,
              "nodeType": "Block",
              "src": "1901:492:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20976,
                          "name": "_longCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20962,
                          "src": "1973:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 20979,
                              "name": "_pricePerContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20958,
                              "src": "2020:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 20977,
                              "name": "_shortCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20960,
                              "src": "1992:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 20978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2009:10:24",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24842,
                            "src": "1992:27:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 20980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1973:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742073657474696e67",
                        "id": 20982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        },
                        "value": "incorrect setting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        }
                      ],
                      "id": 20975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1965:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:95:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20984,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:95:24"
                },
                {
                  "expression": {
                    "id": 20987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20985,
                      "name": "utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20926,
                      "src": "2071:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20986,
                      "name": "_utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20954,
                      "src": "2082:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2071:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20988,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:20:24"
                },
                {
                  "expression": {
                    "id": 20991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20989,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20928,
                      "src": "2101:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20990,
                      "name": "_strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20956,
                      "src": "2115:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2101:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20992,
                  "nodeType": "ExpressionStatement",
                  "src": "2101:26:24"
                },
                {
                  "expression": {
                    "id": 20995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20993,
                      "name": "pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20930,
                      "src": "2138:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20994,
                      "name": "_pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20958,
                      "src": "2157:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2138:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20996,
                  "nodeType": "ExpressionStatement",
                  "src": "2138:36:24"
                },
                {
                  "expression": {
                    "id": 20999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20997,
                      "name": "shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20932,
                      "src": "2185:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20998,
                      "name": "_shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20960,
                      "src": "2203:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2185:34:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21000,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:34:24"
                },
                {
                  "expression": {
                    "id": 21003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21001,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "2230:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21002,
                      "name": "_longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20962,
                      "src": "2247:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2230:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21004,
                  "nodeType": "ExpressionStatement",
                  "src": "2230:32:24"
                },
                {
                  "expression": {
                    "id": 21007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21005,
                      "name": "cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20936,
                      "src": "2273:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21006,
                      "name": "_cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20964,
                      "src": "2280:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2273:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21008,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:12:24"
                },
                {
                  "expression": {
                    "id": 21014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21009,
                      "name": "tradeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20940,
                      "src": "2295:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 21010,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2307:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 21011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2313:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2307:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 21012,
                        "name": "_tradeTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20968,
                        "src": "2324:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2307:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2295:39:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21015,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:39:24"
                },
                {
                  "expression": {
                    "id": 21021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21016,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20938,
                      "src": "2345:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 21017,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2360:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 21018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2366:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2360:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 21019,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20966,
                        "src": "2378:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2360:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2345:41:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21022,
                  "nodeType": "ExpressionStatement",
                  "src": "2345:41:24"
                }
              ]
            },
            "documentation": {
              "id": 20950,
              "nodeType": "StructuredDocumentation",
              "src": "1099:257:24",
              "text": "@param _shortCollateral depends on how much underlyingAsset is in the vault. \n @param _pricePerContract is the price that the utilizer is willing to buy \n the call option. Usually implied vol here is lower than external implied vol values "
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 20971,
                    "name": "_vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20952,
                    "src": "1883:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 20972,
                    "name": "_utilizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20954,
                    "src": "1891:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 20973,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 20970,
                  "name": "Instrument",
                  "nameLocations": [
                    "1872:10:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21723,
                  "src": "1872:10:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1872:29:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 20969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20952,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1381:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1373:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20954,
                  "mutability": "mutable",
                  "name": "_utilizer",
                  "nameLocation": "1405:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1397:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20956,
                  "mutability": "mutable",
                  "name": "_strikePrice",
                  "nameLocation": "1432:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1424:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20958,
                  "mutability": "mutable",
                  "name": "_pricePerContract",
                  "nameLocation": "1463:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1455:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20960,
                  "mutability": "mutable",
                  "name": "_shortCollateral",
                  "nameLocation": "1563:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1555:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20962,
                  "mutability": "mutable",
                  "name": "_longCollateral",
                  "nameLocation": "1671:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1663:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20964,
                  "mutability": "mutable",
                  "name": "_cash",
                  "nameLocation": "1773:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1765:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20966,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1796:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1788:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20968,
                  "mutability": "mutable",
                  "name": "_tradeTime",
                  "nameLocation": "1822:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21024,
                  "src": "1814:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:499:24"
            },
            "returnParameters": {
              "id": 20974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21046,
            "nodeType": "FunctionDefinition",
            "src": "2399:143:24",
            "nodes": [],
            "body": {
              "id": 21045,
              "nodeType": "Block",
              "src": "2442:100:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21030,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2460:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2464:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2460:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 21033,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21362,
                                  "src": "2479:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vault_$27446",
                                    "typeString": "contract Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Vault_$27446",
                                    "typeString": "contract Vault"
                                  }
                                ],
                                "id": 21032,
                                "name": "Vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27446,
                                "src": "2473:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Vault_$27446_$",
                                  "typeString": "type(contract Vault)"
                                }
                              },
                              "id": 21034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2473:12:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$27446",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 21035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2486:5:24",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25397,
                            "src": "2473:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 21036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2473:20:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2460:33:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572",
                        "id": 21038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2495:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        },
                        "value": "not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        }
                      ],
                      "id": 21029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2452:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2452:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21040,
                  "nodeType": "ExpressionStatement",
                  "src": "2452:55:24"
                },
                {
                  "expression": {
                    "id": 21043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21041,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20942,
                      "src": "2518:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21042,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21026,
                      "src": "2527:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2518:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21044,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:16:24"
                }
              ]
            },
            "functionSelector": "7adbf973",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOracle",
            "nameLocation": "2408:9:24",
            "parameters": {
              "id": 21027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21026,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "2426:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21046,
                  "src": "2418:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2417:17:24"
            },
            "returnParameters": {
              "id": 21028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2442:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21068,
            "nodeType": "FunctionDefinition",
            "src": "2548:253:24",
            "nodes": [],
            "body": {
              "id": 21067,
              "nodeType": "Block",
              "src": "2595:206:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21052,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2683:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2689:9:24",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2683:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 21054,
                          "name": "tradeTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20940,
                          "src": "2701:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2683:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656465656d2077696e646f7720706173736564",
                        "id": 21056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2712:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a63c36c340e58c2c0e4f78beb2eebe48a6f6d3db82ee659fab37660a4afa64",
                          "typeString": "literal_string \"redeem window passed\""
                        },
                        "value": "redeem window passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a63c36c340e58c2c0e4f78beb2eebe48a6f6d3db82ee659fab37660a4afa64",
                          "typeString": "literal_string \"redeem window passed\""
                        }
                      ],
                      "id": 21051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2675:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21058,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:60:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21062,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2766:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2770:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2766:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21064,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20934,
                        "src": "2778:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21059,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21359,
                        "src": "2746:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24256",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2757:8:24",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24006,
                      "src": "2746:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:47:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21066,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:47:24"
                }
              ]
            },
            "functionSelector": "44ed456f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21049,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21048,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "2583:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21280,
                  "src": "2583:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2583:12:24"
              }
            ],
            "name": "returnCollateral",
            "nameLocation": "2557:16:24",
            "parameters": {
              "id": 21047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:2:24"
            },
            "returnParameters": {
              "id": 21050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21086,
            "nodeType": "FunctionDefinition",
            "src": "2978:150:24",
            "nodes": [],
            "body": {
              "id": 21085,
              "nodeType": "Block",
              "src": "3051:77:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21079,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3097:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                                "typeString": "contract CoveredCallOTC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                                "typeString": "contract CoveredCallOTC"
                              }
                            ],
                            "id": 21078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3089:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21077,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3089:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3089:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21075,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21359,
                          "src": "3068:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24256",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 21076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3079:9:24",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23899,
                        "src": "3068:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 21081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3068:35:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 21082,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "3107:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3068:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21074,
                  "id": 21084,
                  "nodeType": "Return",
                  "src": "3061:60:24"
                }
              ]
            },
            "baseFunctions": [
              21722
            ],
            "documentation": {
              "id": 21069,
              "nodeType": "StructuredDocumentation",
              "src": "2807:166:24",
              "text": "@notice returns true if the instrument can be approved\n and funds can be directed from vault. Utilizer must have escrowed\n to this contract before  "
            },
            "functionSelector": "83e754a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "instrumentApprovalCondition",
            "nameLocation": "2987:27:24",
            "overrides": {
              "id": 21071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3024:8:24"
            },
            "parameters": {
              "id": 21070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3014:2:24"
            },
            "returnParameters": {
              "id": 21074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21086,
                  "src": "3046:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:6:24"
            },
            "scope": 21258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21089,
            "nodeType": "VariableDeclaration",
            "src": "3133:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "e0186b8d",
            "mutability": "mutable",
            "name": "testqueriedPrice",
            "nameLocation": "3148:16:24",
            "scope": 21258,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3133:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 21088,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3165:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 21098,
            "nodeType": "FunctionDefinition",
            "src": "3247:129:24",
            "nodes": [],
            "body": {
              "id": 21097,
              "nodeType": "Block",
              "src": "3303:73:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21095,
                    "name": "strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20928,
                    "src": "3356:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21094,
                  "id": 21096,
                  "nodeType": "Return",
                  "src": "3349:18:24"
                }
              ]
            },
            "documentation": {
              "id": 21090,
              "nodeType": "StructuredDocumentation",
              "src": "3176:66:24",
              "text": "@notice queries oracle for the latest price of the underlying "
            },
            "functionSelector": "b0667cf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "queryPrice",
            "nameLocation": "3256:10:24",
            "parameters": {
              "id": 21091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3266:2:24"
            },
            "returnParameters": {
              "id": 21094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21093,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3297:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21098,
                  "src": "3289:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:15:24"
            },
            "scope": 21258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21141,
            "nodeType": "FunctionDefinition",
            "src": "3793:732:24",
            "nodes": [],
            "body": {
              "id": 21140,
              "nodeType": "Block",
              "src": "3830:695:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21103,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20944,
                          "src": "4005:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 21104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4015:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4005:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f66697420616c726561647920736574",
                        "id": 21106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4018:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        },
                        "value": "profit already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        }
                      ],
                      "id": 21102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3997:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3997:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21108,
                  "nodeType": "ExpressionStatement",
                  "src": "3997:42:24"
                },
                {
                  "assignments": [
                    21110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21110,
                      "mutability": "mutable",
                      "name": "queriedPrice",
                      "nameLocation": "4058:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 21140,
                      "src": "4050:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21109,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4050:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21113,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21111,
                      "name": "queryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21098,
                      "src": "4073:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 21112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4073:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4050:35:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21114,
                      "name": "queriedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21110,
                      "src": "4132:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 21115,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20928,
                      "src": "4148:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4132:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 21138,
                    "nodeType": "Block",
                    "src": "4284:235:24",
                    "statements": [
                      {
                        "assignments": [
                          21122
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21122,
                            "mutability": "mutable",
                            "name": "profitInCash",
                            "nameLocation": "4306:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 21138,
                            "src": "4298:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21121,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4298:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21130,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 21128,
                              "name": "shortCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20932,
                              "src": "4361:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21123,
                                    "name": "queriedPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21110,
                                    "src": "4322:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 21124,
                                    "name": "strikePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20928,
                                    "src": "4337:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4322:26:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 21126,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4321:28:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 21127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4350:10:24",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24842,
                            "src": "4321:39:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 21129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4321:56:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4298:79:24"
                      },
                      {
                        "expression": {
                          "id": 21136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 21131,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20944,
                            "src": "4461:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 21134,
                                "name": "queriedPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21110,
                                "src": "4494:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 21132,
                                "name": "profitInCash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21122,
                                "src": "4470:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 21133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4483:10:24",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24874,
                              "src": "4470:23:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 21135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4470:37:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4461:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21137,
                        "nodeType": "ExpressionStatement",
                        "src": "4461:46:24"
                      }
                    ]
                  },
                  "id": 21139,
                  "nodeType": "IfStatement",
                  "src": "4128:391:24",
                  "trueBody": {
                    "expression": {
                      "id": 21119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 21117,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20944,
                        "src": "4161:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 21118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4170:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4161:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21120,
                    "nodeType": "ExpressionStatement",
                    "src": "4161:10:24"
                  }
                }
              ]
            },
            "documentation": {
              "id": 21099,
              "nodeType": "StructuredDocumentation",
              "src": "3382:406:24",
              "text": "@notice for a given queriedPrice(usually the spot chainlink price at maturity)\n what is the profit returned to the utilizer \n @dev utillizers can call this function at maturity so they can realize profit it is positive \n if they miss the window(timethreshold), they can't realize profit. \n param queriedPrice must be the exact price at which option is exercised, at maturity"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "profitForUtilizer",
            "nameLocation": "3802:17:24",
            "parameters": {
              "id": 21100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3819:2:24"
            },
            "returnParameters": {
              "id": 21101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3830:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21190,
            "nodeType": "FunctionDefinition",
            "src": "4652:371:24",
            "nodes": [],
            "body": {
              "id": 21189,
              "nodeType": "Block",
              "src": "4690:333:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21148,
                          "name": "maturityTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20938,
                          "src": "4708:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 21149,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4723:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4729:9:24",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4723:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4708:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d617475726564",
                        "id": 21152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4740:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        },
                        "value": "not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        }
                      ],
                      "id": 21147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4700:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21154,
                  "nodeType": "ExpressionStatement",
                  "src": "4700:54:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21155,
                      "name": "profitForUtilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21141,
                      "src": "4764:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21157,
                  "nodeType": "ExpressionStatement",
                  "src": "4764:19:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21158,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20944,
                      "src": "4799:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 21159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4807:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4799:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21162,
                  "nodeType": "IfStatement",
                  "src": "4795:22:24",
                  "trueBody": {
                    "functionReturnParameters": 21146,
                    "id": 21161,
                    "nodeType": "Return",
                    "src": "4810:7:24"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4891:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4895:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4891:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21168,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20944,
                        "src": "4903:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21163,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21359,
                        "src": "4871:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24256",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4882:8:24",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24006,
                      "src": "4871:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21170,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:39:24"
                },
                {
                  "expression": {
                    "id": 21173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21171,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20944,
                      "src": "4921:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 21172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4930:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4921:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21174,
                  "nodeType": "ExpressionStatement",
                  "src": "4921:10:24"
                },
                {
                  "expression": {
                    "id": 21177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21175,
                      "name": "utilizerClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20949,
                      "src": "4942:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 21176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4960:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4942:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21178,
                  "nodeType": "ExpressionStatement",
                  "src": "4942:22:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21184,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5002:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                              "typeString": "contract CoveredCallOTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                              "typeString": "contract CoveredCallOTC"
                            }
                          ],
                          "id": 21183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4994:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21182,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4994:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4994:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5009:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 21179,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21362,
                        "src": "4975:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27446",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 21181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4981:12:24",
                      "memberName": "pingMaturity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26894,
                      "src": "4975:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 21187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4975:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21188,
                  "nodeType": "ExpressionStatement",
                  "src": "4975:40:24"
                }
              ]
            },
            "documentation": {
              "id": 21142,
              "nodeType": "StructuredDocumentation",
              "src": "4531:116:24",
              "text": "@notice either option buyers(utilizers) or sellers(protocol)\n can claim their proportion of the winnings "
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21144,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "4678:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21280,
                  "src": "4678:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4678:12:24"
              }
            ],
            "name": "claim",
            "nameLocation": "4661:5:24",
            "parameters": {
              "id": 21143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4666:2:24"
            },
            "returnParameters": {
              "id": 21146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4690:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21213,
            "nodeType": "FunctionDefinition",
            "src": "5064:191:24",
            "nodes": [],
            "body": {
              "id": 21212,
              "nodeType": "Block",
              "src": "5128:127:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 21197,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5148:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 21198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5154:9:24",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5148:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21199,
                                    "name": "maturityTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20938,
                                    "src": "5167:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 21200,
                                    "name": "timeThreshold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20947,
                                    "src": "5182:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5167:28:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5148:47:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21203,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20944,
                                  "src": "5199:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 21204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5209:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5199:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5148:62:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 21207,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5147:64:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 21208,
                          "name": "utilizerClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20949,
                          "src": "5231:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5147:99:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 21210,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5145:102:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21196,
                  "id": 21211,
                  "nodeType": "Return",
                  "src": "5138:109:24"
                }
              ]
            },
            "baseFunctions": [
              21515
            ],
            "documentation": {
              "id": 21191,
              "nodeType": "StructuredDocumentation",
              "src": "5029:30:24",
              "text": "@notice called at maturity"
            },
            "functionSelector": "bdf0f253",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readyForWithdrawal",
            "nameLocation": "5073:18:24",
            "overrides": {
              "id": 21193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5106:8:24"
            },
            "parameters": {
              "id": 21192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5091:2:24"
            },
            "returnParameters": {
              "id": 21196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21213,
                  "src": "5123:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5123:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5122:6:24"
            },
            "scope": 21258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21230,
            "nodeType": "FunctionDefinition",
            "src": "5306:116:24",
            "nodes": [],
            "body": {
              "id": 21229,
              "nodeType": "Block",
              "src": "5345:77:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5373:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5377:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5373:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21224,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5393:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                              "typeString": "contract CoveredCallOTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21258",
                              "typeString": "contract CoveredCallOTC"
                            }
                          ],
                          "id": 21223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5385:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5385:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5385:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21226,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20934,
                        "src": "5400:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21219,
                      "name": "transfer_liq_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21651,
                      "src": "5355:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21228,
                  "nodeType": "ExpressionStatement",
                  "src": "5355:60:24"
                }
              ]
            },
            "documentation": {
              "id": 21214,
              "nodeType": "StructuredDocumentation",
              "src": "5261:40:24",
              "text": "deposit for the utilizer"
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21216,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "5332:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21280,
                  "src": "5332:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5332:12:24"
              }
            ],
            "name": "deposit",
            "nameLocation": "5315:7:24",
            "parameters": {
              "id": 21215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5322:2:24"
            },
            "returnParameters": {
              "id": 21218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5345:0:24"
            },
            "scope": 21258,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21257,
            "nodeType": "FunctionDefinition",
            "src": "5428:337:24",
            "nodes": [],
            "body": {
              "id": 21256,
              "nodeType": "Block",
              "src": "5644:121:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 21247,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20928,
                        "src": "5662:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21248,
                        "name": "pricePerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20930,
                        "src": "5675:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21249,
                        "name": "shortCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20932,
                        "src": "5693:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21250,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20934,
                        "src": "5710:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21251,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20938,
                        "src": "5726:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21252,
                        "name": "tradeTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20940,
                        "src": "5740:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21253,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20942,
                        "src": "5751:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 21254,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5661:97:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,address)"
                    }
                  },
                  "functionReturnParameters": 21246,
                  "id": 21255,
                  "nodeType": "Return",
                  "src": "5654:104:24"
                }
              ]
            },
            "functionSelector": "29bb64c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "instrumentStaticSnapshot",
            "nameLocation": "5437:24:24",
            "parameters": {
              "id": 21231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5461:2:24"
            },
            "returnParameters": {
              "id": 21246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21233,
                  "mutability": "mutable",
                  "name": "_strikePrice",
                  "nameLocation": "5493:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5485:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5485:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21235,
                  "mutability": "mutable",
                  "name": "_pricePerContract",
                  "nameLocation": "5515:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5507:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21237,
                  "mutability": "mutable",
                  "name": "_shortCollateral",
                  "nameLocation": "5542:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5534:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21239,
                  "mutability": "mutable",
                  "name": "_longCollateral",
                  "nameLocation": "5568:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5560:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21241,
                  "mutability": "mutable",
                  "name": "_maturityTime",
                  "nameLocation": "5593:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5585:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5585:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21243,
                  "mutability": "mutable",
                  "name": "_tradeTime",
                  "nameLocation": "5616:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5608:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5608:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21245,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5636:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21257,
                  "src": "5628:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5628:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5484:160:24"
            },
            "scope": 21258,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20920,
              "name": "Instrument",
              "nameLocations": [
                "564:10:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21723,
              "src": "564:10:24"
            },
            "id": 20921,
            "nodeType": "InheritanceSpecifier",
            "src": "564:10:24"
          }
        ],
        "canonicalName": "CoveredCallOTC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 20919,
          "nodeType": "StructuredDocumentation",
          "src": "322:215:24",
          "text": "@notice This contract acts as an OTC option platform\n Utilizer will \"propose\" a strike price to buy\n At maturity, premiums from utilizer will be collected by the vault when expires\n below strike price "
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21258,
          21723
        ],
        "name": "CoveredCallOTC",
        "nameLocation": "546:14:24",
        "scope": 21259,
        "usedErrors": []
      }
    ]
  },
  "id": 24
}