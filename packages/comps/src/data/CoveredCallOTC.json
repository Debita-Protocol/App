{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_utilizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerContract",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shortCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_longCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cash",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tradeTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityTransfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "estimatedTotalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaturityBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instrumentApprovalCondition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "instrumentStaticSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerContract",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_shortCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_longCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tradeTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "isLiquid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateAllPositions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amountFreed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountNeeded",
          "type": "uint256"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_liquidatedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "longCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yield",
          "type": "uint256"
        }
      ],
      "name": "onMarketApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prepareWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loss",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_debtPayment",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricePerContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullRawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readyForWithdrawal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_Utilizer",
          "type": "address"
        }
      ],
      "name": "setUtilizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shortCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "store_internal_balance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strikePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testqueriedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilizer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract Vault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610180604052670de0b6b3a7640000600b553480156200001e57600080fd5b5060405162001b5c38038062001b5c8339810160408190526200004191620002a7565b600180546001600160a01b0319166001600160a01b038b16908117909155604080516362eb326360e11b815290518b928b92909163c5d664c6916004808201926020929091908290030181865afa158015620000a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c7919062000337565b600080546001600160a01b0319166001600160a01b0392831690811790915560405163095ea7b360e01b8152918416600483015260001960248301529063095ea7b3906044016020604051808303816000875af11580156200012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015391906200035e565b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200018d85876200024e602090811b6200118a17901c565b8414620001d45760405162461bcd60e51b8152602060048201526011602482015270696e636f72726563742073657474696e6760781b604482015260640160405180910390fd5b6001600160a01b038089166080526000541660a05260c087905260e08690526101008590526101208490526200020b814262000382565b610160526200021b824262000382565b610140525050600780546001600160a01b0319166001600160a01b039290921691909117905550620003a4945050505050565b6000620002658383670de0b6b3a76400006200026e565b90505b92915050565b8282028115158415858304851417166200028757600080fd5b0492915050565b6001600160a01b0381168114620002a457600080fd5b50565b60008060008060008060008060006101208a8c031215620002c757600080fd5b8951620002d4816200028e565b60208b0151909950620002e7816200028e565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a015162000317816200028e565b8093505060e08a015191506101008a015190509295985092959850929598565b6000602082840312156200034a57600080fd5b815162000357816200028e565b9392505050565b6000602082840312156200037157600080fd5b815180151581146200035757600080fd5b808201808211156200026857634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e051610100516101205161014051610160516116f7620004656000396000818161031f0152818161052201526107fd0152600081816102f9015281816103f8015281816109550152610f370152600081816102d3015281816106110152818161086801528181610e0d0152610fac0152600081816102ab01526104f301526000818161028501526105c30152600081816102620152818161056b015261059c0152600061048b015260006105ea01526116f76000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806383e754a01161013b578063c576ce01116100b8578063d832f7911161007c578063d832f79114610666578063e0186b8d14610679578063efbb5cb01461041a578063f3aa68d314610682578063fbfa77cf1461068a57600080fd5b8063c576ce01146105be578063c9ac4332146105e5578063cb29bb9a1461060c578063cdddd4e514610633578063d0e30db01461065e57600080fd5b8063961be391116100ff578063961be39114610544578063a4e2d63414610557578063b0667cf814610569578063bdf0f2531461058f578063c52987cf1461059757600080fd5b806383e754a0146104d3578063852a12e3146104db578063870dcaeb146104ee57806387479487146105155780638eac20661461051d57600080fd5b80634e8bfdaa116101c95780636817031b1161018d5780636817031b146104605780636f307dc3146104735780637158da7c146104865780637adbf973146104ad5780637dc0d1d0146104c057600080fd5b80634e8bfdaa146103f357806350bb4beb1461041a578063537d94091461042157806357b259961461044457806366d16cc31461045757600080fd5b80633af9e669116102105780633af9e66914610399578063416288dd146103ac57806344ed456f146103c057806349dcf4ed146103c85780634e71d92d146103eb57600080fd5b80631104aafd1461024257806329bb64c814610259578063350896fe1461035b57806335aa2e4414610386575b600080fd5b6002545b6040519081526020015b60405180910390f35b600854604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201526001600160a01b0390911660c082015260e001610250565b60045461036e906001600160a01b031681565b6040516001600160a01b039091168152602001610250565b61036e610394366004611513565b61069d565b6102466103a7366004611541565b6106c7565b6103be6103ba36600461155e565b5050565b005b6103be6107c8565b6103d061088e565b60408051938452602084019290925290820152606001610250565b6103be610928565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6000610246565b61043461042f366004611513565b610ab3565b6040519015158152602001610250565b6103be610452366004611541565b610afa565b61024660095481565b6103be61046e366004611541565b610c0e565b60005461036e906001600160a01b031681565b61036e7f000000000000000000000000000000000000000000000000000000000000000081565b6103be6104bb366004611541565b610d0f565b60085461036e906001600160a01b031681565b610434610df4565b6104346104e9366004611513565b610e88565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b610246600a81565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b60075461036e906001600160a01b031681565b600154600160a01b900460ff16610434565b7f0000000000000000000000000000000000000000000000000000000000000000610246565b610434610f2e565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b61036e7f000000000000000000000000000000000000000000000000000000000000000081565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b610649610641366004611513565b600080915091565b60408051928352602083019190915201610250565b6103be610f7c565b6103be610674366004611513565b610fd0565b610246600b5481565b6103be611066565b60015461036e906001600160a01b031681565b600581815481106106ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000306001600160a01b0383160361075a576003546000546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611580565b61075491906115af565b92915050565b6000546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611580565b6004546001600160a01b031633146107fb5760405162461bcd60e51b81526004016107f2906115c2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004211156108625760405162461bcd60e51b81526020600482015260146024820152731c995919595b481dda5b991bddc81c185cdcd95960621b60448201526064016107f2565b61088c337f00000000000000000000000000000000000000000000000000000000000000006111a6565b565b600154600090819081906001600160a01b031633146108bf5760405162461bcd60e51b81526004016107f2906115e5565b6108c7610f2e565b61090b5760405162461bcd60e51b81526020600482015260156024820152746e6f7420726561647920746f20776974686472617760581b60448201526064016107f2565b6109236001805460ff60a01b1916600160a01b179055565b909192565b6004546001600160a01b031633146109525760405162461bcd60e51b81526004016107f2906115c2565b427f0000000000000000000000000000000000000000000000000000000000000000106109af5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081b585d1d5c995960aa1b60448201526064016107f2565b6109b7611366565b6009541561088c5760005460095460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611613565b5060006009819055600a805460ff191660019081179091555460405163109d3ea960e11b815230600482015260248101929092526001600160a01b03169063213a7d5290604401600060405180830381600087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b50505050565b6000610ae8604051806040016040528060088152602001671a5cdb1a5c5d5a5960c21b815250610ae2306106c7565b846113b5565b81610af2306106c7565b101592915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b719190611635565b6001600160a01b0316336001600160a01b03161480610b9f57503360009081526006602052604090205460ff165b610bd95760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107f2565b6001600160a01b038116610bec57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611635565b6001600160a01b0316336001600160a01b03161480610cb357503360009081526006602052604090205460ff165b610ced5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107f2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190611635565b6001600160a01b0316336001600160a01b031614610dd25760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016107f2565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e819190611580565b1015905090565b6001546000906001600160a01b03163314610eb55760405162461bcd60e51b81526004016107f2906115e5565b60005460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610f0a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611613565b6000610f5b600a7f0000000000000000000000000000000000000000000000000000000000000000611652565b4210158015610f6a5750600954155b80610f775750600a5460ff165b905090565b6004546001600160a01b03163314610fa65760405162461bcd60e51b81526004016107f2906115c2565b61088c337f0000000000000000000000000000000000000000000000000000000000000000611401565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b9190611613565b50806003600082825461105e9190611652565b909155505050565b6001546001600160a01b031633146110905760405162461bcd60e51b81526004016107f2906115e5565b611099306106c7565b60025560015460408051637e0b9fe360e11b815290516001600160a01b039092169163fc173fc6916004808201926020929091908290030181865afa1580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a9190611613565b1561088c57600154600254604051634b674ead60e11b81526001600160a01b03909216916396ce9d5a916111449160040190815260200190565b602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190611580565b600255565b600061119f8383670de0b6b3a76400006114d3565b9392505050565b600154600160a01b900460ff16156111bd57600080fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663fc173fc66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190611613565b156112a95760015460405163098b6def60e11b8152600481018390526001600160a01b0390911690631316dbde90602401602060405180830381865afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190611580565b90505b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190611613565b506040518181526001600160a01b0383169030907fb694ac7b1acb87c2bd80288c8e244829d9291406c57928137d913bd13664c9dd906020015b60405180910390a35050565b600954156113ab5760405162461bcd60e51b81526020600482015260126024820152711c1c9bd99a5d08185b1c9958591e481cd95d60721b60448201526064016107f2565b6000600955565b50565b6113fc8383836040516024016113cd93929190611665565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790526114f2565b505050565b600154600160a01b900460ff161561141857600080fd5b6000546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190611613565b5060405181815230906001600160a01b038416907fb694ac7b1acb87c2bd80288c8e244829d9291406c57928137d913bd13664c9dd9060200161135a565b8282028115158415858304851417166114eb57600080fd5b0492915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561152557600080fd5b5035919050565b6001600160a01b03811681146113b257600080fd5b60006020828403121561155357600080fd5b813561119f8161152c565b6000806040838503121561157157600080fd5b50508035926020909101359150565b60006020828403121561159257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561075457610754611599565b60208082526009908201526810aaba34b634bd32b960b91b604082015260600190565b60208082526014908201527318d85b1b195c881b5d5cdd081899481d985d5b1d60621b604082015260600190565b60006020828403121561162557600080fd5b8151801515811461119f57600080fd5b60006020828403121561164757600080fd5b815161119f8161152c565b8082018082111561075457610754611599565b606081526000845180606084015260005b818110156116935760208188018101516080868401015201611676565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220b4132f9213e116e98ad2c5d28fffa8e48d04f901c02ecf25a4c0fdb172cb3da364736f6c63430008110033",
    "sourceMap": "537:5496:24:-:0;;;3328:4;3296:36;;1397:1105;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:5:25;:21;;-1:-1:-1;;;;;;893:21:25;-1:-1:-1;;;;;893:21:25;;;;;;;;943:18;;;-1:-1:-1;;;943:18:25;;;;893:21;;1931:9:24;;893:21:25;;943:16;;:18;;;;;;;;;;;;;;;893:21;943:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;924:10;:38;;-1:-1:-1;;;;;;924:38:25;-1:-1:-1;;;;;924:38:25;;;;;;;;;972:36;;-1:-1:-1;;;972:36:25;;1509:32:81;;;972:36:25;;;1491:51:81;-1:-1:-1;;1558:18:81;;;1551:34;924:38:25;972:18;;1464::81;;972:36:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1050:8:25;:20;;-1:-1:-1;;;;;;1050:20:25;-1:-1:-1;;;;;1050:20:25;;;;;;;;;;-1:-1:-1;2032:46:24::1;:16:::0;2060:17;2032:27:::1;;::::0;;::::1;;;:46:::0;::::1;:::i;:::-;2013:15;:65;2005:95;;;::::0;-1:-1:-1;;;2005:95:24;;2080:2:81;2005:95:24::1;::::0;::::1;2062:21:81::0;2119:2;2099:18;;;2092:30;-1:-1:-1;;;2138:18:81;;;2131:47;2195:18;;2005:95:24::1;;;;;;;;-1:-1:-1::0;;;;;2111:20:24;;::::1;;::::0;2168:10:::1;::::0;::::1;2142:37;::::0;2211:26:::1;::::0;;;2248:36:::1;::::0;;;2168:10:::1;2295:34:::0;;;2340:32:::1;::::0;;;2394:27:::1;2411:10:::0;2394:15:::1;:27;:::i;:::-;2382:39;::::0;2447:26:::1;2465:8:::0;2447:15:::1;:26;:::i;:::-;2432:41;::::0;-1:-1:-1;;2483:4:24::1;:12:::0;;-1:-1:-1;;;;;;2483:12:24::1;-1:-1:-1::0;;;;;2483:12:24;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;537:5496:24;;-1:-1:-1;;;;;537:5496:24;647:164:30;712:7;738:21;749:1;752;598:4;738:10;:21::i;:::-;731:28;;647:164;;;;;:::o;1507:535::-;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;14:131:81:-;-1:-1:-1;;;;;89:31:81;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:891::-;292:6;300;308;316;324;332;340;348;356;409:3;397:9;388:7;384:23;380:33;377:53;;;426:1;423;416:12;377:53;458:9;452:16;477:31;502:5;477:31;:::i;:::-;577:2;562:18;;556:25;527:5;;-1:-1:-1;590:33:81;556:25;590:33;:::i;:::-;642:7;632:17;;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;777:3;766:9;762:19;756:26;746:36;;822:3;811:9;807:19;801:26;791:36;;872:3;861:9;857:19;851:26;886:33;911:7;886:33;:::i;:::-;938:7;928:17;;;985:3;974:9;970:19;964:26;954:36;;1030:3;1019:9;1015:19;1009:26;999:36;;150:891;;;;;;;;;;;:::o;1046:266::-;1131:6;1184:2;1172:9;1163:7;1159:23;1155:32;1152:52;;;1200:1;1197;1190:12;1152:52;1232:9;1226:16;1251:31;1276:5;1251:31;:::i;:::-;1301:5;1046:266;-1:-1:-1;;;1046:266:81:o;1596:277::-;1663:6;1716:2;1704:9;1695:7;1691:23;1687:32;1684:52;;;1732:1;1729;1722:12;1684:52;1764:9;1758:16;1817:5;1810:13;1803:21;1796:5;1793:32;1783:60;;1839:1;1836;1829:12;2224:222;2289:9;;;2310:10;;;2307:133;;;2362:10;2357:3;2353:20;2350:1;2343:31;2397:4;2394:1;2387:15;2425:4;2422:1;2415:15;2224:222;537:5496:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061023d5760003560e01c806383e754a01161013b578063c576ce01116100b8578063d832f7911161007c578063d832f79114610666578063e0186b8d14610679578063efbb5cb01461041a578063f3aa68d314610682578063fbfa77cf1461068a57600080fd5b8063c576ce01146105be578063c9ac4332146105e5578063cb29bb9a1461060c578063cdddd4e514610633578063d0e30db01461065e57600080fd5b8063961be391116100ff578063961be39114610544578063a4e2d63414610557578063b0667cf814610569578063bdf0f2531461058f578063c52987cf1461059757600080fd5b806383e754a0146104d3578063852a12e3146104db578063870dcaeb146104ee57806387479487146105155780638eac20661461051d57600080fd5b80634e8bfdaa116101c95780636817031b1161018d5780636817031b146104605780636f307dc3146104735780637158da7c146104865780637adbf973146104ad5780637dc0d1d0146104c057600080fd5b80634e8bfdaa146103f357806350bb4beb1461041a578063537d94091461042157806357b259961461044457806366d16cc31461045757600080fd5b80633af9e669116102105780633af9e66914610399578063416288dd146103ac57806344ed456f146103c057806349dcf4ed146103c85780634e71d92d146103eb57600080fd5b80631104aafd1461024257806329bb64c814610259578063350896fe1461035b57806335aa2e4414610386575b600080fd5b6002545b6040519081526020015b60405180910390f35b600854604080517f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201526001600160a01b0390911660c082015260e001610250565b60045461036e906001600160a01b031681565b6040516001600160a01b039091168152602001610250565b61036e610394366004611513565b61069d565b6102466103a7366004611541565b6106c7565b6103be6103ba36600461155e565b5050565b005b6103be6107c8565b6103d061088e565b60408051938452602084019290925290820152606001610250565b6103be610928565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6000610246565b61043461042f366004611513565b610ab3565b6040519015158152602001610250565b6103be610452366004611541565b610afa565b61024660095481565b6103be61046e366004611541565b610c0e565b60005461036e906001600160a01b031681565b61036e7f000000000000000000000000000000000000000000000000000000000000000081565b6103be6104bb366004611541565b610d0f565b60085461036e906001600160a01b031681565b610434610df4565b6104346104e9366004611513565b610e88565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b610246600a81565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b60075461036e906001600160a01b031681565b600154600160a01b900460ff16610434565b7f0000000000000000000000000000000000000000000000000000000000000000610246565b610434610f2e565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b61036e7f000000000000000000000000000000000000000000000000000000000000000081565b6102467f000000000000000000000000000000000000000000000000000000000000000081565b610649610641366004611513565b600080915091565b60408051928352602083019190915201610250565b6103be610f7c565b6103be610674366004611513565b610fd0565b610246600b5481565b6103be611066565b60015461036e906001600160a01b031681565b600581815481106106ad57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000306001600160a01b0383160361075a576003546000546040516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611580565b61075491906115af565b92915050565b6000546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611580565b6004546001600160a01b031633146107fb5760405162461bcd60e51b81526004016107f2906115c2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000004211156108625760405162461bcd60e51b81526020600482015260146024820152731c995919595b481dda5b991bddc81c185cdcd95960621b60448201526064016107f2565b61088c337f00000000000000000000000000000000000000000000000000000000000000006111a6565b565b600154600090819081906001600160a01b031633146108bf5760405162461bcd60e51b81526004016107f2906115e5565b6108c7610f2e565b61090b5760405162461bcd60e51b81526020600482015260156024820152746e6f7420726561647920746f20776974686472617760581b60448201526064016107f2565b6109236001805460ff60a01b1916600160a01b179055565b909192565b6004546001600160a01b031633146109525760405162461bcd60e51b81526004016107f2906115c2565b427f0000000000000000000000000000000000000000000000000000000000000000106109af5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081b585d1d5c995960aa1b60448201526064016107f2565b6109b7611366565b6009541561088c5760005460095460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611613565b5060006009819055600a805460ff191660019081179091555460405163109d3ea960e11b815230600482015260248101929092526001600160a01b03169063213a7d5290604401600060405180830381600087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b50505050565b6000610ae8604051806040016040528060088152602001671a5cdb1a5c5d5a5960c21b815250610ae2306106c7565b846113b5565b81610af2306106c7565b101592915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b719190611635565b6001600160a01b0316336001600160a01b03161480610b9f57503360009081526006602052604090205460ff165b610bd95760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107f2565b6001600160a01b038116610bec57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611635565b6001600160a01b0316336001600160a01b03161480610cb357503360009081526006602052604090205460ff165b610ced5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016107f2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190611635565b6001600160a01b0316336001600160a01b031614610dd25760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016107f2565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e819190611580565b1015905090565b6001546000906001600160a01b03163314610eb55760405162461bcd60e51b81526004016107f2906115e5565b60005460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610f0a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190611613565b6000610f5b600a7f0000000000000000000000000000000000000000000000000000000000000000611652565b4210158015610f6a5750600954155b80610f775750600a5460ff165b905090565b6004546001600160a01b03163314610fa65760405162461bcd60e51b81526004016107f2906115c2565b61088c337f0000000000000000000000000000000000000000000000000000000000000000611401565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b9190611613565b50806003600082825461105e9190611652565b909155505050565b6001546001600160a01b031633146110905760405162461bcd60e51b81526004016107f2906115e5565b611099306106c7565b60025560015460408051637e0b9fe360e11b815290516001600160a01b039092169163fc173fc6916004808201926020929091908290030181865afa1580156110e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110a9190611613565b1561088c57600154600254604051634b674ead60e11b81526001600160a01b03909216916396ce9d5a916111449160040190815260200190565b602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190611580565b600255565b600061119f8383670de0b6b3a76400006114d3565b9392505050565b600154600160a01b900460ff16156111bd57600080fd5b600160009054906101000a90046001600160a01b03166001600160a01b031663fc173fc66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112349190611613565b156112a95760015460405163098b6def60e11b8152600481018390526001600160a01b0390911690631316dbde90602401602060405180830381865afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a69190611580565b90505b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190611613565b506040518181526001600160a01b0383169030907fb694ac7b1acb87c2bd80288c8e244829d9291406c57928137d913bd13664c9dd906020015b60405180910390a35050565b600954156113ab5760405162461bcd60e51b81526020600482015260126024820152711c1c9bd99a5d08185b1c9958591e481cd95d60721b60448201526064016107f2565b6000600955565b50565b6113fc8383836040516024016113cd93929190611665565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790526114f2565b505050565b600154600160a01b900460ff161561141857600080fd5b6000546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114959190611613565b5060405181815230906001600160a01b038416907fb694ac7b1acb87c2bd80288c8e244829d9291406c57928137d913bd13664c9dd9060200161135a565b8282028115158415858304851417166114eb57600080fd5b0492915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561152557600080fd5b5035919050565b6001600160a01b03811681146113b257600080fd5b60006020828403121561155357600080fd5b813561119f8161152c565b6000806040838503121561157157600080fd5b50508035926020909101359150565b60006020828403121561159257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561075457610754611599565b60208082526009908201526810aaba34b634bd32b960b91b604082015260600190565b60208082526014908201527318d85b1b195c881b5d5cdd081899481d985d5b1d60621b604082015260600190565b60006020828403121561162557600080fd5b8151801515811461119f57600080fd5b60006020828403121561164757600080fd5b815161119f8161152c565b8082018082111561075457610754611599565b606081526000845180606084015260005b818110156116935760208188018101516080868401015201611676565b506000608082850101526080601f19601f83011684010191505083602083015282604083015294935050505056fea2646970667358221220b4132f9213e116e98ad2c5d28fffa8e48d04f901c02ecf25a4c0fdb172cb3da364736f6c63430008110033",
    "sourceMap": "537:5496:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5982:99:25;6057:16;;5982:99;;;160:25:81;;;148:2;133:18;5982:99:25;;;;;;;;5694:337:24;6017:6;;5694:337;;;5928:11;511:25:81;;5941:16:24;567:2:81;552:18;;545:34;5959:15:24;595:18:81;;;588:34;;;;5976:14:24;653:2:81;638:18;;631:34;5992:12:24;696:3:81;681:19;;674:35;6006:9:24;740:3:81;725:19;;718:35;-1:-1:-1;;;;;6017:6:24;;;784:3:81;769:19;;762:61;498:3;483:19;5694:337:24;196:633:81;1339:23:25;;;;;-1:-1:-1;;;;;1339:23:25;;;;;;-1:-1:-1;;;;;998:32:81;;;980:51;;968:2;953:18;1339:23:25;834:203:81;1369:27:25;;;;;;:::i;:::-;;:::i;2991:211::-;;;;;;:::i;:::-;;:::i;1625:79::-;;;;;;:::i;:::-;;;;;;2658:305:24;;;:::i;4214:388:25:-;;;:::i;:::-;;;;2070:25:81;;;2126:2;2111:18;;2104:34;;;;2154:18;;;2147:34;2058:2;2043:18;4214:388:25;1868:319:81;5085:371:24;;;:::i;892:37::-;;;;;4734:81:25;4792:20;4734:81;;6087:230;;;;;;:::i;:::-;;:::i;:::-;;;2357:14:81;;2350:22;2332:41;;2320:2;2305:18;6087:230:25;2192:187:81;1710:143:25;;;;;;:::i;:::-;;:::i;1030:21:24:-;;;;;;2080:101:25;;;;;;:::i;:::-;;:::i;1084:23::-;;;;;-1:-1:-1;;;;;1084:23:25;;;663:40:24;;;;;2508:144;;;;;;:::i;:::-;;:::i;1003:21::-;;;;;-1:-1:-1;;;;;1003:21:24;;;3140:150;;;:::i;2410:221:25:-;;;;;;:::i;:::-;;:::i;800:40:24:-;;;;;1058:42;;1098:2;1058:42;;936:34;;;;;978:19;;;;;-1:-1:-1;;;;;978:19:24;;;4895:76:25;4957:6;;-1:-1:-1;;;4957:6:25;;;;4895:76;;3410:129:24;3519:11;3410:129;;5497:191;;;:::i;710:36::-;;;;;752:41;;;;;623:33;;;;;847:39;;;;;4609:118:25;;;;;;:::i;:::-;4684:25;4711:13;4609:118;;;;;;;;2781:25:81;;;2837:2;2822:18;;2815:34;;;;2754:18;4609:118:25;2607:248:81;4797:161:24;;;:::i;3271:149:25:-;;;;;;:::i;:::-;;:::i;3296:36:24:-;;;;;;5750:226:25;;;:::i;1113:18::-;;;;;-1:-1:-1;;;;;1113:18:25;;;1369:27;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1369:27:25;;-1:-1:-1;1369:27:25;:::o;2991:211::-;3063:7;3100:4;-1:-1:-1;;;;;3084:21:25;;;3081:70;;3143:8;;3114:10;;:26;;-1:-1:-1;;;3114:26:25;;-1:-1:-1;;;;;998:32:81;;;3114:26:25;;;980:51:81;3114:10:25;;;;:20;;953:18:81;;3114:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;;:::i;:::-;3107:44;2991:211;-1:-1:-1;;2991:211:25:o;3081:70::-;3168:10;;:26;;-1:-1:-1;;;3168:26:25;;-1:-1:-1;;;;;998:32:81;;;3168:26:25;;;980:51:81;3168:10:25;;;;:20;;953:18:81;;3168:26:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2658:305:24:-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;;;;;;;;;2812:9:24::1;2794:15;:27;;2786:60;;;::::0;-1:-1:-1;;;2786:60:24;;4076:2:81;2786:60:24::1;::::0;::::1;4058:21:81::0;4115:2;4095:18;;;4088:30;-1:-1:-1;;;4134:18:81;;;4127:50;4194:18;;2786:60:24::1;3874:344:81::0;2786:60:24::1;2916:40;2929:10;2941:14;2916:12;:40::i;:::-;2658:305::o:0;4214:388:25:-;685:5;;4324:15;;;;;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;4432:20:::1;:18;:20::i;:::-;4424:54;;;::::0;-1:-1:-1;;;4424:54:25;;4774:2:81;4424:54:25::1;::::0;::::1;4756:21:81::0;4813:2;4793:18;;;4786:30;-1:-1:-1;;;4832:18:81;;;4825:51;4893:18;;4424:54:25::1;4572:345:81::0;4424:54:25::1;4567:19;4877:4:::0;4868:13;;-1:-1:-1;;;;4868:13:25;-1:-1:-1;;;4868:13:25;;;4821:68;4567:19:::1;4214:388:::0;;;:::o;5085:371:24:-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;5156:15:24::1;5141:12;:30;5133:54;;;::::0;-1:-1:-1;;;5133:54:24;;5124:2:81;5133:54:24::1;::::0;::::1;5106:21:81::0;5163:2;5143:18;;;5136:30;-1:-1:-1;;;5182:18:81;;;5175:41;5233:18;;5133:54:24::1;4922:335:81::0;5133:54:24::1;5197:19;:17;:19::i;:::-;5232:6;::::0;5228:22;5243:7:::1;5228:22;5304:10;::::0;5336:6:::1;::::0;5304:39:::1;::::0;-1:-1:-1;;;5304:39:24;;5324:10:::1;5304:39;::::0;::::1;5436:51:81::0;5503:18;;;5496:34;;;;-1:-1:-1;;;;;5304:10:24;;::::1;::::0;:19:::1;::::0;5409:18:81;;5304:39:24::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5363:1:24::1;5354:6;:10:::0;;;5375:15:::1;:22:::0;;-1:-1:-1;;5375:22:24::1;5393:4;5375:22:::0;;::::1;::::0;;;5408:5;:40:::1;::::0;-1:-1:-1;;;5408:40:24;;5435:4:::1;5408:40;::::0;::::1;5991:51:81::0;6058:18;;;6051:50;;;;-1:-1:-1;;;;;5408:5:24::1;::::0;:18:::1;::::0;5964::81;;5408:40:24::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5085:371::o:0;6087:230:25:-;6149:4;6180:67;;;;;;;;;;;;;;-1:-1:-1;;;6180:67:25;;;6204:34;6232:4;6204:19;:34::i;:::-;6240:6;6180:11;:67::i;:::-;6303:6;6265:34;6293:4;6265:19;:34::i;:::-;:44;;;6087:230;-1:-1:-1;;6087:230:25:o;1710:143::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;6570:2:81;522:78:25;;;6552:21:81;6609:2;6589:18;;;6582:30;-1:-1:-1;;;6628:18:81;;;6621:41;6679:18;;522:78:25;6368:335:81;522:78:25;-1:-1:-1;;;;;1792:23:25;::::1;1784:32;;;::::0;::::1;;1826:8;:20:::0;;-1:-1:-1;;;;;;1826:20:25::1;-1:-1:-1::0;;;;;1826:20:25;;;::::1;::::0;;;::::1;::::0;;1710:143::o;2080:101::-;544:5;;;;;;;;;-1:-1:-1;;;;;544:5:25;-1:-1:-1;;;;;544:11:25;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;530:27:25;:10;-1:-1:-1;;;;;530:27:25;;:54;;;-1:-1:-1;573:10:25;561:23;;;;:11;:23;;;;;;;;530:54;522:78;;;;-1:-1:-1;;;522:78:25;;6570:2:81;522:78:25;;;6552:21:81;6609:2;6589:18;;;6582:30;-1:-1:-1;;;6628:18:81;;;6621:41;6679:18;;522:78:25;6368:335:81;522:78:25;2150:5:::1;:23:::0;;-1:-1:-1;;;;;;2150:23:25::1;-1:-1:-1::0;;;;;2150:23:25;;;::::1;::::0;;;::::1;::::0;;2080:101::o;2508:144:24:-;2589:5;;;;;;;;;-1:-1:-1;;;;;2589:5:24;-1:-1:-1;;;;;2583:18:24;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2569:34:24;:10;-1:-1:-1;;;;;2569:34:24;;2561:56;;;;-1:-1:-1;;;2561:56:24;;6910:2:81;2561:56:24;;;6892:21:81;6949:1;6929:18;;;6922:29;-1:-1:-1;;;6967:18:81;;;6960:39;7016:18;;2561:56:24;6708:332:81;2561:56:24;2628:6;:16;;-1:-1:-1;;;;;;2628:16:24;-1:-1:-1;;;;;2628:16:24;;;;;;;;;;2508:144::o;3140:150::-;3208:4;3230:10;;:35;;-1:-1:-1;;;3230:35:24;;3259:4;3230:35;;;980:51:81;3269:14:24;;-1:-1:-1;;;;;3230:10:24;;:20;;953:18:81;;3230:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;3223:60;;3140:150;:::o;2410:221:25:-;685:5;;2480:4;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;2580:10:::1;::::0;;2608:5;2580:43:::1;::::0;-1:-1:-1;;;2580:43:25;;-1:-1:-1;;;;;2608:5:25;;::::1;2580:43;::::0;::::1;5436:51:81::0;5503:18;;;5496:34;;;2580:10:25;::::1;::::0;:19:::1;::::0;5409:18:81;;2580:43:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5497:191:24:-:0;5556:4;5600:28;1098:2;5600:12;:28;:::i;:::-;5581:15;:47;;:62;;;;-1:-1:-1;5632:6:24;;:11;5581:62;5580:99;;;-1:-1:-1;5664:15:24;;;;5580:99;5571:109;;5497:191;:::o;4797:161::-;440:8:25;;-1:-1:-1;;;;;440:8:25;426:10;:22;418:44;;;;-1:-1:-1;;;418:44:25;;;;;;;:::i;:::-;4906:45:24::1;4924:10;4936:14;4906:17;:45::i;3271:149:25:-:0;3326:10;;:57;;-1:-1:-1;;;3326:57:25;;3350:10;3326:57;;;7415:34:81;3369:4:25;7465:18:81;;;7458:43;7517:18;;;7510:34;;;-1:-1:-1;;;;;3326:10:25;;;;:23;;7350:18:81;;3326:57:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3406:6;3394:8;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3271:149:25:o;5750:226::-;685:5;;-1:-1:-1;;;;;685:5:25;663:10;:28;655:61;;;;-1:-1:-1;;;655:61:25;;;;;;;:::i;:::-;5832:34:::1;5860:4;5832:19;:34::i;:::-;5813:16;:53:::0;5881:5:::1;::::0;:24:::1;::::0;;-1:-1:-1;;;5881:24:25;;;;-1:-1:-1;;;;;5881:5:25;;::::1;::::0;:22:::1;::::0;:24:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:5;:24:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5877:90;;;5926:5;::::0;5950:16:::1;::::0;5926:41:::1;::::0;-1:-1:-1;;;5926:41:25;;-1:-1:-1;;;;;5926:5:25;;::::1;::::0;:23:::1;::::0;:41:::1;::::0;::::1;;160:25:81::0;;;148:2;133:18;;14:177;5926:41:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5907:16;:60:::0;5750:226::o;647:164:30:-;712:7;738:21;749:1;752;598:4;738:10;:21::i;:::-;731:28;647:164;-1:-1:-1;;;647:164:30:o;5064:257:25:-;780:6;;-1:-1:-1;;;780:6:25;;;;779:7;771:16;;;;;;5147:5:::1;;;;;;;;;-1:-1:-1::0;;;;;5147:5:25::1;-1:-1:-1::0;;;;;5147:22:25::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5143:70;;;5182:5;::::0;:31:::1;::::0;-1:-1:-1;;;5182:31:25;;::::1;::::0;::::1;160:25:81::0;;;-1:-1:-1;;;;;5182:5:25;;::::1;::::0;:23:::1;::::0;133:18:81;;5182:31:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5173:40;;5143:70;5224:10;::::0;:31:::1;::::0;-1:-1:-1;;;5224:31:25;;-1:-1:-1;;;;;5454:32:81;;;5224:31:25::1;::::0;::::1;5436:51:81::0;5503:18;;;5496:34;;;5224:10:25;;::::1;::::0;:19:::1;::::0;5409:18:81;;5224:31:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5270:44:25::1;::::0;160:25:81;;;-1:-1:-1;;;;;5270:44:25;::::1;::::0;5296:4:::1;::::0;5270:44:::1;::::0;148:2:81;133:18;5270:44:25::1;;;;;;;;5064:257:::0;;:::o;3956:732:24:-;4168:6;;:11;4160:42;;;;-1:-1:-1;;;4160:42:24;;7757:2:81;4160:42:24;;;7739:21:81;7796:2;7776:18;;;7769:30;-1:-1:-1;;;7815:18:81;;;7808:48;7873:18;;4160:42:24;7555:342:81;4160:42:24;4333:1;4324:6;:10;3956:732::o;4291:391::-;3993:695;3956:732::o;10843:157:46:-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:46;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:46;-1:-1:-1;;;10932:60:46;;;10916:15;:77::i;:::-;10843:157;;;:::o;5327:316:25:-;780:6;;-1:-1:-1;;;780:6:25;;;;779:7;771:16;;;;;;5523:10:::1;::::0;:52:::1;::::0;-1:-1:-1;;;5523:52:25;;-1:-1:-1;;;;;7433:15:81;;;5523:52:25::1;::::0;::::1;7415:34:81::0;5561:4:25::1;7465:18:81::0;;;7458:43;7517:18;;;7510:34;;;5523:10:25;;::::1;::::0;:23:::1;::::0;7350:18:81;;5523:52:25::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5590:46:25::1;::::0;160:25:81;;;5622:4:25::1;::::0;-1:-1:-1;;;;;5590:46:25;::::1;::::0;::::1;::::0;148:2:81;133:18;5590:46:25::1;14:177:81::0;1507:535:30;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:30:o;181:376:46:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;1042:180:81:-;1101:6;1154:2;1142:9;1133:7;1129:23;1125:32;1122:52;;;1170:1;1167;1160:12;1122:52;-1:-1:-1;1193:23:81;;1042:180;-1:-1:-1;1042:180:81:o;1227:131::-;-1:-1:-1;;;;;1302:31:81;;1292:42;;1282:70;;1348:1;1345;1338:12;1363:247;1422:6;1475:2;1463:9;1454:7;1450:23;1446:32;1443:52;;;1491:1;1488;1481:12;1443:52;1530:9;1517:23;1549:31;1574:5;1549:31;:::i;1615:248::-;1683:6;1691;1744:2;1732:9;1723:7;1719:23;1715:32;1712:52;;;1760:1;1757;1750:12;1712:52;-1:-1:-1;;1783:23:81;;;1853:2;1838:18;;;1825:32;;-1:-1:-1;1615:248:81:o;3083:184::-;3153:6;3206:2;3194:9;3185:7;3181:23;3177:32;3174:52;;;3222:1;3219;3212:12;3174:52;-1:-1:-1;3245:16:81;;3083:184;-1:-1:-1;3083:184:81:o;3272:127::-;3333:10;3328:3;3324:20;3321:1;3314:31;3364:4;3361:1;3354:15;3388:4;3385:1;3378:15;3404:128;3471:9;;;3492:11;;;3489:37;;;3506:18;;:::i;3537:332::-;3739:2;3721:21;;;3778:1;3758:18;;;3751:29;-1:-1:-1;;;3811:2:81;3796:18;;3789:39;3860:2;3845:18;;3537:332::o;4223:344::-;4425:2;4407:21;;;4464:2;4444:18;;;4437:30;-1:-1:-1;;;4498:2:81;4483:18;;4476:50;4558:2;4543:18;;4223:344::o;5541:277::-;5608:6;5661:2;5649:9;5640:7;5636:23;5632:32;5629:52;;;5677:1;5674;5667:12;5629:52;5709:9;5703:16;5762:5;5755:13;5748:21;5741:5;5738:32;5728:60;;5784:1;5781;5774:12;6112:251;6182:6;6235:2;6223:9;6214:7;6210:23;6206:32;6203:52;;;6251:1;6248;6241:12;6203:52;6283:9;6277:16;6302:31;6327:5;6302:31;:::i;7045:125::-;7110:9;;;7131:10;;;7128:36;;;7144:18;;:::i;7902:678::-;8107:2;8096:9;8089:21;8070:4;8139:6;8133:13;8182:6;8177:2;8166:9;8162:18;8155:34;8207:1;8217:145;8231:6;8228:1;8225:13;8217:145;;;8345:4;8329:14;;;8325:25;;8319:32;8313:3;8294:17;;;8290:27;8283:69;8246:12;8217:145;;;8221:3;8412:1;8406:3;8397:6;8386:9;8382:22;8378:32;8371:43;8482:3;8475:2;8471:7;8466:2;8458:6;8454:15;8450:29;8439:9;8435:45;8431:55;8423:63;;;8524:6;8517:4;8506:9;8502:20;8495:36;8567:6;8562:2;8551:9;8547:18;8540:34;7902:678;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "20909": [
        {
          "start": 1514,
          "length": 32
        }
      ],
      "20911": [
        {
          "start": 1163,
          "length": 32
        }
      ],
      "20913": [
        {
          "start": 610,
          "length": 32
        },
        {
          "start": 1387,
          "length": 32
        },
        {
          "start": 1436,
          "length": 32
        }
      ],
      "20915": [
        {
          "start": 645,
          "length": 32
        },
        {
          "start": 1475,
          "length": 32
        }
      ],
      "20917": [
        {
          "start": 683,
          "length": 32
        },
        {
          "start": 1267,
          "length": 32
        }
      ],
      "20919": [
        {
          "start": 723,
          "length": 32
        },
        {
          "start": 1553,
          "length": 32
        },
        {
          "start": 2152,
          "length": 32
        },
        {
          "start": 3597,
          "length": 32
        },
        {
          "start": 4012,
          "length": 32
        }
      ],
      "20921": [
        {
          "start": 761,
          "length": 32
        },
        {
          "start": 1016,
          "length": 32
        },
        {
          "start": 2389,
          "length": 32
        },
        {
          "start": 3895,
          "length": 32
        }
      ],
      "20923": [
        {
          "start": 799,
          "length": 32
        },
        {
          "start": 1314,
          "length": 32
        },
        {
          "start": 2045,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "Utilizer()": "350896fe",
    "balanceOfUnderlying(address)": "3af9e669",
    "cash()": "961be391",
    "claim()": "4e71d92d",
    "deposit()": "d0e30db0",
    "estimatedTotalAssets()": "efbb5cb0",
    "getMaturityBalance()": "1104aafd",
    "instrumentApprovalCondition()": "83e754a0",
    "instrumentStaticSnapshot()": "29bb64c8",
    "isLiquid(uint256)": "537d9409",
    "isLocked()": "a4e2d634",
    "liquidateAllPositions()": "50bb4beb",
    "liquidatePosition(uint256)": "cdddd4e5",
    "longCollateral()": "cb29bb9a",
    "maturityTime()": "4e8bfdaa",
    "onMarketApproval(uint256,uint256)": "416288dd",
    "oracle()": "7dc0d1d0",
    "prepareWithdraw()": "49dcf4ed",
    "pricePerContract()": "c576ce01",
    "profit()": "66d16cc3",
    "pullRawFunds(uint256)": "d832f791",
    "queryPrice()": "b0667cf8",
    "readyForWithdrawal()": "bdf0f253",
    "redeemUnderlying(uint256)": "852a12e3",
    "returnCollateral()": "44ed456f",
    "setOracle(address)": "7adbf973",
    "setUtilizer(address)": "57b25996",
    "setVault(address)": "6817031b",
    "shortCollateral()": "870dcaeb",
    "store_internal_balance()": "f3aa68d3",
    "strikePrice()": "c52987cf",
    "testqueriedPrice()": "e0186b8d",
    "timeThreshold()": "87479487",
    "tradeTime()": "8eac2066",
    "underlying()": "6f307dc3",
    "underlyingAsset()": "7158da7c",
    "utilizer()": "c9ac4332",
    "validators(uint256)": "35aa2e44",
    "vault()": "fbfa77cf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerContract\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shortCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_cash\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityTransfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimatedTotalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaturityBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instrumentApprovalCondition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instrumentStaticSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerContract\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shortCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_longCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tradeTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isLiquid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAllPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountFreed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountNeeded\",\"type\":\"uint256\"}],\"name\":\"liquidatePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidatedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"}],\"name\":\"onMarketApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prepareWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debtPayment\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullRawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readyForWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Utilizer\",\"type\":\"address\"}],\"name\":\"setUtilizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shortCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"store_internal_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testqueriedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOfUnderlying(address)\":{\"details\":\"May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers\",\"params\":{\"user\":\"The user to get the underlying balance of.\"},\"returns\":{\"_0\":\"The user's Instrument balance in underlying tokens.\"}},\"constructor\":{\"params\":{\"_pricePerContract\":\"is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values \",\"_shortCollateral\":\"depends on how much underlyingAsset is in the vault. \"}},\"prepareWithdraw()\":{\"details\":\"prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs\"},\"redeemUnderlying(uint256)\":{\"params\":{\"amount\":\"The amount of underlying tokens to withdraw.\"},\"returns\":{\"_0\":\"An error code, or 0 if the withdrawal was successful.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"Utilizer()\":{\"notice\":\"address of user who submits the liquidity proposal \"},\"balanceOfUnderlying(address)\":{\"notice\":\"Returns a user's Instrument balance in underlying tokens.\"},\"claim()\":{\"notice\":\"either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings \"},\"deposit()\":{\"notice\":\"called during assessment, approval condition must be met for the market to be approved\"},\"instrumentApprovalCondition()\":{\"notice\":\"returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  \"},\"onMarketApproval(uint256,uint256)\":{\"notice\":\"hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic\"},\"prepareWithdraw()\":{\"notice\":\"checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, \"},\"pullRawFunds(uint256)\":{\"notice\":\"raw funds should not be harvested by the vault\"},\"queryPrice()\":{\"notice\":\"queries oracle for the latest price of the underlying \"},\"readyForWithdrawal()\":{\"notice\":\"called at maturity\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Withdraws a specific amount of underlying tokens from the Instrument.\"},\"store_internal_balance()\":{\"notice\":\"called before resolve, to avoid calculating redemption price based on manipulations \"}},\"notice\":\"This contract acts as an OTC option platform Utilizer will \\\"propose\\\" a strike price to buy At maturity, premiums from utilizer will be collected by the vault when expires below strike price \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/dov.sol\":\"CoveredCallOTC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/math/=lib/prb-math/src/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/bonds/GBC.sol\":{\"keccak256\":\"0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84\",\"dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T\"]},\"contracts/bonds/boundedDerivatives.sol\":{\"keccak256\":\"0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0\",\"urls\":[\"bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c\",\"dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H\"]},\"contracts/bonds/libraries.sol\":{\"keccak256\":\"0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091\",\"urls\":[\"bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e\",\"dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV\"]},\"contracts/bonds/synthetic.sol\":{\"keccak256\":\"0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d\",\"urls\":[\"bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0\",\"dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA\"]},\"contracts/chainlink/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c\",\"dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM\"]},\"contracts/chainlink/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca\",\"dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc\"]},\"contracts/instruments/IRateCalculator.sol\":{\"keccak256\":\"0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a\",\"dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1\"]},\"contracts/instruments/VaultAccount.sol\":{\"keccak256\":\"0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1\",\"dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc\"]},\"contracts/instruments/poolConstants.sol\":{\"keccak256\":\"0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4\",\"urls\":[\"bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a\",\"dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx\"]},\"contracts/instruments/poolInstrument.sol\":{\"keccak256\":\"0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900\",\"urls\":[\"bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2\",\"dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q\"]},\"contracts/protocol/controller.sol\":{\"keccak256\":\"0xe58c38fb1a7e1c0ab54e8f004acc2bdf9b2cf648b0899b07ba6479989028535b\",\"urls\":[\"bzz-raw://1a9f44ce8175fcae6c4ee9f5336cef3c217285bc4024586abe38043b0f82d719\",\"dweb:/ipfs/QmVsti9n4qNndumVdmtjw4TPwX6fJGUEEsozbfmxVDuLex\"]},\"contracts/protocol/factories.sol\":{\"keccak256\":\"0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78\",\"urls\":[\"bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382\",\"dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa\"]},\"contracts/protocol/marketmanager.sol\":{\"keccak256\":\"0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2\",\"urls\":[\"bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1\",\"dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu\"]},\"contracts/protocol/reputationmanager.sol\":{\"keccak256\":\"0x8ae3f8c947d35fc3664a4c87871e3a154253dfd59de4f226ecd77cb73a8f7a06\",\"urls\":[\"bzz-raw://2bed62e72142649ec265fbd9ee46d75adf8ff42505b8d2d4a275b54b54b74de0\",\"dweb:/ipfs/Qmb1Dw3NVcsFujEEpPt5SqMpd8VnxrY5LsTDxHh7N9iTry\"]},\"contracts/protocol/reputationtoken.sol\":{\"keccak256\":\"0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863\",\"urls\":[\"bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e\",\"dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et\"]},\"contracts/protocol/validatorManager.sol\":{\"keccak256\":\"0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c\",\"urls\":[\"bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d\",\"dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h\"]},\"contracts/utils/helpers.sol\":{\"keccak256\":\"0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779\",\"urls\":[\"bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933\",\"dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D\"]},\"contracts/vaults/auth/Auth.sol\":{\"keccak256\":\"0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e\",\"dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ\"]},\"contracts/vaults/dov.sol\":{\"keccak256\":\"0xa99a5e4a494203ba467a432ec9bc7e69b8fd4e3535d90c87104778c6ce202682\",\"urls\":[\"bzz-raw://4454a8c8e378b6b1c89b1b4d2e1d8d79d989c1f3efd0afdc0b10dd8a687c258c\",\"dweb:/ipfs/Qmcfbi9Ewqnvv5YyLnsmSCun4vJwC3YFVjF6L6on2WjkJY\"]},\"contracts/vaults/instrument.sol\":{\"keccak256\":\"0x1aae284b3e797edb00f17c1eac9b887eb24d9a4d9860d0bddf2b406f7e874eb3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2abeba9d661352fd6276048fe2e6424aceccd440a1d9b03d95f8d31b404e265f\",\"dweb:/ipfs/QmR2a5aiLWWC6DLYdHT5FHfw9WxUrPAF9eacgUxD7PkyFQ\"]},\"contracts/vaults/mixins/ERC4626.sol\":{\"keccak256\":\"0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb\",\"dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY\"]},\"contracts/vaults/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"contracts/vaults/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd\",\"dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP\"]},\"contracts/vaults/utils/SafeCastLib.sol\":{\"keccak256\":\"0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e\",\"dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd\"]},\"contracts/vaults/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"contracts/vaults/vault.sol\":{\"keccak256\":\"0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9\",\"urls\":[\"bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247\",\"dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4\",\"dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800\",\"dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427\",\"dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_utilizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerContract",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shortCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_longCollateral",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_cash",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tradeTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityTransfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cash",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "estimatedTotalAssets",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaturityBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "instrumentApprovalCondition",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "instrumentStaticSnapshot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_strikePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_pricePerContract",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_shortCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_longCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_tradeTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLiquid",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidateAllPositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amountFreed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountNeeded",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "liquidatePosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_liquidatedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "longCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maturityTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yield",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onMarketApproval"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_profit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_loss",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_debtPayment",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pricePerContract",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "profit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pullRawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "queryPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "readyForWithdrawal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemUnderlying",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "returnCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOracle"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_Utilizer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUtilizer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVault"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shortCollateral",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "store_internal_balance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strikePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testqueriedPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timeThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradeTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingAsset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilizer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validators",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract Vault",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOfUnderlying(address)": {
            "details": "May mutate the state of the Instrument by accruing interest. TODO need to incorporate the capital supplied by pool bond issuers",
            "params": {
              "user": "The user to get the underlying balance of."
            },
            "returns": {
              "_0": "The user's Instrument balance in underlying tokens."
            }
          },
          "constructor": {
            "params": {
              "_pricePerContract": "is the price that the utilizer is willing to buy  the call option. Usually implied vol here is lower than external implied vol values ",
              "_shortCollateral": "depends on how much underlyingAsset is in the vault. "
            }
          },
          "prepareWithdraw()": {
            "details": "prepareWithdraw->vault.beforeResolve->vault.resolveInstrument in separate txs"
          },
          "redeemUnderlying(uint256)": {
            "params": {
              "amount": "The amount of underlying tokens to withdraw."
            },
            "returns": {
              "_0": "An error code, or 0 if the withdrawal was successful."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "Utilizer()": {
            "notice": "address of user who submits the liquidity proposal "
          },
          "balanceOfUnderlying(address)": {
            "notice": "Returns a user's Instrument balance in underlying tokens."
          },
          "claim()": {
            "notice": "either option buyers(utilizers) or sellers(protocol) can claim their proportion of the winnings "
          },
          "deposit()": {
            "notice": "called during assessment, approval condition must be met for the market to be approved"
          },
          "instrumentApprovalCondition()": {
            "notice": "returns true if the instrument can be approved and funds can be directed from vault. Utilizer must have escrowed to this contract before  "
          },
          "onMarketApproval(uint256,uint256)": {
            "notice": "hooks for approval logic that are specific to each instrument type, called by controller for approval/default logic"
          },
          "prepareWithdraw()": {
            "notice": "checks whether the vault can withdraw and record profit from this instrument  for this instrument to resolve  For creditlines, all debts should be repaid for strategies, all assets should be divested + converted to Underlying this function is important in preventing manipulations, "
          },
          "pullRawFunds(uint256)": {
            "notice": "raw funds should not be harvested by the vault"
          },
          "queryPrice()": {
            "notice": "queries oracle for the latest price of the underlying "
          },
          "readyForWithdrawal()": {
            "notice": "called at maturity"
          },
          "redeemUnderlying(uint256)": {
            "notice": "Withdraws a specific amount of underlying tokens from the Instrument."
          },
          "store_internal_balance()": {
            "notice": "called before resolve, to avoid calculating redemption price based on manipulations "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/math/=lib/prb-math/src/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vaults/dov.sol": "CoveredCallOTC"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bonds/GBC.sol": {
        "keccak256": "0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488",
        "urls": [
          "bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84",
          "dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T"
        ],
        "license": "UNLICENSED"
      },
      "contracts/bonds/boundedDerivatives.sol": {
        "keccak256": "0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0",
        "urls": [
          "bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c",
          "dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H"
        ],
        "license": null
      },
      "contracts/bonds/libraries.sol": {
        "keccak256": "0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091",
        "urls": [
          "bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e",
          "dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV"
        ],
        "license": null
      },
      "contracts/bonds/synthetic.sol": {
        "keccak256": "0xc64530630244e03a81f10174ba84a54ecdb62a1a99d61d24ad41386fda2dfc6d",
        "urls": [
          "bzz-raw://bea05c84ce6ee85683912c04fdbd801bda0bb661156eb7d28f0937f08f1f37d0",
          "dweb:/ipfs/Qmf1QgW98fEmMp894G8cHrkQmMtZ1px1iKVrtMBqmmT8RA"
        ],
        "license": null
      },
      "contracts/chainlink/VRFConsumerBaseV2.sol": {
        "keccak256": "0xd4697556c95e0f2e5055eea0b07b4d476887052d95dbf838b3cf7c32436c71d1",
        "urls": [
          "bzz-raw://c2b106af99cd3d5303c4e8c122eb4dc0c49ccb195e87a1e1d0f60cc47eb5e70c",
          "dweb:/ipfs/QmZ1FYZsCVHJZEmjh5AgEpmKYeRFNwtyguLQJku4iNEsNM"
        ],
        "license": "MIT"
      },
      "contracts/chainlink/VRFCoordinatorV2Interface.sol": {
        "keccak256": "0xadc1f1babaa7202145a22d82c85176cbe7f1fae993f2c11dabdf6058aebea6b2",
        "urls": [
          "bzz-raw://433ebcbc64d1a3a45c79a6096a18416afb251c6d22268e8c4fc461a8af3b49ca",
          "dweb:/ipfs/QmNQg4z249HwcHB4Aapox7mCqL2WyKvP3xBSea8YTf5tCc"
        ],
        "license": "MIT"
      },
      "contracts/instruments/IRateCalculator.sol": {
        "keccak256": "0xf12adc4ffcf31a867fabcc2cfcebf8edf7bc35def82f9dbfdcb9eccf3e0e14a6",
        "urls": [
          "bzz-raw://d72065c6fa2868b53d0356a5b3ec6b46dd7f001221fbd38867581a7302bc079a",
          "dweb:/ipfs/QmWEXvf8R6VieBUaVUmiAThDsaHk2KWuo9R1UMw9Smdjk1"
        ],
        "license": "ISC"
      },
      "contracts/instruments/VaultAccount.sol": {
        "keccak256": "0xb751d82f4ebf9b19781e9f69d748eef5ffedd97445492ae7904abc5b2341fdff",
        "urls": [
          "bzz-raw://ccdee141942964d3677a74b232a062e80fb7a40dc8734c685a20f87b162c3ae1",
          "dweb:/ipfs/QmeBLdeftK4Pdiuntuh47t8skRnUfeHreQ1cFERRDnmqCc"
        ],
        "license": "ISC"
      },
      "contracts/instruments/poolConstants.sol": {
        "keccak256": "0xa6d79d0014ff7e7b0b28ec3e9ded940ba9749a72a5f5509d24738f7d531049e4",
        "urls": [
          "bzz-raw://a32b8afb5f3bbcbf5f44cf788c8f78dded53d1df5509f2f49286b1bc3c6bf97a",
          "dweb:/ipfs/QmNkrxKYpaq7AE5nLWrxvTAYxinGTWgtdqSGnkYW1nd8Lx"
        ],
        "license": null
      },
      "contracts/instruments/poolInstrument.sol": {
        "keccak256": "0xadbb3a67659c018670e0946787f30f19fbb2ef6c009a37f47e654b35304b0900",
        "urls": [
          "bzz-raw://fb4b39f9417713dcead8b6d4f950c56de76b3fa2a712175e4817a0069adac6b2",
          "dweb:/ipfs/QmTQzTM8PM8menMjkPcS8gKCTzm2Kp4kSMPiAFapRZzv1Q"
        ],
        "license": null
      },
      "contracts/protocol/controller.sol": {
        "keccak256": "0xe58c38fb1a7e1c0ab54e8f004acc2bdf9b2cf648b0899b07ba6479989028535b",
        "urls": [
          "bzz-raw://1a9f44ce8175fcae6c4ee9f5336cef3c217285bc4024586abe38043b0f82d719",
          "dweb:/ipfs/QmVsti9n4qNndumVdmtjw4TPwX6fJGUEEsozbfmxVDuLex"
        ],
        "license": null
      },
      "contracts/protocol/factories.sol": {
        "keccak256": "0x94fe7fa596d9a037db8913acc5e793882360f736e975d0786269373167ba2e78",
        "urls": [
          "bzz-raw://a1396abaf91f41c2ef75972f8f14d56ccfa43f8875987e3dd6ddc6f741a07382",
          "dweb:/ipfs/Qmb2SvWQnby4YdXjSRaaGfHEjWobjD2SCtYZYMQc475afa"
        ],
        "license": null
      },
      "contracts/protocol/marketmanager.sol": {
        "keccak256": "0x709617d1d3f9c5dc98c3a572fae3eee5a3f05c41c8dcd8b34bd78416073d50b2",
        "urls": [
          "bzz-raw://228b8c46e6fdd93503e69ae5f2cdcd1e168393b540d3a77ad7426d5bc16cf6d1",
          "dweb:/ipfs/QmZo9J1fRC4d9jvHaCSM8K9aDDcZA1UvxUFUADsCWM1Yxu"
        ],
        "license": null
      },
      "contracts/protocol/reputationmanager.sol": {
        "keccak256": "0x8ae3f8c947d35fc3664a4c87871e3a154253dfd59de4f226ecd77cb73a8f7a06",
        "urls": [
          "bzz-raw://2bed62e72142649ec265fbd9ee46d75adf8ff42505b8d2d4a275b54b54b74de0",
          "dweb:/ipfs/Qmb1Dw3NVcsFujEEpPt5SqMpd8VnxrY5LsTDxHh7N9iTry"
        ],
        "license": null
      },
      "contracts/protocol/reputationtoken.sol": {
        "keccak256": "0x870f872509152e0fa2682e59b091e660d16b9b0453bdaba8c624ce41a94cc863",
        "urls": [
          "bzz-raw://c8d5eabfa3fa9cebedd78ccc4803658bc73f86918690641017a0db6402b9ed3e",
          "dweb:/ipfs/QmcnC3KnrChEe5ASmmF99SQ7YNsZncdwDCmG8KsJsCR8et"
        ],
        "license": null
      },
      "contracts/protocol/validatorManager.sol": {
        "keccak256": "0xdec9456e4c05012bafc49b71b86ec8666b411f29ad71a4bdfedf9d009314986c",
        "urls": [
          "bzz-raw://87cfe33c5cfbf24872dc64a7dbd918028bb1ffb75e2f076d685afafcfcac182d",
          "dweb:/ipfs/QmdYaJbNpLhfAMajtBiE5X9VC46kvXKrbcQANh4icUwr4h"
        ],
        "license": null
      },
      "contracts/utils/helpers.sol": {
        "keccak256": "0xd30e0b9fdc4387086c91449032c63c8190e50bd580306e1e2a0b0dccbf735779",
        "urls": [
          "bzz-raw://b66d91b76ff237ca77c2572d7712d6020da6111a1f7b11a54981b0bb968ba933",
          "dweb:/ipfs/QmWYwx8CH89qoGMsGBBRBgCJNb6HpQTM6BQ15rjEtkiA3D"
        ],
        "license": null
      },
      "contracts/vaults/auth/Auth.sol": {
        "keccak256": "0x46c0e8d518396b50d7dc7f0050d716a5643afad9320b0cd27490fd8e00689dc7",
        "urls": [
          "bzz-raw://215c9fdacc5af455ed5ecbe01502a92bac0ac8567a98b392c519f8188cbdc46e",
          "dweb:/ipfs/QmWSNfaw2GP3RJFcLmH8mLHTmVRC4YtWc4TZW1FCFoJHfJ"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/dov.sol": {
        "keccak256": "0xa99a5e4a494203ba467a432ec9bc7e69b8fd4e3535d90c87104778c6ce202682",
        "urls": [
          "bzz-raw://4454a8c8e378b6b1c89b1b4d2e1d8d79d989c1f3efd0afdc0b10dd8a687c258c",
          "dweb:/ipfs/Qmcfbi9Ewqnvv5YyLnsmSCun4vJwC3YFVjF6L6on2WjkJY"
        ],
        "license": null
      },
      "contracts/vaults/instrument.sol": {
        "keccak256": "0x1aae284b3e797edb00f17c1eac9b887eb24d9a4d9860d0bddf2b406f7e874eb3",
        "urls": [
          "bzz-raw://2abeba9d661352fd6276048fe2e6424aceccd440a1d9b03d95f8d31b404e265f",
          "dweb:/ipfs/QmR2a5aiLWWC6DLYdHT5FHfw9WxUrPAF9eacgUxD7PkyFQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/mixins/ERC4626.sol": {
        "keccak256": "0x0e7723c27d1122ad83991c106a84abc979620b444d394cac53ddaa61ad2610e2",
        "urls": [
          "bzz-raw://6297db0117e6a53a1689dbe716e0f47c1f1dafba011e3d40b3834d3ea6896afb",
          "dweb:/ipfs/QmQewVAZtTrQE3gURDjqet9pMvUNEyZrqq4zsMbMgSZYGY"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/FixedPointMathLib.sol": {
        "keccak256": "0x9faabac0803e077fb8d8950f5e2fec1984d3e6cd6ad5fc144609b5c9de83d169",
        "urls": [
          "bzz-raw://57f4af9f9f91d8e60a4888a704a8a67957682a31cb5f0c42ebda01a8b3638dcd",
          "dweb:/ipfs/QmXg8STZHnY8PZY25WdLZCiLhs1p8553N79GfZgqyqKRgP"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeCastLib.sol": {
        "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
        "urls": [
          "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
          "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/vaults/vault.sol": {
        "keccak256": "0x17950d379411a30726e50ef7e50ace2af7792d03fa6ea43212c336562c5358a9",
        "urls": [
          "bzz-raw://4f300999a88f6e01edec9bf1514be560efdb3e9ccda4f9d7216c702d5e14f247",
          "dweb:/ipfs/QmfUwkUx5Q9Ngd69oFXHFUkLm9Fgt2qtHNsJFhjfoyRBSj"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x5d9242699672087b2f423dfab23a3b8326448f58da4e38cd9e4ba6a3e7e153a2",
        "urls": [
          "bzz-raw://aa2d66521307fbe5942f90c0fed06bf9269e2a083b5d0d57861da938e83fa8b4",
          "dweb:/ipfs/QmPAJDLtTqWX6XTekr5WZEPgNPYReADj1Z4wbt3YPWmB1b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        "urls": [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xb784a14411858036491124e677aecde6d500e695b7a70c74aa8f1001bda2ccab",
        "urls": [
          "bzz-raw://7610da561fe84b893cb46410acdf9e56c204029a21cb717c11cde33ed4354427",
          "dweb:/ipfs/QmQ7LyNz9V48ox4BgncCpvqq4LcDFwqz9q3CTrsrLmdPrk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vaults/dov.sol",
    "id": 21245,
    "exportedSymbols": {
      "Auth": [
        20875
      ],
      "Controller": [
        12406
      ],
      "CoveredCallOTC": [
        21244
      ],
      "ERC20": [
        24231
      ],
      "ERC4626": [
        23620
      ],
      "FixedPointMathLib": [
        24914
      ],
      "Instrument": [
        21702
      ],
      "MarketManager": [
        15445
      ],
      "Math": [
        56615
      ],
      "PoolInstrument": [
        9109
      ],
      "SafeCastLib": [
        25148
      ],
      "SafeTransferLib": [
        25233
      ],
      "Vault": [
        27421
      ],
      "console": [
        44801
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:6034:24",
    "nodes": [
      {
        "id": 20890,
        "nodeType": "PragmaDirective",
        "src": "0:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 20891,
        "nodeType": "ImportDirective",
        "src": "26:21:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/vault.sol",
        "file": "./vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 27422,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20893,
        "nodeType": "ImportDirective",
        "src": "48:41:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/tokens/ERC20.sol",
        "file": "./tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 24232,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20892,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24231,
              "src": "56:5:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20894,
        "nodeType": "ImportDirective",
        "src": "90:52:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "openzeppelin-contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 56616,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20896,
        "nodeType": "ImportDirective",
        "src": "143:64:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/utils/FixedPointMathLib.sol",
        "file": "./utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 24915,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20895,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24914,
              "src": "151:17:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20897,
        "nodeType": "ImportDirective",
        "src": "208:31:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 44802,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20899,
        "nodeType": "ImportDirective",
        "src": "240:44:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/instrument.sol",
        "file": "./instrument.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 23001,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20898,
              "name": "Instrument",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21702,
              "src": "248:10:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20901,
        "nodeType": "ImportDirective",
        "src": "285:34:24",
        "nodes": [],
        "absolutePath": "contracts/vaults/vault.sol",
        "file": "./vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21245,
        "sourceUnit": 27422,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20900,
              "name": "Vault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27421,
              "src": "293:5:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21244,
        "nodeType": "ContractDefinition",
        "src": "537:5496:24",
        "nodes": [
          {
            "id": 20907,
            "nodeType": "UsingForDirective",
            "src": "580:36:24",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 20905,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "586:17:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24914,
              "src": "586:17:24"
            },
            "typeName": {
              "id": 20906,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "608:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 20909,
            "nodeType": "VariableDeclaration",
            "src": "623:33:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c9ac4332",
            "mutability": "immutable",
            "name": "utilizer",
            "nameLocation": "648:8:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20908,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20911,
            "nodeType": "VariableDeclaration",
            "src": "663:40:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "7158da7c",
            "mutability": "immutable",
            "name": "underlyingAsset",
            "nameLocation": "688:15:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20910,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "663:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20913,
            "nodeType": "VariableDeclaration",
            "src": "710:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c52987cf",
            "mutability": "immutable",
            "name": "strikePrice",
            "nameLocation": "735:11:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20912,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "710:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20915,
            "nodeType": "VariableDeclaration",
            "src": "752:41:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "c576ce01",
            "mutability": "immutable",
            "name": "pricePerContract",
            "nameLocation": "777:16:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20914,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "752:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20917,
            "nodeType": "VariableDeclaration",
            "src": "800:40:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "870dcaeb",
            "mutability": "immutable",
            "name": "shortCollateral",
            "nameLocation": "825:15:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20916,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20919,
            "nodeType": "VariableDeclaration",
            "src": "847:39:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb29bb9a",
            "mutability": "immutable",
            "name": "longCollateral",
            "nameLocation": "872:14:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20918,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20921,
            "nodeType": "VariableDeclaration",
            "src": "892:37:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "4e8bfdaa",
            "mutability": "immutable",
            "name": "maturityTime",
            "nameLocation": "917:12:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20920,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "892:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20923,
            "nodeType": "VariableDeclaration",
            "src": "936:34:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "8eac2066",
            "mutability": "immutable",
            "name": "tradeTime",
            "nameLocation": "961:9:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "936:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20925,
            "nodeType": "VariableDeclaration",
            "src": "978:19:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "961be391",
            "mutability": "mutable",
            "name": "cash",
            "nameLocation": "993:4:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20924,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20927,
            "nodeType": "VariableDeclaration",
            "src": "1003:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "1018:6:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20926,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1003:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20929,
            "nodeType": "VariableDeclaration",
            "src": "1030:21:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "66d16cc3",
            "mutability": "mutable",
            "name": "profit",
            "nameLocation": "1045:6:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1030:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20932,
            "nodeType": "VariableDeclaration",
            "src": "1058:42:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "87479487",
            "mutability": "constant",
            "name": "timeThreshold",
            "nameLocation": "1082:13:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20930,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1058:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 20931,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1098:2:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "id": 20934,
            "nodeType": "VariableDeclaration",
            "src": "1107:20:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utilizerClaimed",
            "nameLocation": "1112:15:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20933,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1107:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21016,
            "nodeType": "FunctionDefinition",
            "src": "1397:1105:24",
            "nodes": [],
            "body": {
              "id": 21015,
              "nodeType": "Block",
              "src": "1941:561:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 20966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20961,
                          "name": "_longCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20947,
                          "src": "2013:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 20964,
                              "name": "_pricePerContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20943,
                              "src": "2060:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 20962,
                              "name": "_shortCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20945,
                              "src": "2032:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 20963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2049:10:24",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24817,
                            "src": "2032:27:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 20965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2032:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2013:65:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742073657474696e67",
                        "id": 20967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2080:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        },
                        "value": "incorrect setting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac770e7d80241283b8cdf1d18a75b005abaaa6c52fd5ad76a9f2b5af517e9b43",
                          "typeString": "literal_string \"incorrect setting\""
                        }
                      ],
                      "id": 20960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2005:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:95:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20969,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:95:24"
                },
                {
                  "expression": {
                    "id": 20972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20970,
                      "name": "utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20909,
                      "src": "2111:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20971,
                      "name": "_utilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20939,
                      "src": "2122:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2111:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20973,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:20:24"
                },
                {
                  "expression": {
                    "id": 20979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20974,
                      "name": "underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20911,
                      "src": "2142:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 20977,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21345,
                          "src": "2168:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24231",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$24231",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 20976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2160:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 20975,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2160:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2160:19:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2142:37:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20980,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:37:24"
                },
                {
                  "expression": {
                    "id": 20983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20981,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20913,
                      "src": "2211:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20982,
                      "name": "_strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20941,
                      "src": "2225:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20984,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:26:24"
                },
                {
                  "expression": {
                    "id": 20987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20985,
                      "name": "pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20915,
                      "src": "2248:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20986,
                      "name": "_pricePerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20943,
                      "src": "2267:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2248:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20988,
                  "nodeType": "ExpressionStatement",
                  "src": "2248:36:24"
                },
                {
                  "expression": {
                    "id": 20991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20989,
                      "name": "shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20917,
                      "src": "2295:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20990,
                      "name": "_shortCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20945,
                      "src": "2313:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2295:34:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20992,
                  "nodeType": "ExpressionStatement",
                  "src": "2295:34:24"
                },
                {
                  "expression": {
                    "id": 20995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20993,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20919,
                      "src": "2340:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20994,
                      "name": "_longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20947,
                      "src": "2357:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2340:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20996,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:32:24"
                },
                {
                  "expression": {
                    "id": 21002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20997,
                      "name": "tradeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20923,
                      "src": "2382:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 20998,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2394:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 20999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2400:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2394:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 21000,
                        "name": "_tradeTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20953,
                        "src": "2411:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2394:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2382:39:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21003,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:39:24"
                },
                {
                  "expression": {
                    "id": 21009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21004,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20921,
                      "src": "2432:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 21008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 21005,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2447:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 21006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2453:9:24",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2447:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 21007,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20951,
                        "src": "2465:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2447:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2432:41:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21010,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:41:24"
                },
                {
                  "expression": {
                    "id": 21013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21011,
                      "name": "cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20925,
                      "src": "2483:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21012,
                      "name": "_cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20949,
                      "src": "2490:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2483:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21014,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:12:24"
                }
              ]
            },
            "documentation": {
              "id": 20935,
              "nodeType": "StructuredDocumentation",
              "src": "1135:257:24",
              "text": "@param _shortCollateral depends on how much underlyingAsset is in the vault. \n @param _pricePerContract is the price that the utilizer is willing to buy \n the call option. Usually implied vol here is lower than external implied vol values "
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 20956,
                    "name": "_vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20937,
                    "src": "1923:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 20957,
                    "name": "_utilizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20939,
                    "src": "1931:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 20958,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 20955,
                  "name": "Instrument",
                  "nameLocations": [
                    "1912:10:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21702,
                  "src": "1912:10:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "1912:29:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 20954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20937,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1417:6:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1409:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20939,
                  "mutability": "mutable",
                  "name": "_utilizer",
                  "nameLocation": "1441:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1433:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20941,
                  "mutability": "mutable",
                  "name": "_strikePrice",
                  "nameLocation": "1468:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1460:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20943,
                  "mutability": "mutable",
                  "name": "_pricePerContract",
                  "nameLocation": "1499:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1491:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20945,
                  "mutability": "mutable",
                  "name": "_shortCollateral",
                  "nameLocation": "1599:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1591:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20947,
                  "mutability": "mutable",
                  "name": "_longCollateral",
                  "nameLocation": "1707:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1699:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20949,
                  "mutability": "mutable",
                  "name": "_cash",
                  "nameLocation": "1740:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1732:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20951,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1833:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1825:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20953,
                  "mutability": "mutable",
                  "name": "_tradeTime",
                  "nameLocation": "1862:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21016,
                  "src": "1854:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:503:24"
            },
            "returnParameters": {
              "id": 20959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21038,
            "nodeType": "FunctionDefinition",
            "src": "2508:144:24",
            "nodes": [],
            "body": {
              "id": 21037,
              "nodeType": "Block",
              "src": "2551:101:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21022,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2569:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2573:6:24",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2569:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 21025,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21348,
                                  "src": "2589:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vault_$27421",
                                    "typeString": "contract Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Vault_$27421",
                                    "typeString": "contract Vault"
                                  }
                                ],
                                "id": 21024,
                                "name": "Vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27421,
                                "src": "2583:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Vault_$27421_$",
                                  "typeString": "type(contract Vault)"
                                }
                              },
                              "id": 21026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2583:12:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$27421",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 21027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2596:5:24",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25372,
                            "src": "2583:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 21028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2583:20:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2569:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572",
                        "id": 21030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        },
                        "value": "not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        }
                      ],
                      "id": 21021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2561:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:56:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21032,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:56:24"
                },
                {
                  "expression": {
                    "id": 21035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21033,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20927,
                      "src": "2628:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21034,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21018,
                      "src": "2637:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2628:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21036,
                  "nodeType": "ExpressionStatement",
                  "src": "2628:16:24"
                }
              ]
            },
            "functionSelector": "7adbf973",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setOracle",
            "nameLocation": "2517:9:24",
            "parameters": {
              "id": 21019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21018,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "2535:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21038,
                  "src": "2527:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:17:24"
            },
            "returnParameters": {
              "id": 21020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21058,
            "nodeType": "FunctionDefinition",
            "src": "2658:305:24",
            "nodes": [],
            "body": {
              "id": 21057,
              "nodeType": "Block",
              "src": "2706:257:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21044,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2794:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2800:9:24",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2794:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 21046,
                          "name": "tradeTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20923,
                          "src": "2812:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2794:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656465656d2077696e646f7720706173736564",
                        "id": 21048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2823:22:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15a63c36c340e58c2c0e4f78beb2eebe48a6f6d3db82ee659fab37660a4afa64",
                          "typeString": "literal_string \"redeem window passed\""
                        },
                        "value": "redeem window passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15a63c36c340e58c2c0e4f78beb2eebe48a6f6d3db82ee659fab37660a4afa64",
                          "typeString": "literal_string \"redeem window passed\""
                        }
                      ],
                      "id": 21043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2786:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21050,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:60:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21052,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2929:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2933:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2929:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21054,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20919,
                        "src": "2941:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21051,
                      "name": "transfer_liq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21600,
                      "src": "2916:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21056,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:40:24"
                }
              ]
            },
            "functionSelector": "44ed456f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21040,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "2693:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21266,
                  "src": "2693:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "2693:12:24"
              }
            ],
            "name": "returnCollateral",
            "nameLocation": "2667:16:24",
            "parameters": {
              "id": 21039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:2:24"
            },
            "returnParameters": {
              "id": 21042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21076,
            "nodeType": "FunctionDefinition",
            "src": "3140:150:24",
            "nodes": [],
            "body": {
              "id": 21075,
              "nodeType": "Block",
              "src": "3213:77:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21069,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3259:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21244",
                                "typeString": "contract CoveredCallOTC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CoveredCallOTC_$21244",
                                "typeString": "contract CoveredCallOTC"
                              }
                            ],
                            "id": 21068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3251:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21067,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3251:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3251:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21065,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21345,
                          "src": "3230:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$24231",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 21066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3241:9:24",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23874,
                        "src": "3230:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 21071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3230:35:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 21072,
                      "name": "longCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20919,
                      "src": "3269:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3230:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21064,
                  "id": 21074,
                  "nodeType": "Return",
                  "src": "3223:60:24"
                }
              ]
            },
            "baseFunctions": [
              21701
            ],
            "documentation": {
              "id": 21059,
              "nodeType": "StructuredDocumentation",
              "src": "2969:166:24",
              "text": "@notice returns true if the instrument can be approved\n and funds can be directed from vault. Utilizer must have escrowed\n to this contract before  "
            },
            "functionSelector": "83e754a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "instrumentApprovalCondition",
            "nameLocation": "3149:27:24",
            "overrides": {
              "id": 21061,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3186:8:24"
            },
            "parameters": {
              "id": 21060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3176:2:24"
            },
            "returnParameters": {
              "id": 21064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21063,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21076,
                  "src": "3208:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21062,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3207:6:24"
            },
            "scope": 21244,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21079,
            "nodeType": "VariableDeclaration",
            "src": "3296:36:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "e0186b8d",
            "mutability": "mutable",
            "name": "testqueriedPrice",
            "nameLocation": "3311:16:24",
            "scope": 21244,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21077,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3296:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 21078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3328:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 21088,
            "nodeType": "FunctionDefinition",
            "src": "3410:129:24",
            "nodes": [],
            "body": {
              "id": 21087,
              "nodeType": "Block",
              "src": "3466:73:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21085,
                    "name": "strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20913,
                    "src": "3519:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21084,
                  "id": 21086,
                  "nodeType": "Return",
                  "src": "3512:18:24"
                }
              ]
            },
            "documentation": {
              "id": 21080,
              "nodeType": "StructuredDocumentation",
              "src": "3339:66:24",
              "text": "@notice queries oracle for the latest price of the underlying "
            },
            "functionSelector": "b0667cf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "queryPrice",
            "nameLocation": "3419:10:24",
            "parameters": {
              "id": 21081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3429:2:24"
            },
            "returnParameters": {
              "id": 21084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21083,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3460:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21088,
                  "src": "3452:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21082,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3451:15:24"
            },
            "scope": 21244,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21131,
            "nodeType": "FunctionDefinition",
            "src": "3956:732:24",
            "nodes": [],
            "body": {
              "id": 21130,
              "nodeType": "Block",
              "src": "3993:695:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21093,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20929,
                          "src": "4168:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 21094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4178:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4168:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f66697420616c726561647920736574",
                        "id": 21096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4181:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        },
                        "value": "profit already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b7641209a0bd9e8966858f62f4001b35ea914649271426ed66e19b24a225dbd",
                          "typeString": "literal_string \"profit already set\""
                        }
                      ],
                      "id": 21092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4160:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4160:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21098,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:42:24"
                },
                {
                  "assignments": [
                    21100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21100,
                      "mutability": "mutable",
                      "name": "queriedPrice",
                      "nameLocation": "4221:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 21130,
                      "src": "4213:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21099,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4213:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21103,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21101,
                      "name": "queryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21088,
                      "src": "4236:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 21102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4236:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4213:35:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21104,
                      "name": "queriedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21100,
                      "src": "4295:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 21105,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20913,
                      "src": "4311:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4295:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 21128,
                    "nodeType": "Block",
                    "src": "4447:235:24",
                    "statements": [
                      {
                        "assignments": [
                          21112
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 21112,
                            "mutability": "mutable",
                            "name": "profitInCash",
                            "nameLocation": "4469:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 21128,
                            "src": "4461:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 21111,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4461:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21120,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 21118,
                              "name": "shortCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20917,
                              "src": "4524:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21113,
                                    "name": "queriedPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21100,
                                    "src": "4485:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 21114,
                                    "name": "strikePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20913,
                                    "src": "4500:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4485:26:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 21116,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4484:28:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 21117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4513:10:24",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24817,
                            "src": "4484:39:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 21119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4484:56:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4461:79:24"
                      },
                      {
                        "expression": {
                          "id": 21126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 21121,
                            "name": "profit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20929,
                            "src": "4624:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 21124,
                                "name": "queriedPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21100,
                                "src": "4657:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 21122,
                                "name": "profitInCash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21112,
                                "src": "4633:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 21123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4646:10:24",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24849,
                              "src": "4633:23:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 21125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4633:37:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4624:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21127,
                        "nodeType": "ExpressionStatement",
                        "src": "4624:46:24"
                      }
                    ]
                  },
                  "id": 21129,
                  "nodeType": "IfStatement",
                  "src": "4291:391:24",
                  "trueBody": {
                    "expression": {
                      "id": 21109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 21107,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20929,
                        "src": "4324:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 21108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4333:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4324:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 21110,
                    "nodeType": "ExpressionStatement",
                    "src": "4324:10:24"
                  }
                }
              ]
            },
            "documentation": {
              "id": 21089,
              "nodeType": "StructuredDocumentation",
              "src": "3545:406:24",
              "text": "@notice for a given queriedPrice(usually the spot chainlink price at maturity)\n what is the profit returned to the utilizer \n @dev utillizers can call this function at maturity so they can realize profit it is positive \n if they miss the window(timethreshold), they can't realize profit. \n param queriedPrice must be the exact price at which option is exercised, at maturity"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "profitForUtilizer",
            "nameLocation": "3965:17:24",
            "parameters": {
              "id": 21090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3982:2:24"
            },
            "returnParameters": {
              "id": 21091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3993:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21144,
            "nodeType": "FunctionDefinition",
            "src": "4797:161:24",
            "nodes": [],
            "body": {
              "id": 21143,
              "nodeType": "Block",
              "src": "4838:120:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4924:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4928:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4924:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21140,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20919,
                        "src": "4936:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21137,
                      "name": "transfer_liq_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21630,
                      "src": "4906:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 21141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4906:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21142,
                  "nodeType": "ExpressionStatement",
                  "src": "4906:45:24"
                }
              ]
            },
            "documentation": {
              "id": 21132,
              "nodeType": "StructuredDocumentation",
              "src": "4694:98:24",
              "text": "@notice called during assessment, approval condition must be met for the market to be approved"
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21134,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "4825:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21266,
                  "src": "4825:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "4825:12:24"
              }
            ],
            "name": "deposit",
            "nameLocation": "4806:7:24",
            "parameters": {
              "id": 21133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4813:2:24"
            },
            "returnParameters": {
              "id": 21136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4838:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21193,
            "nodeType": "FunctionDefinition",
            "src": "5085:371:24",
            "nodes": [],
            "body": {
              "id": 21192,
              "nodeType": "Block",
              "src": "5123:333:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21151,
                          "name": "maturityTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20921,
                          "src": "5141:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 21152,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5156:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5162:9:24",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5156:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5141:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206d617475726564",
                        "id": 21155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5173:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        },
                        "value": "not matured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f76ed8b841db5851292e192d4c226527554445624b51b69841b152747691be3",
                          "typeString": "literal_string \"not matured\""
                        }
                      ],
                      "id": 21150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5133:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5133:54:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21157,
                  "nodeType": "ExpressionStatement",
                  "src": "5133:54:24"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21158,
                      "name": "profitForUtilizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21131,
                      "src": "5197:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5197:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21160,
                  "nodeType": "ExpressionStatement",
                  "src": "5197:19:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 21161,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20929,
                      "src": "5232:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 21162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5240:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5232:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21165,
                  "nodeType": "IfStatement",
                  "src": "5228:22:24",
                  "trueBody": {
                    "functionReturnParameters": 21149,
                    "id": 21164,
                    "nodeType": "Return",
                    "src": "5243:7:24"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21169,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5324:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 21170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5328:6:24",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5324:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21171,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20929,
                        "src": "5336:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 21166,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21345,
                        "src": "5304:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$24231",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5315:8:24",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23981,
                      "src": "5304:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21173,
                  "nodeType": "ExpressionStatement",
                  "src": "5304:39:24"
                },
                {
                  "expression": {
                    "id": 21176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21174,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20929,
                      "src": "5354:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 21175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5363:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5354:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21177,
                  "nodeType": "ExpressionStatement",
                  "src": "5354:10:24"
                },
                {
                  "expression": {
                    "id": 21180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21178,
                      "name": "utilizerClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20934,
                      "src": "5375:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 21179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5393:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5375:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21181,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:22:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21187,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5435:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21244",
                              "typeString": "contract CoveredCallOTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoveredCallOTC_$21244",
                              "typeString": "contract CoveredCallOTC"
                            }
                          ],
                          "id": 21186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5427:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21185,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5427:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5427:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5442:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 21182,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21348,
                        "src": "5408:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$27421",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 21184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5414:12:24",
                      "memberName": "pingMaturity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26869,
                      "src": "5408:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 21190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:40:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21191,
                  "nodeType": "ExpressionStatement",
                  "src": "5408:40:24"
                }
              ]
            },
            "documentation": {
              "id": 21145,
              "nodeType": "StructuredDocumentation",
              "src": "4964:116:24",
              "text": "@notice either option buyers(utilizers) or sellers(protocol)\n can claim their proportion of the winnings "
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21147,
                  "name": "onlyUtilizer",
                  "nameLocations": [
                    "5111:12:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21266,
                  "src": "5111:12:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "5111:12:24"
              }
            ],
            "name": "claim",
            "nameLocation": "5094:5:24",
            "parameters": {
              "id": 21146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5099:2:24"
            },
            "returnParameters": {
              "id": 21149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5123:0:24"
            },
            "scope": 21244,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21216,
            "nodeType": "FunctionDefinition",
            "src": "5497:191:24",
            "nodes": [],
            "body": {
              "id": 21215,
              "nodeType": "Block",
              "src": "5561:127:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 21212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 21209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 21200,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5581:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 21201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5587:9:24",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5581:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 21204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 21202,
                                    "name": "maturityTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20921,
                                    "src": "5600:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 21203,
                                    "name": "timeThreshold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20932,
                                    "src": "5615:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5600:28:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5581:47:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 21208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 21206,
                                  "name": "profit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20929,
                                  "src": "5632:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 21207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5642:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5632:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5581:62:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 21210,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5580:64:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 21211,
                          "name": "utilizerClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20934,
                          "src": "5664:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5580:99:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 21213,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5578:102:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21199,
                  "id": 21214,
                  "nodeType": "Return",
                  "src": "5571:109:24"
                }
              ]
            },
            "baseFunctions": [
              21501
            ],
            "documentation": {
              "id": 21194,
              "nodeType": "StructuredDocumentation",
              "src": "5462:30:24",
              "text": "@notice called at maturity"
            },
            "functionSelector": "bdf0f253",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readyForWithdrawal",
            "nameLocation": "5506:18:24",
            "overrides": {
              "id": 21196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5539:8:24"
            },
            "parameters": {
              "id": 21195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5524:2:24"
            },
            "returnParameters": {
              "id": 21199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21216,
                  "src": "5556:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5556:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5555:6:24"
            },
            "scope": 21244,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21243,
            "nodeType": "FunctionDefinition",
            "src": "5694:337:24",
            "nodes": [],
            "body": {
              "id": 21242,
              "nodeType": "Block",
              "src": "5910:121:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 21233,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20913,
                        "src": "5928:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21234,
                        "name": "pricePerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20915,
                        "src": "5941:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21235,
                        "name": "shortCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20917,
                        "src": "5959:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21236,
                        "name": "longCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20919,
                        "src": "5976:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21237,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20921,
                        "src": "5992:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21238,
                        "name": "tradeTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20923,
                        "src": "6006:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 21239,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20927,
                        "src": "6017:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 21240,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5927:97:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,address)"
                    }
                  },
                  "functionReturnParameters": 21232,
                  "id": 21241,
                  "nodeType": "Return",
                  "src": "5920:104:24"
                }
              ]
            },
            "functionSelector": "29bb64c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "instrumentStaticSnapshot",
            "nameLocation": "5703:24:24",
            "parameters": {
              "id": 21217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5727:2:24"
            },
            "returnParameters": {
              "id": 21232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21219,
                  "mutability": "mutable",
                  "name": "_strikePrice",
                  "nameLocation": "5759:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5751:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21221,
                  "mutability": "mutable",
                  "name": "_pricePerContract",
                  "nameLocation": "5781:17:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5773:25:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21223,
                  "mutability": "mutable",
                  "name": "_shortCollateral",
                  "nameLocation": "5808:16:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5800:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21225,
                  "mutability": "mutable",
                  "name": "_longCollateral",
                  "nameLocation": "5834:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5826:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5826:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21227,
                  "mutability": "mutable",
                  "name": "_maturityTime",
                  "nameLocation": "5859:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5851:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5851:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21229,
                  "mutability": "mutable",
                  "name": "_tradeTime",
                  "nameLocation": "5882:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5874:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5874:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21231,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "5902:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 21243,
                  "src": "5894:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5894:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5750:160:24"
            },
            "scope": 21244,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20903,
              "name": "Instrument",
              "nameLocations": [
                "564:10:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21702,
              "src": "564:10:24"
            },
            "id": 20904,
            "nodeType": "InheritanceSpecifier",
            "src": "564:10:24"
          }
        ],
        "canonicalName": "CoveredCallOTC",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 20902,
          "nodeType": "StructuredDocumentation",
          "src": "322:215:24",
          "text": "@notice This contract acts as an OTC option platform\n Utilizer will \"propose\" a strike price to buy\n At maturity, premiums from utilizer will be collected by the vault when expires\n below strike price "
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21244,
          21702
        ],
        "name": "CoveredCallOTC",
        "nameLocation": "546:14:24",
        "scope": 21245,
        "usedErrors": []
      }
    ]
  },
  "id": 24
}