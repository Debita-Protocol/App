{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trade",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_trade",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUNDLIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TradeToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "a_initial",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "x",
          "type": "uint128"
        },
        {
          "internalType": "int128",
          "name": "y",
          "type": "int128"
        }
      ],
      "name": "addDelta",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "z",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "areaBetweenCurveAndMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "b",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "b_initial",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "L",
          "type": "uint256"
        }
      ],
      "name": "baseGivenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "P",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "I",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sigma",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "alpha",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "delta",
          "type": "uint256"
        }
      ],
      "name": "calculateInitCurveParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sigma",
          "type": "uint256"
        }
      ],
      "name": "calculateInitCurveParamsPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "managementFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "claimFilledOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "claimPartiallyFilledOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "tickLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "tickUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount0Requested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1Requested",
          "type": "uint128"
        }
      ],
      "name": "collect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discount_cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discountedReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeGrowthGlobalBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeGrowthGlobalTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flushTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "getLiq",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "pDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getNextPriceLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getNumCross",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getOneTimeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B",
          "type": "uint256"
        }
      ],
      "name": "liquidityGivenBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "T",
          "type": "uint256"
        }
      ],
      "name": "liquidityGivenTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClaimClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClaimOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toEscrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "crossId",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toEscrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "crossId",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerPartiallyClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerReduceClose",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerReduceOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "placeLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToEscrow",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "numCross",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        }
      ],
      "name": "pointToPrice",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "positionIsFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "bidCrossId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askCrossId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askLiq",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidLiq",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthInside0LastX128",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthInside1LastX128",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensOwed0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensOwed1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "priceToPoint",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "provide",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "reduceLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToReturn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "remove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetLiq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_tradeToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        }
      ],
      "name": "setEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slot0",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "curPrice",
          "type": "uint160"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "feeProtocol",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "unlocked",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "amortized",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "modifyLiqPoint",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountIn",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "takerClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolamountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolamountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountIn",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "takerOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolamountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolamountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "liquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "int128",
          "name": "liquidityNet",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthOutsideBase",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthOutsideTrade",
          "type": "uint256"
        },
        {
          "internalType": "int56",
          "name": "tickCumulativeOutside",
          "type": "int56"
        },
        {
          "internalType": "uint160",
          "name": "secondsPerLiquidityOutsideX128",
          "type": "uint160"
        },
        {
          "internalType": "uint32",
          "name": "secondsOutside",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "askLiquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidLiquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askNumCross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidNumCross",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountSpecified",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "L",
          "type": "uint256"
        }
      ],
      "name": "tradeGivenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        }
      ],
      "name": "trustedBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "trustedDiscountedMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "upperBound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "xMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "xMaxRoundUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "yInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b5060405162005afa38038062005afa833981016040819052620000359162000120565b6001600160a01b0380851660e052851661010052600060a081905260c0819052610120819052859085908590838362000078670de0b6b3a7640000606462000190565b600280546001600160801b0319166001600160801b0392909216919091179055505033608052600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b80548416928516929092179091551515610140526005805490911693821693909317909255166101605250620001ca915050565b80516001600160a01b03811681146200011b57600080fd5b919050565b600080600080600060a086880312156200013957600080fd5b620001448662000103565b9450620001546020870162000103565b9350620001646040870162000103565b9250620001746060870162000103565b9150620001846080870162000103565b90509295509295909350565b6001600160801b03818116838216028082169190828114620001c257634e487b7160e01b600052601160045260246000fd5b505092915050565b60805160a05160c05160e051610100516101205161014051610160516158766200028460003960008181610bf20152818161231701528181612de60152818161301f0152613476015260008181611d7b01528181611f820152818161285d01526128dc01526000610af7015260008181610abd015281816119120152611c24015260008181610b31015281816119380152611c4a01526000610a96015260008181610b5801526110300152600061083e01526158766000f3fe608060405234801561001057600080fd5b50600436106104115760003560e01c80638ce2699911610220578063b501c28411610130578063df99f8bf116100b8578063e7ca189a11610087578063e7ca189a14610bc7578063f0bb81b314610bda578063f77c479114610bed578063f83d08ba14610c14578063f9734a2414610c1c57600080fd5b8063df99f8bf14610b8e578063e37699c914610ba1578063e38d6b5c146108f8578063e7c3614f14610bb457600080fd5b8063c93ac3ed116100ff578063c93ac3ed14610adf578063d0c93a7c14610af2578063d3b5dc3b146108f8578063d83678ac14610b2c578063ddca3f4314610b5357600080fd5b8063b501c2841461095c578063b9033a391461096f578063c45a015514610a91578063c55dae6314610ab857600080fd5b80639c9d7d3f116101b3578063ac4bc1cb11610182578063ac4bc1cb14610907578063af0d37bc1461091a578063b04a69fd1461092d578063b09ad8a014610940578063b29d9b6e1461094957600080fd5b80639c9d7d3f146108bf578063a1217e7d146108d2578063a74d74d4146108e5578063aaf5eb68146108f857600080fd5b80639314b03f116101ef5780639314b03f14610873578063957343f01461088657806396fd1c42146108995780639b608089146108ac57600080fd5b80638ce269991461081e5780638d01450f146108315780638da5cb5b1461083957806390f817021461086057600080fd5b8063402d44fb11610326578063659a544a116102ae5780636e2f7ad31161027d5780636e2f7ad3146107c35780636ed75596146107cc5780637063b06c146107ef5780637f1d9ae6146107f857806380c0c3e71461080b57600080fd5b8063659a544a1461078157806367f239dd1461078a57806368087cc31461079d578063681504cd146107b057600080fd5b80634df7e3d0116102f55780634df7e3d014610688578063514ea4bf14610691578063556769ba14610757578063558bdb291461076a5780635bfa896a1461077357600080fd5b8063402d44fb1461063a57806342b6c9fb1461064d57806342bc5292146106605780634a3ca7171461067557600080fd5b80631816eb13116103a95780632353b18e116103785780632353b18e1461054b578063244d59cb1461057157806332530d7f1461058457806334327d8b146105975780633850c7bd146105aa57600080fd5b80631816eb13146104de5780631a686502146104e75780631d2637ab146105125780632130ce0d1461051b57600080fd5b806311e715d6116103e557806311e715d6146104945780631376ff3e146104af57806314e2b929146104c2578063159054ea146104d557600080fd5b80624b2045146104165780630821671214610443578063098bcc561461045657806310f2222114610469575b600080fd5b610429610424366004614e97565b610c2f565b604080519283526020830191909152015b60405180910390f35b610429610451366004614f25565b611595565b610429610464366004614f96565b6116cd565b600b5461047c906001600160a01b031681565b6040516001600160a01b03909116815260200161043a565b6001546001600160a01b03165b60405190815260200161043a565b6104a16104bd366004614ffd565b6117e8565b6104a16104d036600461504a565b6119ef565b6104a161271081565b6104a160105481565b6002546104fa906001600160801b031681565b6040516001600160801b03909116815260200161043a565b6104a160075481565b61052e610529366004614ffd565b611ab1565b604080519283526001600160801b0390911660208301520161043a565b61055e61055936600461504a565b611d30565b60405161ffff909116815260200161043a565b61042961057f366004615063565b611d5c565b6104296105923660046150cd565b6120e8565b6104a16105a5366004615116565b61230a565b6001546105f5906001600160a01b0381169061ffff600160a01b820481169160ff600160b01b8204811692600160b81b8304821692600160c01b810490921691600160c81b90041686565b604080516001600160a01b03909716875261ffff958616602088015260ff909416938601939093529015156060850152151560808401521660a082015260c00161043a565b6104fa610648366004615148565b612542565b6104a161065b3660046150cd565b612602565b61067361066e366004615185565b6127d5565b005b6104a16106833660046151a2565b612821565b6104a1600e5481565b6106fc61069f36600461504a565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006909501546001600160801b0380861697600160801b96879004821697828716979096048216959190941693929189565b604080516001600160801b039a8b168152988a1660208a015296891696880196909652938716606087015295909116608085015260a084015260c083019390935260e08201929092526101008101919091526101200161043a565b610429610765366004615063565b61283e565b6104a1600d5481565b6104a1662386f26fc1000081565b6104a160065481565b60055461047c906001600160a01b031681565b61052e6107ab3660046151ce565b612939565b6106736107be366004615204565b612b17565b6104a1600c5481565b6107df6107da3660046150cd565b612bc0565b604051901515815260200161043a565b6104a1600f5481565b610429610806366004615230565b612c79565b6104a1610819366004615286565b612d7e565b61047c61082c3660046152b2565b612dbc565b610673612ddb565b61047c7f000000000000000000000000000000000000000000000000000000000000000081565b60095461047c906001600160a01b031681565b6104a1610881366004615286565b612e4d565b6106736108943660046151ce565b612e63565b6106736108a7366004615204565b613014565b6104fa6108ba3660046150cd565b61311a565b6106736108cd3660046151ce565b61316f565b6104a16108e03660046152cd565b6132a7565b6104a16108f336600461530b565b613413565b6104a1670de0b6b3a764000081565b610673610915366004615330565b61346b565b61042961092836600461536b565b6136a2565b6104a161093b366004615286565b613799565b6104a160115481565b6104a1610957366004615286565b6137cf565b6104a161096a3660046153d5565b6137f6565b610a0d61097d3660046152b2565b60036020819052600091825260409091208054600182015460028301549383015460048401546005909401546001600160801b0380851696600160801b95869004600f0b9694959094600685900b94600160381b81046001600160a01b031694600160d81b820463ffffffff1694600160f81b90920460ff1693828416938190048316928083169291909104168c565b604080516001600160801b039d8e168152600f9c909c0b60208d01528b019990995260608a019790975260069590950b60808901526001600160a01b0390931660a088015263ffffffff90911660c0870152151560e0860152851661010085015284166101208401528316610140830152919091166101608201526101800161043a565b61047c7f000000000000000000000000000000000000000000000000000000000000000081565b61047c7f000000000000000000000000000000000000000000000000000000000000000081565b610673610aed36600461540a565b61382d565b610b197f000000000000000000000000000000000000000000000000000000000000000081565b60405160029190910b815260200161043a565b61047c7f000000000000000000000000000000000000000000000000000000000000000081565b610b7a7f000000000000000000000000000000000000000000000000000000000000000081565b60405162ffffff909116815260200161043a565b600a5461047c906001600160a01b031681565b6104a1610baf3660046151a2565b6138f8565b6104a1610bc2366004615286565b613906565b61052e610bd53660046151ce565b61394e565b6104a1610be83660046152cd565b613a26565b61047c7f000000000000000000000000000000000000000000000000000000000000000081565b610673613b5a565b6104a1610c2a366004615286565b613ba5565b60055460009081906001600160a01b03163314610c675760405162461bcd60e51b8152600401610c5e9061542a565b60405180910390fd5b60005460ff1615610c8a5760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff1916600117905560408051808201909152600f81526e2d2d2d4e65772054726164652d2d2d60881b6020820152610cc690613c6b565b6040805160c0810182526001546001600160a01b03808216835261ffff600160a01b83048116602080860182905260ff600160b01b8604811687890152600160b81b860481161515606080890191909152600160c01b87049091161515608080890191909152600160c81b90960490931660a08701528651610100810188528d81526000918101829052865190941696840196909652908201529192662386f26fc1000092909181018b610d7c57600754610d80565b6006545b8152600060208083018290526002546001600160801b03166040808501829052606094850191909152805193840181528284529083018290528281018290528301519293509091908b1390610dd59085613cb1565b8015610ddf57508b155b15610e2f57600183604001818151610df79190615488565b9052506040830151610e0890611d30565b61ffff16606084018190526001805461ffff60a01b1916600160a01b830217905560208601525b8b610e415782604001518a1115610e4a565b82604001518a10155b610e825760405162461bcd60e51b8152602060048201526009602482015268383634b6b4ba22a92960b91b6044820152606401610c5e565b610e8e61082c8b611d30565b6001600160a01b031699505b825115801590610eae575089836040015114155b1561142f57610f0a60405180610100016040528060008152602001600061ffff1681526020016000151581526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681525090565b604084015181526060840151610f2190868f6137f6565b60608201528c610f415760018460600151610f3c919061549b565b610f51565b6060840151610f519060016154bd565b61ffff1660208201526060840151610f6b90600390613cc5565b6001600160801b031660e082015281610fa857610fa38160e001518560c00151610f9591906154d8565b6001600160801b0316613dd4565b610fcd565b610fcd8160e001518560c00151610fbf91906154d8565b6001600160801b0316613e0b565b83526040840151610fde908e613413565b60408085018290528501518451610ff592906137cf565b60208401908152604085810151606084015187518351631922027560e11b815260048101939093526024830191909152604482015262ffffff7f000000000000000000000000000000000000000000000000000000000000000016606482015285516084820152915160a483015284015160c482015273__$7f722a1af7b4060aab6915c87e2e2208cb$__9063324404ea9060e401608060405180830381865af41580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906154f8565b60c085015260a08401526080830152604080860191909152805180820190915260088152675f5f5f5f5f5f5f5f60c01b602082015261110990613c6b565b61113760405180604001604052806008815260200167435552505249434560c01b8152508560400151613e42565b6111836040518060400160405280601e81526020017f74726164696e673b206c69717569646974792c20616d6f756e746c65667400008152508560c001516001600160801b0316613e42565b835161118e90613e87565b6111da6040518060400160405280601881526020017f6e65787470726963656c696d69742f706f696e746e65787400000000000000008152508260600151836020015161ffff16613ecc565b611201604051806040016040528060018152602001606160f81b8152508460000151613e42565b61123a6040518060400160405280600e81526020016d185b5bdd5b9d1a5b985b991bdd5d60921b81525082608001518360a00151613ecc565b6112686040518060400160405280600381526020016239963160e91b81525084602001518560400151613ecc565b811561128a5760808101518451859061128290839061552e565b9052506112a2565b60808101518451859061129e90839061554e565b9052505b8060a00151846020018181516112b89190615488565b90525060c08401516001600160801b0316156112ff5760c080850151908201516112ea916001600160801b0316613f13565b846080018181516112fb9190615488565b9052505b80606001518460400151036114295760e08101516001600160801b031615611333576060840151611333906003908f613f28565b602081015160065460075460009261134d9260039261401f565b9050866080015115801561137057508660a0015161ffff16826020015161ffff16145b1561139e5760208083015161ffff1660009081526008909152604090205461139b90600f0b82615576565b90505b604080518082018252600a81526964796e616d69634c697160b01b6020808301919091528481015161ffff166000908152600890915291909120546113ec9190600f90810b9084900b613ecc565b8d6113fd576113fa816155ac565b90505b61140b8560c0015182612542565b6001600160801b031660c086015250602081015161ffff1660608501525b50610e9a565b61143c8360400151614072565b600180546001600160a01b0319166001600160a01b03929092169190911790556020850151606084015161ffff9182169116146114995760608301516001805461ffff909216600160a01b0261ffff60a01b199092169190911790555b8260c001516001600160801b03168360e001516001600160801b0316146114df5760c0830151600280546001600160801b0319166001600160801b039092169190911790555b8b156114ee5760808301516006555b8061151f5761271083602001516115059190615488565b83516115108d6155d2565b61151a919061554e565b61154c565b8b61153a578251611530908c61552e565b836020015161154c565b8251611546908c61552e565b83602001515b6040805180820190915260038152623f3f3f60e81b60208201528551929950909750611578918d613ecc565b50506000805460ff19169055509299919850909650505050505050565b60008083156115c65784156115ba576115b0838760006120e8565b90925090506115ea565b6115b0838760016120e8565b84156115d8576115b0838760016120e8565b6115e4838760006120e8565b90925090505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061161c90869086906004016155ee565b6020604051808303816000875af115801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190615607565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061169290869085906004016155ee565b600060405180830381600087803b1580156116ac57600080fd5b505af11580156116c0573d6000803e3d6000fd5b5050505094509492505050565b60055460009081906001600160a01b031633146116fc5760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff161561171f5760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff19166001178155611739600433898961408d565b90508060050154856001600160801b03161161175e57846001600160801b0316611764565b80600501545b92508060060154846001600160801b03161161178957836001600160801b031661178f565b80600601545b915082156117b157828160050160008282546117ab9190615624565b90915550505b81156117d157818160060160008282546117cb9190615624565b90915550505b506000805460ff1916905590969095509350505050565b6005546000906001600160a01b031633146118155760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff16156118385760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff191660019081179091555461ffff851690611861906001600160a01b0316611d30565b61ffff16036118be5760405162461bcd60e51b815260206004820152602360248201527f43616e277420726564756365206f7264657220666f722063757272656e74207460448201526269636b60e81b6064820152608401610c5e565b60006118da33866118d08160016154bd565b600492919061408d565b90506118f26118e8856155ac565b82908560006140f8565b611909856118ff866155ac565b60039190866141cd565b600083611936577f0000000000000000000000000000000000000000000000000000000000000000611958565b7f00000000000000000000000000000000000000000000000000000000000000005b90508361199f5761199a61197061082c8860016154bd565b6001600160a01b031661198288612dbc565b6001600160a01b0316876001600160801b0316613ba5565b6119da565b6119da6119b061082c8860016154bd565b6001600160a01b03166119c288612dbc565b6001600160a01b0316876001600160801b0316612d7e565b6000805460ff19169055979650505050505050565b600c54600d5460405163018b035160e01b8152600481018490526000602482018190526044820193909352606481019190915260016084820152819073__$7f722a1af7b4060aab6915c87e2e2208cb$__9063018b03519060a4016040805180830381865af4158015611a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8a9190615637565b50905082611aa082670de0b6b3a764000061429e565b611aaa9190615624565b9392505050565b60055460009081906001600160a01b03163314611ae05760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff1615611b035760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff19166001179055828015611b3957506001546001600160a01b0316611b2d86612dbc565b6001600160a01b031611155b15611b775760405162461bcd60e51b815260206004820152600e60248201526d61736b2062656c6f77207072696560901b6044820152606401610c5e565b82158015611ba157506001546001600160a01b0316611b9586612dbc565b6001600160a01b031610155b15611be05760405162461bcd60e51b815260206004820152600f60248201526e626964732061626f7665207072696560881b6044820152606401610c5e565b6000611bf287876118d08160016154bd565b9050611c00600387866142b3565b9150611c0e818686856140f8565b611c1b60038787876141cd565b600084611c48577f0000000000000000000000000000000000000000000000000000000000000000611c6a565b7f00000000000000000000000000000000000000000000000000000000000000005b905084611cb157611cac611c8261082c8960016154bd565b6001600160a01b0316611c9489612dbc565b6001600160a01b0316886001600160801b0316613ba5565b611cec565b611cec611cc261082c8960016154bd565b6001600160a01b0316611cd489612dbc565b6001600160a01b0316886001600160801b0316612d7e565b9350611d1960405180604001604052806009815260200168185b5bdd5b9d189a5960ba1b81525085613e42565b50506000805460ff19169055909590945092505050565b6000670de0b6b3a7640000611d4c83662386f26fc10000613f13565b611d569190615671565b92915050565b6000808615611ed557611d7433600188888888610c2f565b90925090507f000000000000000000000000000000000000000000000000000000000000000015611db157611dac338284600161430b565b6120de565b6000611dbb61445d565b604051636d29069f60e11b8152909150339063da520d3e90611de590869089908990600401615685565b600060405180830381600087803b158015611dff57600080fd5b505af1158015611e13573d6000803e3d6000fd5b505050508083611e239190615488565b611e2b61445d565b1015611e625760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610c5e565b600a546001600160a01b03166340c10f19611e7f86880188615185565b846040518363ffffffff1660e01b8152600401611e9d9291906155ee565b600060405180830381600087803b158015611eb757600080fd5b505af1158015611ecb573d6000803e3d6000fd5b50505050506120de565b611ee430600088888888610c2f565b90925090506000611ef361445d565b9050611f1f6040518060400160405280600781526020016618985cd958985b60ca1b8152508284613ecc565b611f2761445d565b821115611f605760405162461bcd60e51b815260206004820152600760248201526621616d6d4c697160c81b6044820152606401610c5e565b8180611f7485670de0b6b3a76400006144cf565b611f7e9190615624565b92507f000000000000000000000000000000000000000000000000000000000000000015611fb857611fb3338585600061430b565b6120db565b6000611fc261445d565b604051636d29069f60e11b8152909150339063da520d3e90611fec9087908b908b90600401615685565b600060405180830381600087803b15801561200657600080fd5b505af115801561201a573d6000803e3d6000fd5b50505050808461202a9190615488565b61203261445d565b10156120695760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610c5e565b600b546001600160a01b03166340c10f19612086888a018a615185565b876040518363ffffffff1660e01b81526004016120a49291906155ee565b600060405180830381600087803b1580156120be57600080fd5b505af11580156120d2573d6000803e3d6000fd5b50505050819450505b50505b9550959350505050565b60055460009081906001600160a01b031633146121175760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff161561213a5760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff1916600190811782556040805160c08101825282546001600160a01b038116825261ffff600160a01b820481166020840152600160b01b820460ff90811694840194909452600160b81b8204841615156060840152600160c01b820490931615156080830152600160c81b900490911660a082015291906121ca90889088906118d09082906154bd565b90508561ffff166121e783600001516001600160a01b0316611d30565b61ffff16146122285760405162461bcd60e51b815260206004820152600d60248201526c4e6f742063757220707269636560981b6044820152606401610c5e565b600085612249576001820154600160801b90046001600160801b0316612258565b60018201546001600160801b03165b9050612270612266826155ac565b83908860006140f8565b6122878761227d836155ac565b60039190896141cd565b6122be61229861082c8960016154bd565b6001600160a01b031684600001516001600160a01b0316836001600160801b0316612d7e565b93506122f283600001516001600160a01b03166122da89612dbc565b6001600160a01b0316836001600160801b0316613ba5565b6000805460ff19169055989397509295505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146123735760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610c5e565b60006123936123828587615488565b61238d8860026156bb565b906144e4565b905060006123a58261238d8888615624565b905073__$7f722a1af7b4060aab6915c87e2e2208cb$$7f722a1af7b4060aab6915c87e2e2208cb$__63018b035161353e878661429e565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af415801561359a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135be9190615637565b600e55600f5573__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b03516135f26135eb8486615488565b889061429e565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af415801561364e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136729190615637565b60115550600c54613690906124a690670de0b6b3a7640000906144e4565b61369b600e546144f9565b5050505050565b60055460009081906001600160a01b031633146136d15760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff16156136f45760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff191660011790556001600160801b0385166137425760405162461bcd60e51b81526020600482015260086024820152670c08185b5bdd5b9d60c21b6044820152606401610c5e565b61377f60405180608001604052808a6001600160a01b031681526020018961ffff1681526020018861ffff16815260200187600f0b815250614655565b6000805460ff19169055909a909950975050505050505050565b6000828410156137bb5760405162461bcd60e51b8152600401610c5e90615714565b612db46137c88486615624565b8390613f13565b6000816000036137e25750600019611aaa565b612db4826137f08587615624565b90613f13565b6000811561381f578261380a8560016154bd565b61ffff1661381891906156bb565b9050611aaa565b6138188361ffff86166156bb565b6005546001600160a01b031633146138575760405162461bcd60e51b8152600401610c5e906156f2565b80156138c657600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061388f90869086906004016155ee565b600060405180830381600087803b1580156138a957600080fd5b505af11580156138bd573d6000803e3d6000fd5b50505050505050565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061388f90869086906004016155ee565b600061282e600384846142b3565b6000828410156139285760405162461bcd60e51b8152600401610c5e90615714565b612db46137c8600261393a8688615488565b6139449190615671565b612dae8688615624565b60008083156139da5761396d8387612a41612a2061082c8360016154bd565b600a54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac906139a390869086906004016155ee565b600060405180830381600087803b1580156139bd57600080fd5b505af11580156139d1573d6000803e3d6000fd5b50505050612b0e565b6139f08387612979612a2061082c8360016154bd565b600b54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac9061169290869089906004016155ee565b60008215613aa7576000613a3c83866000612602565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990613a6f90869085906004016155ee565b600060405180830381600087803b158015613a8957600080fd5b505af1158015613a9d573d6000803e3d6000fd5b5050505050611aaa565b600b546001600160a01b03166340c10f1983613aff613aca61082c8960016154bd565b6001600160a01b0316613adc89612dbc565b6001600160a01b0316613af1338b600161311a565b6001600160801b0316612d7e565b6040518363ffffffff1660e01b8152600401613b1c9291906155ee565b600060405180830381600087803b158015613b3657600080fd5b505af1158015613b4a573d6000803e3d6000fd5b50505050612db482856001612602565b6005546001600160a01b03163314613b845760405162461bcd60e51b8152600401610c5e9061542a565b6001805460ff60b81b198116600160b81b9182900460ff1615909102179055565b600082841015613bc75760405162461bcd60e51b8152600401610c5e90615714565b73__$7f722a1af7b4060aab6915c87e2e2208cb$__636ca35e9e613bec868686612d7e565b6000613bf786613e0b565b6040516001600160e01b031960e086901b16815260048101939093526024830191909152604482015260648101869052608401602060405180830381865af4158015613c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db4919061574b565b613cae81604051602401613c7f91906157aa565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052614918565b50565b6000613cbd8284615737565b159392505050565b61ffff811660009081526020838152604080832081516101808101835281546001600160801b038082168352600160801b91829004600f0b95830195909552600183015493820193909352600282015460608201526003820154600681900b6080830152600160381b81046001600160a01b031660a0830152600160d81b810463ffffffff1660c0830152600160f81b900460ff16151560e08201526004820154808516610100830181905290849004851661012083015260059092015480851661014083015292909204909216610160820152901580613db257506101208101516001600160801b0316155b613dbe57613dbe6157bd565b806101200151816101000151612db491906154d8565b60008115613dee576125aa670de0b6b3a7640000836148ed565b611d56613dfc836001615488565b670de0b6b3a7640000906148ed565b60008115613e25576125aa670de0b6b3a764000083613f13565b611d56613e33836001615488565b670de0b6b3a764000090613f13565b6131168282604051602401613e589291906157d3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052614918565b613cae81604051602401613e9d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052614918565b6130df838383604051602401613ee4939291906157f5565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052614918565b6000611aaa83670de0b6b3a764000084614939565b61ffff821660009081526020849052604090208115613fc4576004810180546001600160801b03191690556005810180546001600160801b0316906000613f6e8361581a565b91906101000a8154816001600160801b0302191690836001600160801b0316021790555050613fbf604051806040016040528060068152602001657469636b3f3f60d01b8152508461ffff16613e42565b61300e565b6004810180546001600160801b03908116909155600582018054600160801b9004909116906010613ff48361581a565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b61ffff8316600090815260208590526040902080546001820154600160801b909104600f0b91906140509085615624565b600182015560028101546140649084615624565b600290910155949350505050565b806001600160a01b038116811461408857600080fd5b919050565b6040805160609490941b6bffffffffffffffffffffffff191660208086019190915260f093841b6001600160f01b031990811660348701529290931b909116603684015280516018818503018152603890930181528251928201929092206000908152929052902090565b8115614162576001840154614116906001600160801b031684612542565b6001850180546001600160801b0319166001600160801b03929092169190911790556000600f84900b1315613fbf5783546001600160801b03808316600160801b02911617845561300e565b600184015461418190600160801b90046001600160801b031684612542565b6001850180546001600160801b03928316600160801b0292169190911790556000600f84900b131561300e5783546001600160801b0319166001600160801b0391909116179092555050565b80156142365761ffff83166000908152602085905260409020600401546141fd906001600160801b031683612542565b61ffff8416600090815260208690526040902060040180546001600160801b0319166001600160801b039290921691909117905561300e565b61ffff831660009081526020859052604090206004015461426790600160801b90046001600160801b031683612542565b61ffff8416600090815260208690526040902060040180546001600160801b03928316600160801b02921691909117905550505050565b6000611aaa8383670de0b6b3a7640000614958565b6000816142e65761ffff8316600090815260208590526040902060050154600160801b90046001600160801b0316612db4565b505061ffff16600090815260209190915260409020600501546001600160801b031690565b801561437a57600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061434390879087906004016155ee565b600060405180830381600087803b15801561435d57600080fd5b505af1158015614371573d6000803e3d6000fd5b505050506143df565b600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906143ac90879087906004016155ee565b600060405180830381600087803b1580156143c657600080fd5b505af11580156143da573d6000803e3d6000fd5b505050505b6009546040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201859052909116906323b872dd906064015b6020604051808303816000875af1158015614439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061369b9190615607565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156144a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144ca919061574b565b905090565b6000611aaa8383670de0b6b3a7640000614939565b6000611aaa83670de0b6b3a764000084614958565b61450281611d30565b6001805461ffff92909216600160a01b0261ffff60a01b1990921691909117905561452c81614072565b600180546001600160a01b0319166001600160a01b039290921691909117905550565b80156145be57600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061458790879086906004016155ee565b600060405180830381600087803b1580156145a157600080fd5b505af11580156145b5573d6000803e3d6000fd5b50505050614623565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906145f090879086906004016155ee565b600060405180830381600087803b15801561460a57600080fd5b505af115801561461e573d6000803e3d6000fd5b505050505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061441a90879087906004016155ee565b6040805160c0810182526001546001600160a01b038116825261ffff600160a01b82048116602080850182905260ff600160b01b8504811686880152600160b81b850481161515606080880191909152600160c01b860490911615156080870152600160c81b90940490921660a085015285519186015194860151928601516000958695869590946146e994909390614976565b93508460600151600f0b6000146148e557846020015161ffff16816020015161ffff16101561477b576147746147228660400151612dbc565b6001600160a01b03166147388760200151612dbc565b6001600160a01b031660008860600151600f0b121561476757876060015161475f906155ac565b600f0b612d7e565b8760600151600f0b612d7e565b91506148e5565b846040015161ffff16816020015161ffff1610156148885760025460408601516001600160801b03909116906147f6906147b490612dbc565b6001600160a01b031683600001516001600160a01b031660008960600151600f0b12156147e957886060015161475f906155ac565b8860600151600f0b612d7e565b925061485282600001516001600160a01b03166148168860200151612dbc565b6001600160a01b031660008960600151600f0b121561484557886060015161483d906155ac565b600f0b613ba5565b8860600151600f0b613ba5565b9350614862818760600151612542565b600280546001600160801b0319166001600160801b0392909216919091179055506148e5565b6148e26148988660400151612dbc565b6001600160a01b03166148ae8760200151612dbc565b6001600160a01b031660008860600151600f0b12156148d557876060015161483d906155ac565b8760600151600f0b613ba5565b92505b509193909250565b6000611aaa83670de0b6b3a764000084614a02565b806001600160801b038116811461408857600080fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82820281151584158583048514171661495157600080fd5b0492915050565b600082600019048411830215820261496f57600080fd5b5091020490565b6000614985600487878761408d565b60065460075491925090600f85900b156149d2576006546007546149b4916003918a9188918a91906000614a30565b506006546007546149d091600391899188918a91906001614a30565b505b6000806149e460038a8a898888614b3c565b90925090506149f585888484614c28565b5050505095945050505050565b828202811515841585830485141716614a1a57600080fd5b6001826001830304018115150290509392505050565b61ffff8616600090815260208890526040812080546001600160801b031682614a598289612542565b6001600160801b0380821615908416801591909114159550909150600003614ab1578861ffff168a61ffff1611614a995760018301879055600283018690555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b03821617835584614af7578254614af290614aed90600f8b810b91600160801b9004900b61554e565b614e1a565b614b15565b8254614b1590614aed90600f8b810b91600160801b9004900b61552e565b83546001600160801b03918216600160801b02911617909255509098975050505050505050565b61ffff80861660008181526020899052604080822088851683529082209193849391929184918291908a1610614b7d57505060018201546002830154614ba1565b6001840154614b8c9089615624565b9150836002015487614b9e9190615624565b90505b6000808b61ffff168b61ffff161015614bc557505060018301546002840154614be9565b6001850154614bd4908b615624565b9150846002015489614be69190615624565b90505b81614bf4858c615624565b614bfe9190615624565b975080614c0b848b615624565b614c159190615624565b9650505050505050965096945050505050565b604080516101208101825285546001600160801b038082168352600160801b918290048116602084015260018801548082169484019490945292048216606082015260028601549091166080820152600385015460a0820152600485015460c0820152600585015460e082015260068501546101008201526000600f85900b8103614cfa57600082608001516001600160801b031611614cef5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610c5e565b506080810151614d0b565b614d08826080015186612542565b90505b6000614d3e83608001516001600160801b0316670de0b6b3a76400008560a0015188614d379190615624565b9190614939565b90506000614d6c84608001516001600160801b0316670de0b6b3a76400008660c0015188614d379190615624565b905086600f0b600014614d97576002880180546001600160801b0319166001600160801b0385161790555b60038801869055600488018590556001600160801b038216151580614dc557506000816001600160801b0316115b1561329d57816001600160801b0316886005016000828254614de79190615488565b92505081905550806001600160801b0316886006016000828254614e0b9190615488565b90915550505050505050505050565b80600f81900b811461408857600080fd5b6001600160a01b0381168114613cae57600080fd5b8015158114613cae57600080fd5b60008083601f840112614e6057600080fd5b50813567ffffffffffffffff811115614e7857600080fd5b602083019150836020828501011115614e9057600080fd5b9250929050565b60008060008060008060a08789031215614eb057600080fd5b8635614ebb81614e2b565b95506020870135614ecb81614e40565b94506040870135935060608701359250608087013567ffffffffffffffff811115614ef557600080fd5b614f0189828a01614e4e565b979a9699509497509295939492505050565b803561ffff8116811461408857600080fd5b60008060008060808587031215614f3b57600080fd5b614f4485614f13565b93506020850135614f5481614e40565b92506040850135614f6481614e40565b91506060850135614f7481614e2b565b939692955090935050565b80356001600160801b038116811461408857600080fd5b600080600080600060a08688031215614fae57600080fd5b8535614fb981614e2b565b9450614fc760208701614f13565b9350614fd560408701614f13565b9250614fe360608701614f7f565b9150614ff160808701614f7f565b90509295509295909350565b6000806000806080858703121561501357600080fd5b843561501e81614e2b565b935061502c60208601614f13565b925061503a60408601614f7f565b91506060850135614f7481614e40565b60006020828403121561505c57600080fd5b5035919050565b60008060008060006080868803121561507b57600080fd5b853561508681614e40565b94506020860135935060408601359250606086013567ffffffffffffffff8111156150b057600080fd5b6150bc88828901614e4e565b969995985093965092949392505050565b6000806000606084860312156150e257600080fd5b83356150ed81614e2b565b92506150fb60208501614f13565b9150604084013561510b81614e40565b809150509250925092565b6000806000806080858703121561512c57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561515b57600080fd5b61516483614f7f565b9150602083013580600f0b811461517a57600080fd5b809150509250929050565b60006020828403121561519757600080fd5b8135611aaa81614e2b565b600080604083850312156151b557600080fd5b6151be83614f13565b9150602083013561517a81614e40565b600080600080608085870312156151e457600080fd5b6151ed85614f13565b9350602085013592506040850135614f6481614e40565b6000806040838503121561521757600080fd5b823561522281614e2b565b946020939093013593505050565b6000806000806080858703121561524657600080fd5b843561525181614e2b565b935061525f60208601614f13565b925061526d60408601614f13565b915061527b60608601614f7f565b905092959194509250565b60008060006060848603121561529b57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156152c457600080fd5b611aaa82614f13565b6000806000606084860312156152e257600080fd5b6152eb84614f13565b925060208401356152fb81614e40565b9150604084013561510b81614e2b565b6000806040838503121561531e57600080fd5b82359150602083013561517a81614e40565b600080600080600060a0868803121561534857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060a0878903121561538457600080fd5b863561538f81614e2b565b955061539d60208801614f13565b94506153ab60408801614f13565b93506153b960608801614f7f565b9250608087013567ffffffffffffffff811115614ef557600080fd5b6000806000606084860312156153ea57600080fd5b6153f384614f13565b925060208401359150604084013561510b81614e40565b60008060006060848603121561541f57600080fd5b83356153f381614e2b565b6020808252600990820152684e6f7420456e74727960b81b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d5657611d56615472565b61ffff8281168282160390808211156154b6576154b6615472565b5092915050565b61ffff8181168382160190808211156154b6576154b6615472565b6001600160801b038181168382160190808211156154b6576154b6615472565b6000806000806080858703121561550e57600080fd5b505082516020840151604085015160609095015191969095509092509050565b81810360008312801583831316838312821617156154b6576154b6615472565b808201828112600083128015821682158216171561556e5761556e615472565b505092915050565b600f81810b9083900b0160016001607f1b0381136f7fffffffffffffffffffffffffffffff1982121715611d5657611d56615472565b600081600f0b60016001607f1b031981036155c9576155c9615472565b60000392915050565b6000600160ff1b82016155e7576155e7615472565b5060000390565b6001600160a01b03929092168252602082015260400190565b60006020828403121561561957600080fd5b8151611aaa81614e40565b81810381811115611d5657611d56615472565b6000806040838503121561564a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826156805761568061565b565b500490565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b8082028115828204841417611d5657611d56615472565b6001600160801b038281168282160390808211156154b6576154b6615472565b60208082526008908201526732b73a393ca2a92960c11b604082015260600190565b602080825260099082015268383934b1b29022a92960b91b604082015260600190565b6000826157465761574661565b565b500690565b60006020828403121561575d57600080fd5b5051919050565b6000815180845260005b8181101561578a5760208185018101518683018201520161576e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611aaa6020830184615764565b634e487b7160e01b600052600160045260246000fd5b6040815260006157e66040830185615764565b90508260208301529392505050565b6060815260006158086060830186615764565b60208301949094525060400152919050565b60006001600160801b0380831681810361583657615836615472565b600101939250505056fea264697066735822122015320c31a47ea99ed2bf1761dfef9461879564f07cc45590aef536c7ecb81d3f64736f6c63430008110033",
    "sourceMap": "1375:4558:3:-:0;;;1778:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1170:24:0;;;;;1205:22;;;;1960:5:3;1275:6:0;;;;1292:20;;;;1323:15;;;;1940:4:3;;1945:5;;1951:7;;1940:4;1945:5;1388:24:0;2184:4;1388:3;:24;:::i;:::-;1376:9;:36;;-1:-1:-1;;;;;;1376:36:0;-1:-1:-1;;;;;1376:36:0;;;;;;;;;;-1:-1:-1;;1432:10:0;1424:18;;1148:9:1::1;:24:::0;;-1:-1:-1;;;;;;1148:24:1;;::::1;-1:-1:-1::0;;;;;1148:24:1;;::::1;;::::0;;;1182:10:::1;:25:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1217:12:::1;:29:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1256:24:::1;;;::::0;1976:5:3::1;:14:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2001:24:::1;;::::0;-1:-1:-1;1375:4558:3;;-1:-1:-1;;1375:4558:3;14:177:82;93:13;;-1:-1:-1;;;;;135:31:82;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;751:356::-;-1:-1:-1;;;;;874:10:82;;;886;;;870:27;917:20;;;;823:19;956:24;;;946:155;;1023:10;1018:3;1014:20;1011:1;1004:31;1058:4;1055:1;1048:15;1086:4;1083:1;1076:15;946:155;;;751:356;;;;:::o;:::-;1375:4558:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "contracts/bonds/GBC.sol": {
        "LinearCurve": [
          {
            "start": 4849,
            "length": 20
          },
          {
            "start": 7345,
            "length": 20
          },
          {
            "start": 9773,
            "length": 20
          },
          {
            "start": 14240,
            "length": 20
          },
          {
            "start": 14410,
            "length": 20
          },
          {
            "start": 15949,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "$7f722a1af7b4060aab6915c87e2e2208cb$__9063324404ea9060e401608060405180830381865af41580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906154f8565b60c085015260a08401526080830152604080860191909152805180820190915260088152675f5f5f5f5f5f5f5f60c01b602082015261110990613c6b565b61113760405180604001604052806008815260200167435552505249434560c01b8152508560400151613e42565b6111836040518060400160405280601e81526020017f74726164696e673b206c69717569646974792c20616d6f756e746c65667400008152508560c001516001600160801b0316613e42565b835161118e90613e87565b6111da6040518060400160405280601881526020017f6e65787470726963656c696d69742f706f696e746e65787400000000000000008152508260600151836020015161ffff16613ecc565b611201604051806040016040528060018152602001606160f81b8152508460000151613e42565b61123a6040518060400160405280600e81526020016d185b5bdd5b9d1a5b985b991bdd5d60921b81525082608001518360a00151613ecc565b6112686040518060400160405280600381526020016239963160e91b81525084602001518560400151613ecc565b811561128a5760808101518451859061128290839061552e565b9052506112a2565b60808101518451859061129e90839061554e565b9052505b8060a00151846020018181516112b89190615488565b90525060c08401516001600160801b0316156112ff5760c080850151908201516112ea916001600160801b0316613f13565b846080018181516112fb9190615488565b9052505b80606001518460400151036114295760e08101516001600160801b031615611333576060840151611333906003908f613f28565b602081015160065460075460009261134d9260039261401f565b9050866080015115801561137057508660a0015161ffff16826020015161ffff16145b1561139e5760208083015161ffff1660009081526008909152604090205461139b90600f0b82615576565b90505b604080518082018252600a81526964796e616d69634c697160b01b6020808301919091528481015161ffff166000908152600890915291909120546113ec9190600f90810b9084900b613ecc565b8d6113fd576113fa816155ac565b90505b61140b8560c0015182612542565b6001600160801b031660c086015250602081015161ffff1660608501525b50610e9a565b61143c8360400151614072565b600180546001600160a01b0319166001600160a01b03929092169190911790556020850151606084015161ffff9182169116146114995760608301516001805461ffff909216600160a01b0261ffff60a01b199092169190911790555b8260c001516001600160801b03168360e001516001600160801b0316146114df5760c0830151600280546001600160801b0319166001600160801b039092169190911790555b8b156114ee5760808301516006555b8061151f5761271083602001516115059190615488565b83516115108d6155d2565b61151a919061554e565b61154c565b8b61153a578251611530908c61552e565b836020015161154c565b8251611546908c61552e565b83602001515b6040805180820190915260038152623f3f3f60e81b60208201528551929950909750611578918d613ecc565b50506000805460ff19169055509299919850909650505050505050565b60008083156115c65784156115ba576115b0838760006120e8565b90925090506115ea565b6115b0838760016120e8565b84156115d8576115b0838760016120e8565b6115e4838760006120e8565b90925090505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061161c90869086906004016155ee565b6020604051808303816000875af115801561163b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165f9190615607565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061169290869085906004016155ee565b600060405180830381600087803b1580156116ac57600080fd5b505af11580156116c0573d6000803e3d6000fd5b5050505094509492505050565b60055460009081906001600160a01b031633146116fc5760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff161561171f5760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff19166001178155611739600433898961408d565b90508060050154856001600160801b03161161175e57846001600160801b0316611764565b80600501545b92508060060154846001600160801b03161161178957836001600160801b031661178f565b80600601545b915082156117b157828160050160008282546117ab9190615624565b90915550505b81156117d157818160060160008282546117cb9190615624565b90915550505b506000805460ff1916905590969095509350505050565b6005546000906001600160a01b031633146118155760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff16156118385760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff191660019081179091555461ffff851690611861906001600160a01b0316611d30565b61ffff16036118be5760405162461bcd60e51b815260206004820152602360248201527f43616e277420726564756365206f7264657220666f722063757272656e74207460448201526269636b60e81b6064820152608401610c5e565b60006118da33866118d08160016154bd565b600492919061408d565b90506118f26118e8856155ac565b82908560006140f8565b611909856118ff866155ac565b60039190866141cd565b600083611936577f0000000000000000000000000000000000000000000000000000000000000000611958565b7f00000000000000000000000000000000000000000000000000000000000000005b90508361199f5761199a61197061082c8860016154bd565b6001600160a01b031661198288612dbc565b6001600160a01b0316876001600160801b0316613ba5565b6119da565b6119da6119b061082c8860016154bd565b6001600160a01b03166119c288612dbc565b6001600160a01b0316876001600160801b0316612d7e565b6000805460ff19169055979650505050505050565b600c54600d5460405163018b035160e01b8152600481018490526000602482018190526044820193909352606481019190915260016084820152819073__$7f722a1af7b4060aab6915c87e2e2208cb$__9063018b03519060a4016040805180830381865af4158015611a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8a9190615637565b50905082611aa082670de0b6b3a764000061429e565b611aaa9190615624565b9392505050565b60055460009081906001600160a01b03163314611ae05760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff1615611b035760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff19166001179055828015611b3957506001546001600160a01b0316611b2d86612dbc565b6001600160a01b031611155b15611b775760405162461bcd60e51b815260206004820152600e60248201526d61736b2062656c6f77207072696560901b6044820152606401610c5e565b82158015611ba157506001546001600160a01b0316611b9586612dbc565b6001600160a01b031610155b15611be05760405162461bcd60e51b815260206004820152600f60248201526e626964732061626f7665207072696560881b6044820152606401610c5e565b6000611bf287876118d08160016154bd565b9050611c00600387866142b3565b9150611c0e818686856140f8565b611c1b60038787876141cd565b600084611c48577f0000000000000000000000000000000000000000000000000000000000000000611c6a565b7f00000000000000000000000000000000000000000000000000000000000000005b905084611cb157611cac611c8261082c8960016154bd565b6001600160a01b0316611c9489612dbc565b6001600160a01b0316886001600160801b0316613ba5565b611cec565b611cec611cc261082c8960016154bd565b6001600160a01b0316611cd489612dbc565b6001600160a01b0316886001600160801b0316612d7e565b9350611d1960405180604001604052806009815260200168185b5bdd5b9d189a5960ba1b81525085613e42565b50506000805460ff19169055909590945092505050565b6000670de0b6b3a7640000611d4c83662386f26fc10000613f13565b611d569190615671565b92915050565b6000808615611ed557611d7433600188888888610c2f565b90925090507f000000000000000000000000000000000000000000000000000000000000000015611db157611dac338284600161430b565b6120de565b6000611dbb61445d565b604051636d29069f60e11b8152909150339063da520d3e90611de590869089908990600401615685565b600060405180830381600087803b158015611dff57600080fd5b505af1158015611e13573d6000803e3d6000fd5b505050508083611e239190615488565b611e2b61445d565b1015611e625760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610c5e565b600a546001600160a01b03166340c10f19611e7f86880188615185565b846040518363ffffffff1660e01b8152600401611e9d9291906155ee565b600060405180830381600087803b158015611eb757600080fd5b505af1158015611ecb573d6000803e3d6000fd5b50505050506120de565b611ee430600088888888610c2f565b90925090506000611ef361445d565b9050611f1f6040518060400160405280600781526020016618985cd958985b60ca1b8152508284613ecc565b611f2761445d565b821115611f605760405162461bcd60e51b815260206004820152600760248201526621616d6d4c697160c81b6044820152606401610c5e565b8180611f7485670de0b6b3a76400006144cf565b611f7e9190615624565b92507f000000000000000000000000000000000000000000000000000000000000000015611fb857611fb3338585600061430b565b6120db565b6000611fc261445d565b604051636d29069f60e11b8152909150339063da520d3e90611fec9087908b908b90600401615685565b600060405180830381600087803b15801561200657600080fd5b505af115801561201a573d6000803e3d6000fd5b50505050808461202a9190615488565b61203261445d565b10156120695760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610c5e565b600b546001600160a01b03166340c10f19612086888a018a615185565b876040518363ffffffff1660e01b81526004016120a49291906155ee565b600060405180830381600087803b1580156120be57600080fd5b505af11580156120d2573d6000803e3d6000fd5b50505050819450505b50505b9550959350505050565b60055460009081906001600160a01b031633146121175760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff161561213a5760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff1916600190811782556040805160c08101825282546001600160a01b038116825261ffff600160a01b820481166020840152600160b01b820460ff90811694840194909452600160b81b8204841615156060840152600160c01b820490931615156080830152600160c81b900490911660a082015291906121ca90889088906118d09082906154bd565b90508561ffff166121e783600001516001600160a01b0316611d30565b61ffff16146122285760405162461bcd60e51b815260206004820152600d60248201526c4e6f742063757220707269636560981b6044820152606401610c5e565b600085612249576001820154600160801b90046001600160801b0316612258565b60018201546001600160801b03165b9050612270612266826155ac565b83908860006140f8565b6122878761227d836155ac565b60039190896141cd565b6122be61229861082c8960016154bd565b6001600160a01b031684600001516001600160a01b0316836001600160801b0316612d7e565b93506122f283600001516001600160a01b03166122da89612dbc565b6001600160a01b0316836001600160801b0316613ba5565b6000805460ff19169055989397509295505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146123735760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610c5e565b60006123936123828587615488565b61238d8860026156bb565b906144e4565b905060006123a58261238d8888615624565b905073__$7f722a1af7b4060aab6915c87e2e2208cb$$7f722a1af7b4060aab6915c87e2e2208cb$__63018b035161353e878661429e565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af415801561359a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135be9190615637565b600e55600f5573__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b03516135f26135eb8486615488565b889061429e565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af415801561364e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136729190615637565b60115550600c54613690906124a690670de0b6b3a7640000906144e4565b61369b600e546144f9565b5050505050565b60055460009081906001600160a01b031633146136d15760405162461bcd60e51b8152600401610c5e9061542a565b60005460ff16156136f45760405162461bcd60e51b8152600401610c5e9061544d565b6000805460ff191660011790556001600160801b0385166137425760405162461bcd60e51b81526020600482015260086024820152670c08185b5bdd5b9d60c21b6044820152606401610c5e565b61377f60405180608001604052808a6001600160a01b031681526020018961ffff1681526020018861ffff16815260200187600f0b815250614655565b6000805460ff19169055909a909950975050505050505050565b6000828410156137bb5760405162461bcd60e51b8152600401610c5e90615714565b612db46137c88486615624565b8390613f13565b6000816000036137e25750600019611aaa565b612db4826137f08587615624565b90613f13565b6000811561381f578261380a8560016154bd565b61ffff1661381891906156bb565b9050611aaa565b6138188361ffff86166156bb565b6005546001600160a01b031633146138575760405162461bcd60e51b8152600401610c5e906156f2565b80156138c657600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061388f90869086906004016155ee565b600060405180830381600087803b1580156138a957600080fd5b505af11580156138bd573d6000803e3d6000fd5b50505050505050565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061388f90869086906004016155ee565b600061282e600384846142b3565b6000828410156139285760405162461bcd60e51b8152600401610c5e90615714565b612db46137c8600261393a8688615488565b6139449190615671565b612dae8688615624565b60008083156139da5761396d8387612a41612a2061082c8360016154bd565b600a54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac906139a390869086906004016155ee565b600060405180830381600087803b1580156139bd57600080fd5b505af11580156139d1573d6000803e3d6000fd5b50505050612b0e565b6139f08387612979612a2061082c8360016154bd565b600b54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac9061169290869089906004016155ee565b60008215613aa7576000613a3c83866000612602565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990613a6f90869085906004016155ee565b600060405180830381600087803b158015613a8957600080fd5b505af1158015613a9d573d6000803e3d6000fd5b5050505050611aaa565b600b546001600160a01b03166340c10f1983613aff613aca61082c8960016154bd565b6001600160a01b0316613adc89612dbc565b6001600160a01b0316613af1338b600161311a565b6001600160801b0316612d7e565b6040518363ffffffff1660e01b8152600401613b1c9291906155ee565b600060405180830381600087803b158015613b3657600080fd5b505af1158015613b4a573d6000803e3d6000fd5b50505050612db482856001612602565b6005546001600160a01b03163314613b845760405162461bcd60e51b8152600401610c5e9061542a565b6001805460ff60b81b198116600160b81b9182900460ff1615909102179055565b600082841015613bc75760405162461bcd60e51b8152600401610c5e90615714565b73__$7f722a1af7b4060aab6915c87e2e2208cb$__636ca35e9e613bec868686612d7e565b6000613bf786613e0b565b6040516001600160e01b031960e086901b16815260048101939093526024830191909152604482015260648101869052608401602060405180830381865af4158015613c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db4919061574b565b613cae81604051602401613c7f91906157aa565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052614918565b50565b6000613cbd8284615737565b159392505050565b61ffff811660009081526020838152604080832081516101808101835281546001600160801b038082168352600160801b91829004600f0b95830195909552600183015493820193909352600282015460608201526003820154600681900b6080830152600160381b81046001600160a01b031660a0830152600160d81b810463ffffffff1660c0830152600160f81b900460ff16151560e08201526004820154808516610100830181905290849004851661012083015260059092015480851661014083015292909204909216610160820152901580613db257506101208101516001600160801b0316155b613dbe57613dbe6157bd565b806101200151816101000151612db491906154d8565b60008115613dee576125aa670de0b6b3a7640000836148ed565b611d56613dfc836001615488565b670de0b6b3a7640000906148ed565b60008115613e25576125aa670de0b6b3a764000083613f13565b611d56613e33836001615488565b670de0b6b3a764000090613f13565b6131168282604051602401613e589291906157d3565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052614918565b613cae81604051602401613e9d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052614918565b6130df838383604051602401613ee4939291906157f5565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052614918565b6000611aaa83670de0b6b3a764000084614939565b61ffff821660009081526020849052604090208115613fc4576004810180546001600160801b03191690556005810180546001600160801b0316906000613f6e8361581a565b91906101000a8154816001600160801b0302191690836001600160801b0316021790555050613fbf604051806040016040528060068152602001657469636b3f3f60d01b8152508461ffff16613e42565b61300e565b6004810180546001600160801b03908116909155600582018054600160801b9004909116906010613ff48361581a565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b61ffff8316600090815260208590526040902080546001820154600160801b909104600f0b91906140509085615624565b600182015560028101546140649084615624565b600290910155949350505050565b806001600160a01b038116811461408857600080fd5b919050565b6040805160609490941b6bffffffffffffffffffffffff191660208086019190915260f093841b6001600160f01b031990811660348701529290931b909116603684015280516018818503018152603890930181528251928201929092206000908152929052902090565b8115614162576001840154614116906001600160801b031684612542565b6001850180546001600160801b0319166001600160801b03929092169190911790556000600f84900b1315613fbf5783546001600160801b03808316600160801b02911617845561300e565b600184015461418190600160801b90046001600160801b031684612542565b6001850180546001600160801b03928316600160801b0292169190911790556000600f84900b131561300e5783546001600160801b0319166001600160801b0391909116179092555050565b80156142365761ffff83166000908152602085905260409020600401546141fd906001600160801b031683612542565b61ffff8416600090815260208690526040902060040180546001600160801b0319166001600160801b039290921691909117905561300e565b61ffff831660009081526020859052604090206004015461426790600160801b90046001600160801b031683612542565b61ffff8416600090815260208690526040902060040180546001600160801b03928316600160801b02921691909117905550505050565b6000611aaa8383670de0b6b3a7640000614958565b6000816142e65761ffff8316600090815260208590526040902060050154600160801b90046001600160801b0316612db4565b505061ffff16600090815260209190915260409020600501546001600160801b031690565b801561437a57600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061434390879087906004016155ee565b600060405180830381600087803b15801561435d57600080fd5b505af1158015614371573d6000803e3d6000fd5b505050506143df565b600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906143ac90879087906004016155ee565b600060405180830381600087803b1580156143c657600080fd5b505af11580156143da573d6000803e3d6000fd5b505050505b6009546040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201859052909116906323b872dd906064015b6020604051808303816000875af1158015614439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061369b9190615607565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156144a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144ca919061574b565b905090565b6000611aaa8383670de0b6b3a7640000614939565b6000611aaa83670de0b6b3a764000084614958565b61450281611d30565b6001805461ffff92909216600160a01b0261ffff60a01b1990921691909117905561452c81614072565b600180546001600160a01b0319166001600160a01b039290921691909117905550565b80156145be57600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061458790879086906004016155ee565b600060405180830381600087803b1580156145a157600080fd5b505af11580156145b5573d6000803e3d6000fd5b50505050614623565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906145f090879086906004016155ee565b600060405180830381600087803b15801561460a57600080fd5b505af115801561461e573d6000803e3d6000fd5b505050505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061441a90879087906004016155ee565b6040805160c0810182526001546001600160a01b038116825261ffff600160a01b82048116602080850182905260ff600160b01b8504811686880152600160b81b850481161515606080880191909152600160c01b860490911615156080870152600160c81b90940490921660a085015285519186015194860151928601516000958695869590946146e994909390614976565b93508460600151600f0b6000146148e557846020015161ffff16816020015161ffff16101561477b576147746147228660400151612dbc565b6001600160a01b03166147388760200151612dbc565b6001600160a01b031660008860600151600f0b121561476757876060015161475f906155ac565b600f0b612d7e565b8760600151600f0b612d7e565b91506148e5565b846040015161ffff16816020015161ffff1610156148885760025460408601516001600160801b03909116906147f6906147b490612dbc565b6001600160a01b031683600001516001600160a01b031660008960600151600f0b12156147e957886060015161475f906155ac565b8860600151600f0b612d7e565b925061485282600001516001600160a01b03166148168860200151612dbc565b6001600160a01b031660008960600151600f0b121561484557886060015161483d906155ac565b600f0b613ba5565b8860600151600f0b613ba5565b9350614862818760600151612542565b600280546001600160801b0319166001600160801b0392909216919091179055506148e5565b6148e26148988660400151612dbc565b6001600160a01b03166148ae8760200151612dbc565b6001600160a01b031660008860600151600f0b12156148d557876060015161483d906155ac565b8760600151600f0b613ba5565b92505b509193909250565b6000611aaa83670de0b6b3a764000084614a02565b806001600160801b038116811461408857600080fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82820281151584158583048514171661495157600080fd5b0492915050565b600082600019048411830215820261496f57600080fd5b5091020490565b6000614985600487878761408d565b60065460075491925090600f85900b156149d2576006546007546149b4916003918a9188918a91906000614a30565b506006546007546149d091600391899188918a91906001614a30565b505b6000806149e460038a8a898888614b3c565b90925090506149f585888484614c28565b5050505095945050505050565b828202811515841585830485141716614a1a57600080fd5b6001826001830304018115150290509392505050565b61ffff8616600090815260208890526040812080546001600160801b031682614a598289612542565b6001600160801b0380821615908416801591909114159550909150600003614ab1578861ffff168a61ffff1611614a995760018301879055600283018690555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b03821617835584614af7578254614af290614aed90600f8b810b91600160801b9004900b61554e565b614e1a565b614b15565b8254614b1590614aed90600f8b810b91600160801b9004900b61552e565b83546001600160801b03918216600160801b02911617909255509098975050505050505050565b61ffff80861660008181526020899052604080822088851683529082209193849391929184918291908a1610614b7d57505060018201546002830154614ba1565b6001840154614b8c9089615624565b9150836002015487614b9e9190615624565b90505b6000808b61ffff168b61ffff161015614bc557505060018301546002840154614be9565b6001850154614bd4908b615624565b9150846002015489614be69190615624565b90505b81614bf4858c615624565b614bfe9190615624565b975080614c0b848b615624565b614c159190615624565b9650505050505050965096945050505050565b604080516101208101825285546001600160801b038082168352600160801b918290048116602084015260018801548082169484019490945292048216606082015260028601549091166080820152600385015460a0820152600485015460c0820152600585015460e082015260068501546101008201526000600f85900b8103614cfa57600082608001516001600160801b031611614cef5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610c5e565b506080810151614d0b565b614d08826080015186612542565b90505b6000614d3e83608001516001600160801b0316670de0b6b3a76400008560a0015188614d379190615624565b9190614939565b90506000614d6c84608001516001600160801b0316670de0b6b3a76400008660c0015188614d379190615624565b905086600f0b600014614d97576002880180546001600160801b0319166001600160801b0385161790555b60038801869055600488018590556001600160801b038216151580614dc557506000816001600160801b0316115b1561329d57816001600160801b0316886005016000828254614de79190615488565b92505081905550806001600160801b0316886006016000828254614e0b9190615488565b90915550505050505050505050565b80600f81900b811461408857600080fd5b6001600160a01b0381168114613cae57600080fd5b8015158114613cae57600080fd5b60008083601f840112614e6057600080fd5b50813567ffffffffffffffff811115614e7857600080fd5b602083019150836020828501011115614e9057600080fd5b9250929050565b60008060008060008060a08789031215614eb057600080fd5b8635614ebb81614e2b565b95506020870135614ecb81614e40565b94506040870135935060608701359250608087013567ffffffffffffffff811115614ef557600080fd5b614f0189828a01614e4e565b979a9699509497509295939492505050565b803561ffff8116811461408857600080fd5b60008060008060808587031215614f3b57600080fd5b614f4485614f13565b93506020850135614f5481614e40565b92506040850135614f6481614e40565b91506060850135614f7481614e2b565b939692955090935050565b80356001600160801b038116811461408857600080fd5b600080600080600060a08688031215614fae57600080fd5b8535614fb981614e2b565b9450614fc760208701614f13565b9350614fd560408701614f13565b9250614fe360608701614f7f565b9150614ff160808701614f7f565b90509295509295909350565b6000806000806080858703121561501357600080fd5b843561501e81614e2b565b935061502c60208601614f13565b925061503a60408601614f7f565b91506060850135614f7481614e40565b60006020828403121561505c57600080fd5b5035919050565b60008060008060006080868803121561507b57600080fd5b853561508681614e40565b94506020860135935060408601359250606086013567ffffffffffffffff8111156150b057600080fd5b6150bc88828901614e4e565b969995985093965092949392505050565b6000806000606084860312156150e257600080fd5b83356150ed81614e2b565b92506150fb60208501614f13565b9150604084013561510b81614e40565b809150509250925092565b6000806000806080858703121561512c57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561515b57600080fd5b61516483614f7f565b9150602083013580600f0b811461517a57600080fd5b809150509250929050565b60006020828403121561519757600080fd5b8135611aaa81614e2b565b600080604083850312156151b557600080fd5b6151be83614f13565b9150602083013561517a81614e40565b600080600080608085870312156151e457600080fd5b6151ed85614f13565b9350602085013592506040850135614f6481614e40565b6000806040838503121561521757600080fd5b823561522281614e2b565b946020939093013593505050565b6000806000806080858703121561524657600080fd5b843561525181614e2b565b935061525f60208601614f13565b925061526d60408601614f13565b915061527b60608601614f7f565b905092959194509250565b60008060006060848603121561529b57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156152c457600080fd5b611aaa82614f13565b6000806000606084860312156152e257600080fd5b6152eb84614f13565b925060208401356152fb81614e40565b9150604084013561510b81614e2b565b6000806040838503121561531e57600080fd5b82359150602083013561517a81614e40565b600080600080600060a0868803121561534857600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060a0878903121561538457600080fd5b863561538f81614e2b565b955061539d60208801614f13565b94506153ab60408801614f13565b93506153b960608801614f7f565b9250608087013567ffffffffffffffff811115614ef557600080fd5b6000806000606084860312156153ea57600080fd5b6153f384614f13565b925060208401359150604084013561510b81614e40565b60008060006060848603121561541f57600080fd5b83356153f381614e2b565b6020808252600990820152684e6f7420456e74727960b81b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d5657611d56615472565b61ffff8281168282160390808211156154b6576154b6615472565b5092915050565b61ffff8181168382160190808211156154b6576154b6615472565b6001600160801b038181168382160190808211156154b6576154b6615472565b6000806000806080858703121561550e57600080fd5b505082516020840151604085015160609095015191969095509092509050565b81810360008312801583831316838312821617156154b6576154b6615472565b808201828112600083128015821682158216171561556e5761556e615472565b505092915050565b600f81810b9083900b0160016001607f1b0381136f7fffffffffffffffffffffffffffffff1982121715611d5657611d56615472565b600081600f0b60016001607f1b031981036155c9576155c9615472565b60000392915050565b6000600160ff1b82016155e7576155e7615472565b5060000390565b6001600160a01b03929092168252602082015260400190565b60006020828403121561561957600080fd5b8151611aaa81614e40565b81810381811115611d5657611d56615472565b6000806040838503121561564a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826156805761568061565b565b500490565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b8082028115828204841417611d5657611d56615472565b6001600160801b038281168282160390808211156154b6576154b6615472565b60208082526008908201526732b73a393ca2a92960c11b604082015260600190565b602080825260099082015268383934b1b29022a92960b91b604082015260600190565b6000826157465761574661565b565b500690565b60006020828403121561575d57600080fd5b5051919050565b6000815180845260005b8181101561578a5760208185018101518683018201520161576e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611aaa6020830184615764565b634e487b7160e01b600052600160045260246000fd5b6040815260006157e66040830185615764565b90508260208301529392505050565b6060815260006158086060830186615764565b60208301949094525060400152919050565b60006001600160801b0380831681810361583657615836615472565b600101939250505056fea264697066735822122015320c31a47ea99ed2bf1761dfef9461879564f07cc45590aef536c7ecb81d3f64736f6c63430008110033",
    "sourceMapi;:::-;;:::i;:::-;;;;1620:25:82;;;1676:2;1661:18;;1654:34;;;;1593:18;5938:6061:0;;;;;;;;11241:758:1;;;;;;:::i;:::-;;:::i;18628:815:0:-;;;;;;:::i;:::-;;:::i;846:26:1:-;;;;;-1:-1:-1;;;;;846:26:1;;;;;;-1:-1:-1;;;;;3375:32:82;;;3357:51;;3345:2;3330:18;846:26:1;3197:217:82;3291:92:0;3361:5;:14;-1:-1:-1;;;;;3361:14:0;3291:92;;;3565:25:82;;;3553:2;3538:18;3291:92:0;3419:177:82;13376:958:0;;;;;;:::i;:::-;;:::i;4623:246:3:-;;;;;;:::i;:::-;;:::i;2101:40:0:-;;2138:3;2101:40;;1617:33:3;;;;;;1804:24:0;;;;;-1:-1:-1;;;;;1804:24:0;;;;;;-1:-1:-1;;;;;4608:47:82;;;4590:66;;4578:2;4563:18;1804:24:0;4444:218:82;22117:35:0;;;;;;12005:1365;;;;;;:::i;:::-;;:::i;:::-;;;;4841:25:82;;;-1:-1:-1;;;;;4902:47:82;;;4897:2;4882:18;;4875:75;4814:18;12005:1365:0;4667:289:82;24673:137:0;;;;;;:::i;:::-;;:::i;:::-;;;5135:6:82;5123:19;;;5105:38;;5093:2;5078:18;24673:137:0;4961:188:82;2306:2503:1;;;;;;:::i;:::-;;:::i;14456:1090:0:-;;;;;;:::i;:::-;;:::i;3394:1132:3:-;;;;;;:::i;:::-;;:::i;1527:18:0:-;;;;;-1:-1:-1;;;;;1527:18:0;;;;-1:-1:-1;;;1527:18:0;;;;;;-1:-1:-1;;;1527:18:0;;;;;-1:-1:-1;;;1527:18:0;;;;;-1:-1:-1;;;1527:18:0;;;;;;-1:-1:-1;;;1527:18:0;;;;;;;;;-1:-1:-1;;;;;7063:32:82;;;7045:51;;7115:6;7157:15;;;7152:2;7137:18;;7130:43;7221:4;7209:17;;;7189:18;;;7182:45;;;;7270:14;;7263:22;7258:2;7243:18;;7236:50;7330:14;7323:22;7317:3;7302:19;;7295:51;7383:15;7083:3;7362:19;;7355:44;7032:3;7017:19;1527:18:0;6778:627:82;26521:234:0;;;;;;:::i;:::-;;:::i;15758:1078::-;;;;;;:::i;:::-;;:::i;2446:84::-;;;;;;:::i;:::-;;:::i;:::-;;3389:149;;;;;;:::i;:::-;;:::i;1561:16:3:-;;;;;;1884:51:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1884:51:0;;;;-1:-1:-1;;;1884:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8961:15:82;;;8943:34;;9013:15;;;9008:2;8993:18;;8986:43;9065:15;;;9045:18;;;9038:43;;;;9117:15;;;9112:2;9097:18;;9090:43;9170:15;;;;9164:3;9149:19;;9142:44;9217:3;9202:19;;9195:35;9261:3;9246:19;;9239:35;;;;9305:3;9290:19;;9283:35;;;;9349:3;9334:19;;9327:35;;;;8877:3;8862:19;1884:51:0;8519:849:82;4908:1657:1;;;;;;:::i;:::-;;:::i;1504:24:3:-;;;;;;1988:42:0;;2026:4;1988:42;;22077:34;;;;;;2195:20;;;;;-1:-1:-1;;;;;2195:20:0;;;6704:1454:1;;;;;;:::i;:::-;;:::i;4907:241:3:-;;;;;;:::i;:::-;;:::i;1474:24::-;;;;;;2625:478:0;;;;;;:::i;:::-;;:::i;:::-;;;10594:14:82;;10587:22;10569:41;;10557:2;10542:18;2625:478:0;10429:187:82;1583:27:3;;;;;;17830:792:0;;;;;;:::i;:::-;;:::i;23684:177::-;;;;;;:::i;:::-;;:::i;24486:129::-;;;;;;:::i;:::-;;:::i;5789:141:3:-;;;:::i;1456:30:0:-;;;;;785:23:1;;;;;-1:-1:-1;;;;;785:23:1;;;24998:138:0;;;;;;:::i;:::-;;:::i;12064:1168:1:-;;;;;;:::i;:::-;;:::i;5428:253:3:-;;;;;;:::i;:::-;;:::i;26760:231:0:-;;;;;;:::i;:::-;;:::i;13303:999:1:-;;;;;;:::i;:::-;;:::i;10296:935::-;;;;;;:::i;:::-;;:::i;25265:293:0:-;;;;;;:::i;:::-;;:::i;2148:40::-;;2184:4;2148:40;;2411:814:3;;;;;;:::i;:::-;;:::i;17219:605:0:-;;;;;;:::i;:::-;;:::i;24102:175::-;;;;;;:::i;:::-;;:::i;1657:25:3:-;;;;;;24816:177:0;;;;;;:::i;:::-;;:::i;25564:206::-;;;;;;:::i;:::-;;:::i;1835:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1835:42:0;;;;-1:-1:-1;;;1835:42:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1835:42:0;;-1:-1:-1;;;;;1835:42:0;;-1:-1:-1;;;1835:42:0;;;;;-1:-1:-1;;;1835:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14658:47:82;;;14640:66;;14753:2;14742:22;;;;14737:2;14722:18;;14715:50;14781:18;;14774:34;;;;14839:2;14824:18;;14817:34;;;;14899:1;14888:21;;;;14882:3;14867:19;;14860:50;-1:-1:-1;;;;;14947:32:82;;;14967:3;14926:19;;14919:61;15029:10;15017:23;;;15011:3;14996:19;;14989:52;6752:13;6745:21;15089:3;15074:19;;6733:34;4386:46;;15145:3;15130:19;;4374:59;4386:46;;15201:3;15186:19;;4374:59;4386:46;;15258:3;15243:19;;4374:59;4386:46;;;;15315:3;15300:19;;4374:59;14627:3;14612:19;1835:42:0;14197:1129:82;1568:33:0;;;;;1649:35;;;;;5155:267:3;;;;;;:::i;:::-;;:::i;1690:35:0:-;;;;;;;;15957:1:82;15946:21;;;;15928:40;;15916:2;15901:18;1690:35:0;15786:188:82;1607:36:0;;;;;1493:28;;;;;;;;16153:8:82;16141:21;;;16123:40;;16111:2;16096:18;1493:28:0;15979:190:82;815:24:1;;;;;-1:-1:-1;;;;;815:24:1;;;3548:135:0;;;;;;:::i;:::-;;:::i;24282:198::-;;;;;;:::i;:::-;;:::i;9239:1051:1:-;;;;;;:::i;:::-;;:::i;8164:934::-;;;;;;:::i;:::-;;:::i;1689:35:3:-;;;;;2535:84:0;;;:::i;23867:229::-;;;;;;:::i;:::-;;:::i;5938:6061::-;833:5;;6136:16;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;;;;;;;;;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;6182:36:::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;6182:36:0::2;::::0;::::2;::::0;::::2;::::0;:17:::2;:36::i;:::-;6230:31;::::0;;::::2;::::0;::::2;::::0;;6256:5:::2;6230:31:::0;-1:-1:-1;;;;;6230:31:0;;::::2;::::0;;::::2;-1:-1:-1::0;;;6230:31:0;::::2;::::0;::::2;;::::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;6230:31:0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;6230:31:0;::::2;::::0;::::2;;;::::0;;;;;;;;-1:-1:-1;;;6230:31:0;::::2;::::0;;::::2;;;::::0;;;;;;;;-1:-1:-1;;;6230:31:0;;::::2;::::0;;::::2;::::0;;;;6336:415;;6230:31:::2;6336:415:::0;::::2;::::0;;;;;6230:23:::2;6336:415:::0;;::::2;::::0;;;6468:19;;6460:28;;::::2;6336:415:::0;;;;;;;;;;;6230:31;;2026:4:::2;::::0;6230:23;;6336:415;;6519:6;:49:::2;;6548:20;;6519:49;;;6527:19;;6519:49;6336:415:::0;;6628:1:::2;6336:415;::::0;;::::2;::::0;;;6655:9:::2;::::0;-1:-1:-1;;;;;6655:9:0::2;6336:415:::0;;;;;;;;;;;;;;;6785:75;;;;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;7060:14;::::2;::::0;6311:440;;-1:-1:-1;6785:75:0;;6889:19;;::::2;::::0;7055:28:::2;::::0;7076:6;7055:4:::2;:28::i;:::-;:39;;;;;7088:6;7087:7;7055:39;7051:231;;;7128:1;7110:5;:14;;:19;;;;;;;:::i;:::-;::::0;;-1:-1:-1;7171:14:0::2;::::0;::::2;::::0;7158:28:::2;::::0;:12:::2;:28::i;:::-;7144:42;;:11;::::0;::::2;:42:::0;;;7200:5:::2;:25:::0;;-1:-1:-1;;;;7200:25:0::2;-1:-1:-1::0;;;7200:25:0;::::2;;::::0;;7240:16:::2;::::0;::::2;:30:::0;7051:231:::2;7308:6;:65;;7359:5;:14;;;7346:10;:27;;7308:65;;;7329:5;:14;;;7316:10;:27;;7308:65;7300:88;;;::::0;-1:-1:-1;;;7300:88:0;;17315:2:82;7300:88:0::2;::::0;::::2;17297:21:82::0;17354:1;17334:18;;;17327:29;-1:-1:-1;;;17372:18:82;;;17365:39;17421:18;;7300:88:0::2;17113:332:82::0;7300:88:0::2;7412:38;7425:24;7438:10;7425:12;:24::i;7412:38::-;-1:-1:-1::0;;;;;7399:51:0::2;;;7462:3202;7469:30:::0;;:34;;::::2;::::0;:66:::2;;;7525:10;7507:5;:14;;;:28;;7469:66;7462:3202;;;7550:28;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7550:28:0::2;7611:14;::::0;::::2;::::0;7593:32;;7680:11:::2;::::0;::::2;::::0;7662:46:::2;::::0;7693:6;7701;7662:17:::2;:46::i;:::-;7640:19;::::0;::::2;:68:::0;7741:6;:39:::2;;7779:1;7767:5;:11;;;:13;;;;:::i;:::-;7741:39;;;7749:11;::::0;::::2;::::0;:15:::2;::::0;7763:1:::2;7749:15;:::i;:::-;7724:56;;:14;::::0;::::2;:56:::0;7992:11:::2;::::0;::::2;::::0;7969:35:::2;::::0;:5:::2;::::0;:22:::2;:35::i;:::-;-1:-1:-1::0;;;;;7955:49:0::2;:11;::::0;::::2;:49:::0;8027:10;:124:::2;;8110:41;8139:4;:11;;;8121:5;:15;;;:29;;;;:::i;:::-;-1:-1:-1::0;;;;;8110:41:0::2;:10;:41::i;:::-;8027:124;;;8057:34;8079:4;:11;;;8061:5;:15;;;:29;;;;:::i;:::-;-1:-1:-1::0;;;;;8057:34:0::2;:3;:34::i;:::-;8018:133:::0;;8180:14:::2;::::0;::::2;::::0;8175:28:::2;::::0;8196:6;8175:4:::2;:28::i;:::-;8166:6;::::0;;::::2;:37:::0;;;8232:14;::::2;::::0;8256:6;;8227:36:::2;::::0;8166:37;8227:4:::2;:36::i;:::-;8218:6;::::0;::::2;:45:::0;;;8465:14:::2;::::0;;::::2;::::0;8498:19:::2;::::0;::::2;::::0;8539:30;;8427:220;;-1:-1:-1;;;8427:220:0;;::::2;::::0;::::2;18314:25:82::0;;;;18355:18;;;18348:34;;;;18398:18;;;18391:34;18473:8;8588:3:0::2;18461:21:82::0;18441:18;;;18434:49;18520:13;;18499:19;;;18492:42;18571:22;;18550:19;;;18543:51;18637:15;;18631:22;18610:19;;;18603:51;8427:11:0::2;::::0;:20:::2;::::0;18286:19:82;;8427:220:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8409:14;::::0;::::2;8361:286:::0;8393:14:::2;::::0;::::2;8361:286:::0;8378:13:::2;::::0;::::2;8361:286:::0;8362:14:::2;::::0;;::::2;8361:286:::0;;;;8664:23;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;8664:23:0;::::2;::::0;::::2;::::0;:11:::2;:23::i;:::-;8702:39;;;;;;;;;;;;;;-1:-1:-1::0;;;8702:39:0::2;;::::0;8726:5:::2;:14;;;8702:11;:39::i;:::-;8756:62;;;;;;;;;;;;;;;;;::::0;8802:5:::2;:15;;;-1:-1:-1::0;;;;;8756:62:0::2;:11;:62::i;:::-;8853:30:::0;;8833:52:::2;::::0;:11:::2;:52::i;:::-;8899:76;;;;;;;;;;;;;;;;;::::0;8939:4:::2;:19;;;8960:4;:14;;;8899:76;;:11;:76::i;:::-;9000:24;;;;;;;;;;;;;;-1:-1:-1::0;;;9000:24:0::2;;::::0;9017:4:::2;:6;;;9000:11;:24::i;:::-;9040:60;;;;;;;;;;;;;;-1:-1:-1::0;;;9040:60:0::2;;::::0;9070:4:::2;:13;;;9085:4;:14;;;9040:11;:60::i;:::-;9115:34;;;;;;;;;;;;;;-1:-1:-1::0;;;9115:34:0::2;;::::0;9134:4:::2;:6;;;9142:4;:6;;;9115:11;:34::i;:::-;9169:10;9165:210;;;9239:13;::::0;::::2;::::0;9198:55;;:5;;:55:::2;::::0;9239:13;;9198:55:::2;:::i;:::-;::::0;;-1:-1:-1;9165:210:0::2;;;9345:13;::::0;::::2;::::0;9304:55;;:5;;:55:::2;::::0;9345:13;;9304:55:::2;:::i;:::-;::::0;;-1:-1:-1;9165:210:0::2;9414:4;:14;;;9388:5;:22;;:40;;;;;;;:::i;:::-;::::0;;-1:-1:-1;9448:15:0::2;::::0;::::2;::::0;-1:-1:-1;;;;;9448:17:0::2;::::0;9444:115:::2;;9542:15;::::0;;::::2;::::0;9508:14;;::::2;::::0;:51:::2;::::0;-1:-1:-1;;;;;9534:24:0::2;9508:25;:51::i;:::-;9483:5;:21;;:76;;;;;;;:::i;:::-;::::0;;-1:-1:-1;9444:115:0::2;9681:4;:19;;;9663:5;:14;;;:37:::0;9659:995:::2;;9898:11;::::0;::::2;::::0;-1:-1:-1;;;;;9898:14:0::2;::::0;9894:69:::2;;9943:11;::::0;::::2;::::0;9914:49:::2;::::0;:5:::2;::::0;9956:6;9914:28:::2;:49::i;:::-;10038:14;::::0;::::2;::::0;10075:19:::2;::::0;10116:20:::2;::::0;9983:19:::2;::::0;10005:153:::2;::::0;:5:::2;::::0;:11:::2;:153::i;:::-;9983:175;;10183:10;:20;;;10182:21;:68;;;;;10225:10;:25;;;10207:43;;:4;:14;;;:43;;;10182:68;10178:151;;;10314:14;::::0;;::::2;::::0;10303:26:::2;;;::::0;;;:10:::2;:26:::0;;;;;;;10287:42:::2;::::0;10303:26:::2;;10287:42:::0;::::2;:::i;:::-;;;10178:151;10352:101;::::0;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;10352:101:0::2;::::0;;::::2;::::0;;;;10404:14;;::::2;::::0;10393:26:::2;;-1:-1:-1::0;10393:26:0;;;:10:::2;:26:::0;;;;;;;;10352:101:::2;::::0;;10393:26:::2;::::0;;::::2;::::0;10431:20;;::::2;10352:11;:101::i;:::-;10478:6;10473:41;;10501:13;10502:12:::0;10501:13:::2;:::i;:::-;10486:28;;10473:41;10553:38;10562:5;:15;;;10578:12;10553:8;:38::i;:::-;-1:-1:-1::0;;;;;10535:56:0::2;:15;::::0;::::2;:56:::0;-1:-1:-1;10623:14:0::2;::::0;::::2;::::0;10609:28:::2;;:11;::::0;::::2;:28:::0;9659:995:::2;7536:3128;7462:3202;;;10691:26;:5;:14;;;:24;:26::i;:::-;10674:5;:43:::0;;-1:-1:-1;;;;;;10674:43:0::2;-1:-1:-1::0;;;;;10674:43:0;;;::::2;::::0;;;::::2;::::0;;10746:16:::2;::::0;::::2;::::0;10731:11:::2;::::0;::::2;::::0;:31:::2;::::0;;::::2;::::0;::::2;;10728:61;;10778:11;::::0;::::2;::::0;10764:5:::2;:25:::0;;::::2;::::0;;::::2;-1:-1:-1::0;;;10764:25:0::2;-1:-1:-1::0;;;;10764:25:0;;::::2;::::0;;;::::2;::::0;;10728:61:::2;10841:5;:15;;;-1:-1:-1::0;;;;;10817:39:0::2;:5;:20;;;-1:-1:-1::0;;;;;10817:39:0::2;;10813:72;;10870:15;::::0;::::2;::::0;10858:9:::2;:27:::0;;-1:-1:-1;;;;;;10858:27:0::2;-1:-1:-1::0;;;;;10858:27:0;;::::2;::::0;;;::::2;::::0;;10813:72:::2;10900:6;10896:55;;;10930:21;::::0;::::2;::::0;10908:19:::2;:43:::0;10896:55:::2;11470:10;:411;;2138:3;11786:5;:22;;;:35;;;;:::i;:::-;11848:30:::0;;11831:16:::2;11832:15:::0;11831:16:::2;:::i;:::-;:47;;;;:::i;:::-;11470:411;;;11515:6;:235;;11693:30:::0;;11677:46:::2;::::0;:15;:46:::2;:::i;:::-;11727:5;:22;;;11515:235;;;11549:30:::0;;11533:46:::2;::::0;:15;:46:::2;:::i;:::-;11584:5;:22;;;11515:235;11904:86;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;11904:86:0::2;::::0;::::2;::::0;11931:30;;11446:435;;-1:-1:-1;11446:435:0;;-1:-1:-1;11904:86:0::2;::::0;11973:15;11904:11:::2;:86::i;:::-;-1:-1:-1::0;;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;-1:-1:-1;5938:6061:0;;;;-1:-1:-1;5938:6061:0;;-1:-1:-1;;;;;;;5938:6061:0:o;11241:758:1:-;11388:18;11408:19;11445:4;11442:441;;;11467:6;11464:185;;;11502:50;11528:9;11539:5;11546;11502:25;:50::i;:::-;11474:78;;-1:-1:-1;11474:78:1;-1:-1:-1;11442:441:1;;11464:185;11600:49;11626:9;11637:5;11644:4;11600:25;:49::i;11442:441::-;11690:6;11687:185;;;11725:49;11751:9;11762:5;11769:4;11725:25;:49::i;11687:185::-;11822:50;11848:9;11859:5;11866;11822:25;:50::i;:::-;11794:78;;-1:-1:-1;11794:78:1;-1:-1:-1;11687:185:1;11901:9;;:41;;-1:-1:-1;;;11901:41:1;;-1:-1:-1;;;;;11901:9:1;;;;:18;;:41;;11920:9;;11931:10;;11901:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11952:10:1;;:39;;-1:-1:-1;;;11952:39:1;;-1:-1:-1;;;;;11952:10:1;;;;:15;;:39;;11968:9;;11979:11;;11952:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11241:758;;;;;;;:::o;18628:815:0:-;833:5;;18832:15;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;19021:47:::2;:9;19035:10;19047:9:::0;19058;19021:13:::2;:47::i;:::-;18988:80;;19108:8;:20;;;19089:16;-1:-1:-1::0;;;;;19089:39:0::2;;:81;;19154:16;-1:-1:-1::0;;;;;19089:81:0::2;;;;19131:8;:20;;;19089:81;19079:91;;19209:8;:20;;;19190:16;-1:-1:-1::0;;;;;19190:39:0::2;;:81;;19255:16;-1:-1:-1::0;;;;;19190:81:0::2;;;;19232:8;:20;;;19190:81;19180:91:::0;-1:-1:-1;19286:11:0;;19282:73:::2;;19337:7;19313:8;:20;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19282:73:0::2;19368:11:::0;;19364:73:::2;;19419:7;19395:8;:20;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19364:73:0::2;-1:-1:-1::0;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;18628:815;;;;-1:-1:-1;18628:815:0;-1:-1:-1;;;;18628:815:0:o;13376:958::-;833:5;;13541:22;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;;13604:14;13583:46:::2;::::0;::::2;::::0;:37:::2;::::0;-1:-1:-1;;;;;13604:14:0::2;13583:12;:37::i;:::-;:46;;::::0;13575:94:::2;;;::::0;-1:-1:-1;;;13575:94:0;;20937:2:82;13575:94:0::2;::::0;::::2;20919:21:82::0;20976:2;20956:18;;;20949:30;21015:34;20995:18;;;20988:62;-1:-1:-1;;;21066:18:82;;;21059:33;21109:19;;13575:94:0::2;20735:399:82::0;13575:94:0::2;13681:30;13714:41;13728:10;13740:5:::0;13747:7:::2;13740:5:::0;13753:1:::2;13747:7;:::i;:::-;13714:9;::::0;:41;;:13:::2;:41::i;:::-;13681:74:::0;-1:-1:-1;13766:47:0::2;13787:15;13795:6:::0;13787:15:::2;:::i;:::-;13766:8:::0;;13804:5;13811:1:::2;13766:20;:47::i;:::-;13825:59;13854:5:::0;13861:15:::2;13869:6:::0;13861:15:::2;:::i;:::-;13825:5;::::0;:59;13878:5;13825:28:::2;:59::i;:::-;13896:21;13920:5;:29;;13940:9;13920:29;;;13927:10;13920:29;13896:53;;13985:5;:342;;14179:148;14215:21;14228:7;:5:::0;14234:1:::2;14228:7;:::i;14215:21::-;-1:-1:-1::0;;;;;14179:148:0::2;14255:19;14268:5;14255:12;:19::i;:::-;-1:-1:-1::0;;;;;14179:148:0::2;14301:6;-1:-1:-1::0;;;;;14293:15:0::2;14179:18;:148::i;:::-;13985:342;;;14005:149;14042:21;14055:7;:5:::0;14061:1:::2;14055:7;:::i;14042:21::-;-1:-1:-1::0;;;;;14005:149:0::2;14082:19;14095:5;14082:12;:19::i;:::-;-1:-1:-1::0;;;;;14005:149:0::2;14128:6;-1:-1:-1::0;;;;;14120:15:0::2;14005:19;:149::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;13968:359;13376:958;-1:-1:-1;;;;;;;13376:958:0:o;4623:246:3:-;4775:9;;4786;;4735:67;;-1:-1:-1;;;4735:67:3;;;;;21408:25:82;;;4691:7:3;21449:18:82;;;21442:34;;;21492:18;;;21485:34;;;;21535:18;;;21528:34;;;;4797:4:3;21578:19:82;;;21571:51;4691:7:3;;4735:11;;:28;;21380:19:82;;4735:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4709:93:3;-1:-1:-1;4855:6:3;4820:32;4709:93;914:4:1;4820:22:3;:32::i;:::-;:41;;;;:::i;:::-;4813:48;4623:246;-1:-1:-1;;;4623:246:3:o;12005:1365:0:-;833:5;;12169:22;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;12327:5;:46;::::2;;;-1:-1:-1::0;12359:5:0::2;:14:::0;-1:-1:-1;;;;;12359:14:0::2;12336:19;12349:5:::0;12336:12:::2;:19::i;:::-;-1:-1:-1::0;;;;;12336:37:0::2;;;12327:46;12324:168;;;12375:24;::::0;-1:-1:-1;;;12375:24:0;;22085:2:82;12375:24:0::2;::::0;::::2;22067:21:82::0;22124:2;22104:18;;;22097:30;-1:-1:-1;;;22143:18:82;;;22136:44;22197:18;;12375:24:0::2;21883:338:82::0;12324:168:0::2;12419:5;12418:6;:47;;;;-1:-1:-1::0;12451:5:0::2;:14:::0;-1:-1:-1;;;;;12451:14:0::2;12428:19;12441:5:::0;12428:12:::2;:19::i;:::-;-1:-1:-1::0;;;;;12428:37:0::2;;;12418:47;12415:77;;;12467:25;::::0;-1:-1:-1;;;12467:25:0;;22428:2:82;12467:25:0::2;::::0;::::2;22410:21:82::0;22467:2;22447:18;;;22440:30;-1:-1:-1;;;22486:18:82;;;22479:45;22541:18;;12467:25:0::2;22226:339:82::0;12415:77:0::2;12504:30;12537:40;12551:9:::0;12562:5;12569:7:::2;12562:5:::0;12575:1:::2;12569:7;:::i;12537:40::-;12504:73:::0;-1:-1:-1;12599:31:0::2;:5;12617::::0;12624;12599:17:::2;:31::i;:::-;12588:42:::0;-1:-1:-1;12641:53:0::2;:8:::0;12669:6;12678:5;12588:42;12641:20:::2;:53::i;:::-;12706:59;:5;12736::::0;12750:6;12759:5;12706:28:::2;:59::i;:::-;12843:21;12867:5;:29;;12887:9;12867:29;;;12874:10;12867:29;12843:53;;12924:5;:385;;13145:164;13185:21;13198:7;:5:::0;13204:1:::2;13198:7;:::i;13185:21::-;-1:-1:-1::0;;;;;13145:164:0::2;13229:19;13242:5;13229:12;:19::i;:::-;-1:-1:-1::0;;;;;13145:164:0::2;13279:6;-1:-1:-1::0;;;;;13271:15:0::2;13145:18;:164::i;:::-;12924:385;;;12948:165;12989:21;13002:7;:5:::0;13008:1:::2;13002:7;:::i;12989:21::-;-1:-1:-1::0;;;;;12948:165:0::2;13033:19;13046:5;13033:12;:19::i;:::-;-1:-1:-1::0;;;;;12948:165:0::2;13083:6;-1:-1:-1::0;;;;;13075:15:0::2;12948:19;:165::i;:::-;12907:402;;13321:40;;;;;;;;;;;;;;-1:-1:-1::0;;;13321:40:0::2;;::::0;13346:14:::2;13321:11;:40::i;:::-;-1:-1:-1::0;;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;12005:1365;;;;-1:-1:-1;12005:1365:0;-1:-1:-1;;;12005:1365:0:o;24673:137::-;24730:6;2184:4;24762:28;:5;2026:4;24762:16;:28::i;:::-;24761:40;;;;:::i;:::-;24747:55;24673:137;-1:-1:-1;;24673:137:0:o;2306:2503:1:-;2458:20;2480:21;2516:6;2513:2289;;;2592:149;2615:10;2644:4;2667:8;2694:10;2723:4;;2592:5;:149::i;:::-;2560:181;;-1:-1:-1;2560:181:1;-1:-1:-1;2760:10:1;2756:377;;;2772:58;2784:10;2796:13;2811:12;2825:4;2772:11;:58::i;:::-;2513:2289;;2756:377;2868:11;2882:9;:7;:9::i;:::-;2910:60;;-1:-1:-1;;;2910:60:1;;2868:23;;-1:-1:-1;2925:10:1;;2910:40;;:60;;2951:12;;2965:4;;;;2910:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:3;3010:12;:18;;;;:::i;:::-;2997:9;:7;:9::i;:::-;:31;;2989:50;;;;-1:-1:-1;;;2989:50:1;;23493:2:82;2989:50:1;;;23475:21:82;23532:1;23512:18;;;23505:29;-1:-1:-1;;;23550:18:82;;;23543:36;23596:18;;2989:50:1;23291:329:82;2989:50:1;3058:10;;-1:-1:-1;;;;;3058:10:1;:15;3074:27;;;;3085:4;3074:27;:::i;:::-;3103:13;3058:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2850:283;2513:2289;;;3240:153;3271:4;3295:5;3319:8;3346:10;3375:4;;3240:5;:153::i;:::-;3208:185;;-1:-1:-1;3208:185:1;-1:-1:-1;3408:6:1;3417:9;:7;:9::i;:::-;3408:18;;3441:40;;;;;;;;;;;;;;-1:-1:-1;;;3441:40:1;;;3463:1;3467:13;3441:11;:40::i;:::-;3521:9;:7;:9::i;:::-;3504:13;:26;;3496:46;;;;-1:-1:-1;;;3496:46:1;;24374:2:82;3496:46:1;;;24356:21:82;24413:1;24393:18;;;24386:29;-1:-1:-1;;;24431:18:82;;;24424:37;24478:18;;3496:46:1;24172:330:82;3496:46:1;3588:13;;3765:33;:12;914:4;3765:23;:33::i;:::-;:49;;;;:::i;:::-;3749:65;;4069:10;4065:542;;;4081:59;4093:10;4105:12;4119:13;4134:5;4081:11;:59::i;:::-;4065:542;;;4177:11;4191:9;:7;:9::i;:::-;4219:61;;-1:-1:-1;;;4219:61:1;;4177:23;;-1:-1:-1;4234:10:1;;4219:40;;:61;;4260:13;;4275:4;;;;4219:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4336:3;4320:13;:19;;;;:::i;:::-;4307:9;:7;:9::i;:::-;:32;;4299:51;;;;-1:-1:-1;;;4299:51:1;;23493:2:82;4299:51:1;;;23475:21:82;23532:1;23512:18;;;23505:29;-1:-1:-1;;;23550:18:82;;;23543:36;23596:18;;4299:51:1;23291:329:82;4299:51:1;4369:12;;-1:-1:-1;;;;;4369:12:1;:17;4387:26;;;;4398:4;4387:26;:::i;:::-;4415:12;4369:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:20;4556:35;;4159:448;4065:542;3157:1645;;2513:2289;2306:2503;;;;;;;;:::o;14456:1090:0:-;833:5;;14603:18;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;14653:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;14653:27:0;::::2;::::0;;::::2;-1:-1:-1::0;;;14653:27:0;::::2;::::0;::::2;;::::0;::::2;::::0;-1:-1:-1;;;14653:27:0;::::2;990:13:::1;14653:27:::0;;::::2;::::0;;;;;;;-1:-1:-1;;;14653:27:0;::::2;::::0;::::2;;;::::0;;;;-1:-1:-1;;;14653:27:0;::::2;::::0;;::::2;;;::::0;;;;-1:-1:-1;;;14653:27:0;::::2;::::0;;::::2;::::0;;;;;990:6;14725:40:::2;::::0;14739:9;;14750:5;;14757:7:::2;::::0;14750:5;;14757:7:::2;:::i;14725:40::-;14692:73;;14825:5;14783:47;;:38;14804:6;:15;;;-1:-1:-1::0;;;;;14796:24:0::2;14783:12;:38::i;:::-;:47;;;14775:73;;;::::0;-1:-1:-1;;;14775:73:0;;24709:2:82;14775:73:0::2;::::0;::::2;24691:21:82::0;24748:2;24728:18;;;24721:30;-1:-1:-1;;;24767:18:82;;;24760:43;24820:18;;14775:73:0::2;24507:337:82::0;14775:73:0::2;14921:21;14945:5;:41;;14971:15;::::0;::::2;::::0;-1:-1:-1;;;14971:15:0;::::2;-1:-1:-1::0;;;;;14971:15:0::2;14945:41;;;14953:15;::::0;::::2;::::0;-1:-1:-1;;;;;14953:15:0::2;14945:41;14921:65:::0;-1:-1:-1;15005:54:0::2;15026:22;14921:65:::0;15026:22:::2;:::i;:::-;15005:8:::0;;15050:5;15057:1:::2;15005:20;:54::i;:::-;15071:66;15100:5:::0;15107:22:::2;15115:13:::0;15107:22:::2;:::i;:::-;15071:5;::::0;:66;15131:5;15071:28:::2;:66::i;:::-;15210:121;15243:21;15256:7;:5:::0;15262:1:::2;15256:7;:::i;15243:21::-;-1:-1:-1::0;;;;;15210:121:0::2;15278:6;:15;;;-1:-1:-1::0;;;;;15210:121:0::2;15308:13;-1:-1:-1::0;;;;;15210:121:0::2;:19;:121::i;:::-;15196:135;;15414:123;15446:6;:15;;;-1:-1:-1::0;;;;;15414:123:0::2;15476:19;15489:5;15476:12;:19::i;:::-;-1:-1:-1::0;;;;;15414:123:0::2;15510:13;-1:-1:-1::0;;;;;15414:123:0::2;:18;:123::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;15401:136;14456:1090;;-1:-1:-1;14456:1090:0;;-1:-1:-1;;;;;;14456:1090:0:o;3394:1132:3:-;3566:21;3606:10;-1:-1:-1;;;;;3620:10:3;3606:24;;3598:49;;;;-1:-1:-1;;;3598:49:3;;25051:2:82;3598:49:3;;;25033:21:82;25090:2;25070:18;;;25063:30;-1:-1:-1;;;25109:18:82;;;25102:42;25161:18;;3598:49:3;24849:336:82;3598:49:3;3700:21;3724:46;3750:19;3761:8;3750:9;:19;:::i;:::-;3725:12;3727:10;3725:1;:12;:::i;:::-;3724:25;;:46::i;:::-;3700:70;-1:-1:-1;3781:9:3;3793:48;3700:70;3794:20;3805:9;3794:8;:20;:::i;3793:48::-;3781:60;-1:-1:-1;3930:11:3;:28;3959;:10;3981:5;3959:21;:28::i;:::-;3930:80;;-1:-1:-1;;;;;;3930:80:3;;;;;;;;;;21408:25:82;;;;3988:1:3;21449:18:82;;;21442:34;21492:18;;;21485:34;;;21535:18;;;21528:34;;;4004:4:3;21578:19:82;;;21571:51;21380:19;;3930:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3912:12:3;3911:99;4021:1;:13;;;4251:10;4214:34;:13;4239:8;4214:24;:34::i;:::-;4183:28;:10;4205:5;4183:21;:28::i;:::-;4134:12;;:33;;4158:8;4134:23;:33::i;:::-;:77;;;;:::i;:::-;:114;;;;:::i;:::-;:127;;;;:::i;:::-;4118:143;-1:-1:-1;4318:46:3;4339:23;1767:4;4360:1;4339:20;:23::i;:::-;2417:9:0;:15;;-1:-1:-1;;;;;;2417:15:0;-1:-1:-1;;;;;2417:15:0;;;;;;;;;;2341:99;4318:46:3;4375:19;4392:1;;4375:16;:19::i;:::-;4405:61;4425:22;4438:8;4425:12;:22::i;:::-;23470:17:0;;;;;;:10;:17;;;;;:23;;-1:-1:-1;;;;;;23470:23:0;-1:-1:-1;;;;;23470:23:0;;;23396:105;4405:61:3;4477:41;4495:22;4508:8;4495:12;:22::i;:::-;23565:5:0;:28;;;;;;-1:-1:-1;;;23565:28:0;-1:-1:-1;;;;23565:28:0;;;;;;;;;23506:96;4477:41:3;3588:938;;3394:1132;;;;;;:::o;26521:234:0:-;26581:9;26610:1;26606;:5;;;26602:147;;;-1:-1:-1;;;;;26635:25:0;;26652:2;26653:1;26652:2;:::i;:::-;26640:15;;:1;:15;:::i;:::-;26636:19;;;-1:-1:-1;;;;;26635:25:0;;26627:40;;;;-1:-1:-1;;;26627:40:0;;25770:2:82;26627:40:0;;;25752:21:82;25809:1;25789:18;;;25782:29;-1:-1:-1;;;25827:18:82;;;25820:32;25869:18;;26627:40:0;25568:325:82;26627:40:0;26602:147;;;-1:-1:-1;;;;;26706:25:0;;26711:14;26723:1;26730;26711:14;:::i;:::-;26707:18;;;-1:-1:-1;;;;;26706:25:0;;;26698:40;;;;-1:-1:-1;;;26698:40:0;;26100:2:82;26698:40:0;;;26082:21:82;26139:1;26119:18;;;26112:29;-1:-1:-1;;;26157:18:82;;;26150:32;26199:18;;26698:40:0;25898:325:82;15758:1078:0;833:5;;15899:21;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;15964:40:::2;::::0;15978:9;;15989:5;;15996:7:::2;::::0;15989:5;;15996:7:::2;:::i;15964:40::-;15931:73:::0;-1:-1:-1;16015:16:0::2;16034:31;:5;16052::::0;16059;16034:17:::2;:31::i;:::-;16015:50;;16076:15;16094:5;:48;;16123:19:::0;;-1:-1:-1;;;;;16123:19:0::2;16094:48;;;16101:19:::0;;-1:-1:-1;;;16101:19:0;::::2;-1:-1:-1::0;;;;;16101:19:0::2;16094:48;16076:66;;16172:7;-1:-1:-1::0;;;;;16161:18:0::2;:8;-1:-1:-1::0;;;;;16161:18:0::2;;16153:50;;;::::0;-1:-1:-1;;;16153:50:0;;26430:2:82;16153:50:0::2;::::0;::::2;26412:21:82::0;26469:2;26449:18;;;26442:30;-1:-1:-1;;;26488:18:82;;;26481:49;26547:18;;16153:50:0::2;26228:343:82::0;16153:50:0::2;16214:11;16228:5;:40;;16253:15;::::0;::::2;::::0;-1:-1:-1;;;16253:15:0;::::2;-1:-1:-1::0;;;;;16253:15:0::2;16228:40;;;16235:15;::::0;::::2;::::0;-1:-1:-1;;;;;16235:15:0::2;16228:40;16214:54;;16327:5;16324:409;;;16350:145;16386:21;16399:7;:5:::0;16405:1:::2;16399:7;:::i;16386:21::-;-1:-1:-1::0;;;;;16350:145:0::2;16426:19;16439:5;16426:12;:19::i;16350:145::-;16334:161;;16324:409;;;16587:146;16624:21;16637:7;:5:::0;16643:1:::2;16637:7;:::i;16624:21::-;-1:-1:-1::0;;;;;16587:146:0::2;16664:19;16677:5;16664:12;:19::i;:::-;-1:-1:-1::0;;;;;16587:146:0::2;16710:3;-1:-1:-1::0;;;;;16702:12:0::2;16587:19;:146::i;:::-;16571:162;;16324:409;16745:44;16766:12;16774:3:::0;16766:12:::2;:::i;:::-;16745:8:::0;;16780:5;16787:1:::2;16745:20;:44::i;:::-;-1:-1:-1::0;;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;-1:-1:-1;15758:1078:0;;;-1:-1:-1;;;;15758:1078:0:o;2446:84::-;833:5;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;2508:5:::1;:14:::0;;-1:-1:-1;;;;;;2508:14:0::1;-1:-1:-1::0;;;;;2508:14:0;;;::::1;::::0;;;::::1;::::0;;2446:84::o;3389:149::-;3467:7;3500:29;:5;3523;3500:22;:29::i;:::-;-1:-1:-1;;;;;3492:38:0;;3389:149;-1:-1:-1;;;3389:149:0:o;4908:1657:1:-;5060:20;5082:21;5139:6;5136:1423;;;5192:178;5215:10;5243:5;5267:8;5323:10;5352:4;;5192:5;:178::i;:::-;5160:210;;-1:-1:-1;5160:210:1;-1:-1:-1;5390:10:1;5386:170;;;5402:58;5414:10;5426:13;5441:12;5455:4;5402:11;:58::i;5386:170::-;5480:76;5492:27;;;;5503:4;5492:27;:::i;:::-;5521:13;5536:12;5550:4;5480:11;:76::i;5136:1423::-;5784:149;5807:10;5836:4;5859:8;5886:10;5915:4;;5784:5;:149::i;:::-;5752:181;;-1:-1:-1;5752:181:1;-1:-1:-1;5752:181:1;;6066:34;5752:181;914:4;6066:24;:34::i;:::-;:49;;;;:::i;:::-;6051:64;;6135:10;6131:257;;;6147:58;6159:10;6171:12;6184:13;6199:5;6147:11;:58::i;:::-;6131:257;;;6242:76;6254:27;;;;6265:4;6254:27;:::i;:::-;6283:12;6297:13;6311:5;6242:11;:76::i;:::-;6353:19;6337:35;;6131:257;5610:949;4908:1657;;;;;;;;:::o;6704:1454::-;6845:22;6869:15;6899:6;6896:1255;;;6985:205;7018:9;7045:5;7077:70;7096:21;7109:7;7045:5;7115:1;7109:7;:::i;7096:21::-;-1:-1:-1;;;;;7077:70:1;7119:19;7132:5;7119:12;:19::i;:::-;-1:-1:-1;;;;;7077:70:1;7140:6;7077:18;:70::i;:::-;7167:5;6985:15;:205::i;:::-;7205:9;;:64;;-1:-1:-1;;;7205:64:1;;-1:-1:-1;;;;;26834:15:82;;;7205:64:1;;;26816:34:82;7247:4:1;26866:18:82;;;26859:43;26918:18;;;26911:34;;;6957:233:1;;-1:-1:-1;6957:233:1;;-1:-1:-1;7205:9:1;;;;;:22;;26751:18:82;;7205:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6896:1255;;;7469:205;7502:9;7530:5;7561:70;7581:21;7594:7;7530:5;7600:1;7594:7;:::i;7581:21::-;-1:-1:-1;;;;;7561:70:1;7604:19;7617:5;7604:12;:19::i;:::-;-1:-1:-1;;;;;7561:70:1;7624:6;7561:19;:70::i;:::-;7652:4;7469:15;:205::i;:::-;7441:233;;-1:-1:-1;7441:233:1;-1:-1:-1;7756:24:1;7800:210;7840:21;7853:7;:5;7859:1;7853:7;:::i;7840:21::-;-1:-1:-1;;;;;7800:210:1;7884:19;7897:5;7884:12;:19::i;:::-;-1:-1:-1;;;;;7800:210:1;7934:6;7800:18;:210::i;:::-;7783:227;;:14;:227;:::i;:::-;8025:9;;:66;;-1:-1:-1;;;8025:66:1;;-1:-1:-1;;;;;26834:15:82;;;8025:66:1;;;26816:34:82;8067:4:1;26866:18:82;;;26859:43;26918:18;;;26911:34;;;7756:254:1;;-1:-1:-1;8025:9:1;;;:22;;26751:18:82;;8025:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8123:16:1;-1:-1:-1;6896:1255:1;6704:1454;;;;;;;:::o;4907:241:3:-;5040:5;;-1:-1:-1;;;;;5040:5:3;5026:10;:19;5018:40;;;;-1:-1:-1;;;5018:40:3;;;;;;;:::i;:::-;5070:10;;:33;;-1:-1:-1;;;5070:33:3;;-1:-1:-1;;;;;5070:10:3;;;;:15;;:33;;5086:8;;5096:6;;5070:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5135:6;5113:18;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;4907:241:3:o;2625:478:0:-;2757:4;;2805:40;2819:9;2830:5;2837:7;2830:5;2843:1;2837:7;:::i;2805:40::-;2772:73;-1:-1:-1;2856:16:0;2875:31;:5;2893;2900;2875:17;:31::i;:::-;2856:50;;2917:15;2935:5;:48;;2964:19;;-1:-1:-1;;;;;2964:19:0;2935:48;;;2942:19;;-1:-1:-1;;;2942:19:0;;-1:-1:-1;;;;;2942:19:0;2935:48;2917:66;;2994:11;3008:5;:40;;3033:15;;;;-1:-1:-1;;;3033:15:0;;-1:-1:-1;;;;;3033:15:0;3008:40;;;3015:15;;;;-1:-1:-1;;;;;3015:15:0;3008:40;2994:54;;3071:1;3067:3;-1:-1:-1;;;;;3067:5:0;;:27;;;;;3087:7;-1:-1:-1;;;;;3076:18:0;:8;-1:-1:-1;;;;;3076:18:0;;3067:27;3059:36;2625:478;-1:-1:-1;;;;;;;;2625:478:0:o;17830:792::-;833:5;;17996:7;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;18125:220:::2;::::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;18125:220:0;::::2;::::0;;::::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;;;;;;;990:6;;;;18096:263:::2;::::0;18125:220;;;18298:15:::2;18306:6:::0;18298:15:::2;:::i;:::-;18125:220;;::::0;;18096:15:::2;:263::i;:::-;18026:333;;;;;;18382:1;18374:7;:9;:23;;;;18396:1;18387:7;:10;18374:23;18371:209;;;18500:7;18477:8;:20;;;:30;;;;:::i;:::-;18548:7;18525:8;:20;;;:30;;;;:::i;:::-;18435:20;::::0;::::2;18412:157:::0;18413:20:::2;::::0;::::2;18412:157:::0;18371:209:::2;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;18597:7;;;;-1:-1:-1;17830:792:0;-1:-1:-1;;;;;;17830:792:0:o;23684:177::-;23768:7;23798:2;23794;:6;;23786:28;;;;-1:-1:-1;;;23786:28:0;;;;;;;:::i;:::-;23832:21;23851:1;23833:5;23836:2;23833;:5;:::i;:::-;23832:18;;:21::i;:::-;23825:28;23684:177;-1:-1:-1;;;;23684:177:0:o;24486:129::-;24542:7;24566:41;24567:27;2026:4;24567:14;;;:27;:::i;:::-;24566:39;:41::i;5789:141:3:-;5835:10;-1:-1:-1;;;;;5849:10:3;5835:24;;5827:45;;;;-1:-1:-1;;;5827:45:3;;;;;;;:::i;:::-;2417:9:0;:15;;-1:-1:-1;;;;;;2417:15:0;;;5909:13:3;23666:4:0;23648:22;;-1:-1:-1;;;;23648:22:0;-1:-1:-1;;;23648:22:0;;;23607:71;5909:13:3;5789:141::o;24998:138:0:-;25079:7;25104:24;25126:1;25105:10;25114:1;25105:8;:10;:::i;:::-;25104:21;;:24::i;12064:1168:1:-;12222:6;12219:1007;;;12243:23;12268:293;12302:9;12330:5;12354:165;:153;12394:21;12407:7;12330:5;12413:1;12407:7;:::i;12354:153::-;:163;:165::i;:::-;12538:5;12268:16;:293::i;:::-;12615:9;;:46;;-1:-1:-1;;;12615:46:1;;12243:318;;-1:-1:-1;;;;;;12615:9:1;;:18;;:46;;12634:9;;12243:318;;12615:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12229:444;12219:1007;;;12701:11;12715:83;:71;12735:21;12748:7;:5;12754:1;12748:7;:::i;12735:21::-;-1:-1:-1;;;;;12715:71:1;12758:19;12771:5;12758:12;:19::i;:::-;-1:-1:-1;;;;;12715:71:1;12779:6;12715:19;:71::i;:83::-;12701:97;;12841:130;12875:9;12903:5;12927:3;12949:4;12841:16;:130::i;:::-;-1:-1:-1;13091:9:1;;-1:-1:-1;;;;;13091:9:1;:18;13110:9;13147:67;13166:21;13179:7;:5;13091:9;13179:7;:::i;13166:21::-;-1:-1:-1;;;;;13147:67:1;13189:19;13202:5;13189:12;:19::i;:::-;-1:-1:-1;;;;;13147:67:1;13210:3;-1:-1:-1;;;;;13147:67:1;:18;:67::i;:::-;13138:76;;:6;:76;:::i;:::-;13091:124;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12687:539;12219:1007;12064:1168;;;;:::o;5428:253:3:-;5503:10;-1:-1:-1;;;;;5517:10:3;5503:24;;5495:45;;;;-1:-1:-1;;;5495:45:3;;;;;;;:::i;:::-;-1:-1:-1;;5555:6:3;:27;5551:122;;5584:9;;-1:-1:-1;;;;;5584:9:3;:18;5603:7;5612:9;:7;:9::i;:::-;5584:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5428:253;;:::o;5551:122::-;5638:9;;:35;;-1:-1:-1;;;5638:35:3;;-1:-1:-1;;;;;5638:9:3;;;;:18;;:35;;5657:7;;5666:6;;5638:35;;;:::i;5551:122::-;5428:253;;:::o;26760:231:0:-;26834:7;26860:5;:123;;26943:33;26957:2;26961:5;26968:7;26961:5;26974:1;26968:7;:::i;26943:33::-;:40;;;-1:-1:-1;;;26943:40:0;;-1:-1:-1;;;;;26943:40:0;26860:123;;;26884:33;26898:2;26902:5;26909:7;26902:5;26915:1;26909:7;:::i;26884:33::-;:40;;;-1:-1:-1;;;;;26884:40:0;;26760:231;-1:-1:-1;;;;26760:231:0:o;13303:999:1:-;13463:6;13460:836;;;13484:23;13510:270;13544:9;13572:5;13596:143;:131;13645:21;13658:7;13572:5;13664:1;13658:7;:::i;13596:143::-;13758:4;13510:16;:270::i;:::-;13835:10;;:43;;-1:-1:-1;;;13835:43:1;;13484:296;;-1:-1:-1;;;;;;13835:10:1;;:15;;:43;;13851:9;;13484:296;;13835:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13470:420;13460:836;;;13952:267;13986:9;14014:5;14038:143;:131;14087:21;14100:7;14014:5;14106:1;14100:7;:::i;14087:21::-;-1:-1:-1;;;;;14079:30:1;14140:19;14153:5;14140:12;:19::i;:::-;-1:-1:-1;;;;;14132:28:1;14162:6;14038:19;:131::i;13952:267::-;-1:-1:-1;14248:12:1;;:36;;-1:-1:-1;;;14248:36:1;;-1:-1:-1;;;;;14248:12:1;;;;:17;;:36;;14266:9;;14277:6;;14248:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13303:999;;;;:::o;10296:935::-;10420:21;10456:6;10453:772;;;10555:41;10572:9;10583:5;10590:4;10555:16;:41::i;:::-;10611:9;;:44;;-1:-1:-1;;;10611:44:1;;10539:57;;-1:-1:-1;;;;;;10611:9:1;;:18;;:44;;10630:9;;10539:57;;10611:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10453:772;;;10694:11;10708:31;10715:9;10726:5;10733;10708:6;:31::i;:::-;10694:45;;10864:41;10881:9;10892:5;10899;10864:16;:41::i;:::-;10848:57;-1:-1:-1;11001:154:1;11049:21;11062:7;:5;11068:1;11062:7;:::i;11049:21::-;-1:-1:-1;;;;;11001:154:1;11101:19;11114:5;11101:12;:19::i;11001:154::-;10935:34;:13;914:4;10935:24;:34::i;:::-;:220;;;;:::i;:::-;11170:9;;:44;;-1:-1:-1;;;11170:44:1;;10919:236;;-1:-1:-1;;;;;;11170:9:1;;:18;;:44;;11189:9;;10919:236;;11170:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10680:545;10296:935;;;;;:::o;25265:293:0:-;25330:7;25348:12;25363:22;25376:8;25363:12;:22::i;:::-;25348:37;;25473:6;25472:7;:32;;;;-1:-1:-1;25484:14:0;;;;:8;:14;:::i;:::-;:19;25472:32;25471:79;;25531:19;25544:5;25531:12;:19::i;:::-;25471:79;;;25507:21;25520:7;25526:1;25520:5;:7;:::i;25507:21::-;-1:-1:-1;;;;;25464:86:0;;25265:293;-1:-1:-1;;;;25265:293:0:o;2411:814:3:-;2583:10;-1:-1:-1;;;;;2597:10:3;2583:24;;2575:49;;;;-1:-1:-1;;;2575:49:3;;25051:2:82;2575:49:3;;;25033:21:82;25090:2;25070:18;;;25063:30;-1:-1:-1;;;25109:18:82;;;25102:42;25161:18;;2575:49:3;24849:336:82;2575:49:3;1767:4;2647:21;2664:3;2666:1;2664;:3;:::i;2647:21::-;:33;;;;:::i;:::-;2635:9;:45;2703:37;2736:3;2738:1;2736;:3;:::i;:::-;2714:9;;2704:19;;1767:4;2704:19;:::i;2703:37::-;2691:9;:49;2886:11;:28;2915:19;:1;2928:5;2915:12;:19::i;:::-;2939:9;;2950;;2886:80;;-1:-1:-1;;;;;;2886:80:3;;;;;;;;;;21408:25:82;;;;2936:1:3;21449:18:82;;;21442:34;21492:18;;;21485:34;;;;21535:18;;;21528:34;2961:4:3;21578:19:82;;;21571:51;21380:19;;2886:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2881:1;2866:100;2867:12;2866:100;2993:11;:28;3022:25;3035:11;3041:5;3035;:11;:::i;:::-;3022:1;;:12;:25::i;:::-;3052:9;;3063;;2993:85;;-1:-1:-1;;;;;;2993:85:3;;;;;;;;;;21408:25:82;;;;3049:1:3;21449:18:82;;;21442:34;21492:18;;;21485:34;;;;21535:18;;;21528:34;3073:4:3;21578:19:82;;;21571:51;21380:19;;2993:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:10;2976:102;-1:-1:-1;3176:9:3;;3134:54;;3155:31;;1767:4;;3155:20;:31::i;3134:54::-;3199:19;3216:1;;3199:16;:19::i;:::-;2411:814;;;;;:::o;17219:605:0:-;833:5;;17417:15;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;-1:-1:-1;;;;;17469:10:0;::::2;17461:31;;;::::0;-1:-1:-1;;;17461:31:0;;27948:2:82;17461:31:0::2;::::0;::::2;27930:21:82::0;27987:1;27967:18;;;27960:29;-1:-1:-1;;;28005:18:82;;;27998:38;28053:18;;17461:31:0::2;27746:331:82::0;17461:31:0::2;17529:262;17558:219;;;;;;;;17604:9;-1:-1:-1::0;;;;;17558:219:0::2;;;;;17645:10;17558:219;;;;;;17686:10;17558:219;;;;;;17738:6;17558:219;;;;::::0;17529:15:::2;:262::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;17504:287;;;;-1:-1:-1;17219:605:0;-1:-1:-1;;;;;;;;17219:605:0:o;24102:175::-;24186:7;24216:2;24212;:6;;24204:28;;;;-1:-1:-1;;;24204:28:0;;;;;;;:::i;:::-;24250:19;24263:5;24266:2;24263;:5;:::i;:::-;24250:1;;:12;:19::i;24816:177::-;24890:7;24911:1;24914;24911:4;24908:33;;-1:-1:-1;;;24917:24:0;;24908:33;24959:26;24983:1;24960:10;24969:1;24960:8;:10;:::i;:::-;24959:23;;:26::i;25564:206::-;25654:7;25676:6;25672:90;;;25710:6;25699:7;:5;25705:1;25699:7;:::i;:::-;25691:16;;:25;;;;:::i;:::-;25684:32;;;;25672:90;25739:23;25756:6;25739:14;;;:23;:::i;5155:267:3:-;5296:5;;-1:-1:-1;;;;;5296:5:3;5282:10;:19;5274:40;;;;-1:-1:-1;;;5274:40:3;;;;;;;:::i;:::-;5329:4;5325:90;;;5335:10;;:31;;-1:-1:-1;;;5335:31:3;;-1:-1:-1;;;;;5335:10:3;;;;:15;;:31;;5351:6;;5359;;5335:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5584:38;5428:253;;:::o;5325:90::-;5382:12;;:33;;-1:-1:-1;;;5382:33:3;;-1:-1:-1;;;;;5382:12:3;;;;:17;;:33;;5400:6;;5408;;5382:33;;;:::i;3548:135:0:-;3618:7;3643:32;:5;3661;3668:6;3643:17;:32::i;24282:198::-;24365:7;24395:2;24391;:6;;24383:28;;;;-1:-1:-1;;;24383:28:0;;;;;;;:::i;:::-;24429:43;24442:29;24469:1;24462:5;24465:2;24462;:5;:::i;:::-;24461:9;;;;:::i;:::-;24443:5;24446:2;24443;:5;:::i;9239:1051:1:-;9381:22;9405:15;9435:6;9432:852;;;9543:205;9576:9;9604:5;9636:70;9656:21;9669:7;9604:5;9675:1;9669:7;:::i;9543:205::-;9824:10;;:42;;-1:-1:-1;;;9824:42:1;;9515:233;;-1:-1:-1;9515:233:1;;-1:-1:-1;;;;;;9824:10:1;;:15;;:42;;9840:9;;9515:233;;9824:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9432:852;;;9978:205;10011:9;10039:5;10070:70;10090:21;10103:7;10039:5;10109:1;10103:7;:::i;9978:205::-;10235:12;;:36;;-1:-1:-1;;;10235:36:1;;9950:233;;-1:-1:-1;9950:233:1;;-1:-1:-1;;;;;;10235:12:1;;:17;;:36;;10253:9;;10264:6;;10235:36;;;:::i;8164:934::-;8286:21;8322:6;8319:772;;;8343:21;8367:42;8384:9;8395:5;8402;8367:16;:42::i;:::-;8502:10;;:41;;-1:-1:-1;;;8502:41:1;;8343:66;;-1:-1:-1;;;;;;8502:10:1;;:15;;:41;;8518:9;;8343:66;;8502:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8329:235;8319:772;;;8603:12;;-1:-1:-1;;;;;8603:12:1;:17;8621:9;8649:180;8690:21;8703:7;:5;8603:12;8703:7;:::i;8690:21::-;-1:-1:-1;;;;;8649:180:1;8734:19;8747:5;8734:12;:19::i;:::-;-1:-1:-1;;;;;8649:180:1;8776:31;8783:10;8795:5;8802:4;8776:6;:31::i;:::-;-1:-1:-1;;;;;8649:180:1;:19;:180::i;:::-;8603:244;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9038:41;9055:9;9066:5;9073:4;9038:16;:41::i;2535:84:0:-;833:5;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;2597:5:::1;:14:::0;;-1:-1:-1;;;;2579:32:0;::::1;-1:-1:-1::0;;;2597:14:0;;;::::1;;;2596:15;2579:32:::0;;::::1;;::::0;;2535:84::o;23867:229::-;23950:7;23981:2;23977;:6;;23969:28;;;;-1:-1:-1;;;23969:28:0;;;;;;;:::i;:::-;24015:11;:26;24042:30;24062:2;24066;24070:1;24042:19;:30::i;:::-;24074:1;24077:6;24081:1;24077:3;:6::i;:::-;24015:73;;-1:-1:-1;;;;;;24015:73:0;;;;;;;;;;28329:25:82;;;;28370:18;;;28363:34;;;;28413:18;;;28406:34;28456:18;;;28449:34;;;28301:19;;24015:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;901:127:46:-;962:59;1017:2;978:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;978:42:46;;;;;;;;;;;;;;-1:-1:-1;;;;;978:42:46;-1:-1:-1;;;978:42:46;;;962:15;:59::i;:::-;901:127;:::o;26173:97:0:-;26231:4;26254:3;26256:1;26254;:3;:::i;:::-;:7;;26173:97;-1:-1:-1;;;26173:97:0:o;39327:329::-;39500:10;;;39458:7;39500:10;;;;;;;;;;;39476:34;;;;;;;;;-1:-1:-1;;;;;39476:34:0;;;;;-1:-1:-1;;;39476:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39476:34:0;;-1:-1:-1;;;;;39476:34:0;;;;;-1:-1:-1;;;39476:34:0;;;;;;;;-1:-1:-1;;;39476:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39528:25;;:54;;-1:-1:-1;39557:22:0;;;;-1:-1:-1;;;;;39557:25:0;;39528:54;39521:62;;;;:::i;:::-;39626:4;:22;;;39601:4;:22;;;:47;;;;:::i;25918:140::-;25971:7;25996:4;;:53;;26028:21;2184:4;26047:1;26028:18;:21::i;25996:53::-;26002:23;26021:3;:1;26023;26021:3;:::i;:::-;2184:4;;26002:18;:23::i;25776:137::-;25822:7;25847:4;;:57;;25881:23;2184:4;25902:1;25881:20;:23::i;25847:57::-;25853:25;25874:3;:1;25876;25874:3;:::i;:::-;2184:4;;25853:20;:25::i;6548:139:46:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:46;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:46;-1:-1:-1;;;6628:51:46;;;6612:15;:68::i;5514:110::-;5560:57;5613:2;5576:40;;;;;;3565:25:82;;3553:2;3538:18;;3419:177;5576:40:46;;;;-1:-1:-1;;5576:40:46;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:46;-1:-1:-1;;;5576:40:46;;;5560:15;:57::i;10843:157::-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:46;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:46;-1:-1:-1;;;10932:60:46;;;10916:15;:77::i;937:164:2:-;1002:7;1028:21;1039:1;554:4;1047:1;1028:10;:21::i;39662:441:0:-;39841:10;;;39816:22;39841:10;;;;;;;;;;39862:235;;;;39886:22;;;:26;;-1:-1:-1;;;;;;39886:26:0;;;39926:16;;;:18;;-1:-1:-1;;;;;39926:18:0;;39911:1;39926:18;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;39926:18:0;;;;;-1:-1:-1;;;;;39926:18:0;;;;;;;39959:27;;;;;;;;;;;;;;-1:-1:-1;;;39959:27:0;;;39981:4;39959:27;;:11;:27::i;:::-;39862:235;;;40026:22;;;:26;;-1:-1:-1;;;;;40026:26:0;;;;;;40067:16;;;:18;;-1:-1:-1;;;40067:18:0;;;;;;40026:22;40067:18;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;40067:18:0;;;;;-1:-1:-1;;;;;40067:18:0;;;;;;;39806:297;39662:441;;;:::o;41701:479::-;41944:10;;;41888:19;41944:10;;;;;;;;;;41981:17;;42059:25;;;;-1:-1:-1;;;41981:17:0;;;;;;41944:10;42037:47;;:19;:47;:::i;:::-;42009:25;;;:75;42147:26;;;;42124:49;;:20;:49;:::i;:::-;42095:26;;;;:78;41701:479;;-1:-1:-1;;;;41701:479:0:o;8460:111:2:-;8562:1;-1:-1:-1;;;;;8542:21:2;;;;8534:30;;;;;;8460:111;;;:::o;34920:286:0:-;35152:45;;;30563:2:82;30559:15;;;;-1:-1:-1;;30555:53:82;35152:45:0;;;;30543:66:82;;;;30632:3;30677:16;;;-1:-1:-1;;;;;;30673:25:82;;;30659:12;;;30652:47;30733:16;;;;30729:25;;;30715:12;;;30708:47;35152:45:0;;;;;;;;;30771:12:82;;;;35152:45:0;;35142:56;;;;;;;;;-1:-1:-1;35137:62:0;;;;;;;;;34920:286::o;34003:490::-;34167:5;34163:324;;;34211:11;;;;34202:41;;-1:-1:-1;;;;;34211:11:0;34224:18;34202:8;:41::i;:::-;34188:11;;;:55;;-1:-1:-1;;;;;;34188:55:0;-1:-1:-1;;;;;34188:55:0;;;;;;;;;;-1:-1:-1;34261:22:0;;;;;34257:53;;;34285:25;;-1:-1:-1;;;;;34285:25:0;;;-1:-1:-1;;;34285:25:0;;;;;;34163:324;;;34375:11;;;;34366:41;;-1:-1:-1;;;34375:11:0;;-1:-1:-1;;;;;34375:11:0;34388:18;34366:8;:41::i;:::-;34352:11;;;:55;;-1:-1:-1;;;;;34352:55:0;;;-1:-1:-1;;;34352:55:0;;;;;;;;;-1:-1:-1;34426:22:0;;;;;34422:53;;;34450:25;;-1:-1:-1;;;;;;34450:25:0;-1:-1:-1;;;;;34450:25:0;;;;;;;;-1:-1:-1;;34003:490:0:o;40109:410::-;40305:5;40301:211;;;40352:10;;;;;;;;;;;;;;:28;;;40343:61;;-1:-1:-1;;;;;40352:28:0;40382:21;40343:8;:61::i;:::-;40312:10;;;;;;;;;;;;;;:28;;:92;;-1:-1:-1;;;;;;40312:92:0;-1:-1:-1;;;;;40312:92:0;;;;;;;;;;40301:211;;;40460:10;;;;;;;;;;;;;;:28;;;40451:61;;-1:-1:-1;;;40460:28:0;;-1:-1:-1;;;;;40460:28:0;40490:21;40451:8;:61::i;:::-;40420:10;;;;;;;;;;;;;;:28;;:92;;-1:-1:-1;;;;;40420:92:0;;;-1:-1:-1;;;40420:92:0;;;;;;;;;40109:410;;;;:::o;704:164:68:-;769:7;795:21;806:1;809;655:4;795:10;:21::i;39088:233:0:-;39234:7;39259:5;:54;;39291:10;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;39291:22:0;;-1:-1:-1;;;;;39291:22:0;39259:54;;;-1:-1:-1;;39266:10:0;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;;;39266:22:0;;39088:233::o;1392:324:1:-;1540:6;1537:103;;;1548:10;;:37;;-1:-1:-1;;;1548:37:1;;-1:-1:-1;;;;;1548:10:1;;;;:15;;:37;;1564:9;;1575;;1548:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:103;;;1601:12;;:39;;-1:-1:-1;;;1601:39:1;;-1:-1:-1;;;;;1601:12:1;;;;:17;;:39;;1619:9;;1630;;1601:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:103;1651:9;;:57;;-1:-1:-1;;;1651:57:1;;-1:-1:-1;;;;;26834:15:82;;;1651:57:1;;;26816:34:82;1692:4:1;26866:18:82;;;26859:43;26918:18;;;26911:34;;;1651:9:1;;;;:22;;26751:18:82;;1651:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2028:108::-;2094:9;;:34;;-1:-1:-1;;;2094:34:1;;2122:4;2094:34;;;3357:51:82;2069:7:1;;-1:-1:-1;;;;;2094:9:1;;:19;;3330:18:82;;2094:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2087:41;;2028:108;:::o;603:164:2:-;668:7;694:21;705:1;708;554:4;694:10;:21::i;1038:164:68:-;1103:7;1129:21;1140:1;655:4;1148:1;1129:10;:21::i;3109:176:0:-;3205:19;3218:5;3205:12;:19::i;:::-;3191:5;:33;;;;;;;-1:-1:-1;;;3191:33:0;-1:-1:-1;;;;3191:33:0;;;;;;;;;3260:17;:5;:15;:17::i;:::-;3243:5;:34;;-1:-1:-1;;;;;;3243:34:0;-1:-1:-1;;;;;3243:34:0;;;;;;;;;;-1:-1:-1;3109:176:0:o;1722:300:1:-;1861:6;1858:101;;;1869:10;;:36;;-1:-1:-1;;;1869:36:1;;-1:-1:-1;;;;;1869:10:1;;;;:15;;:36;;1885:9;;1896:8;;1869:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:101;;;1921:12;;:38;;-1:-1:-1;;;1921:38:1;;-1:-1:-1;;;;;1921:12:1;;;;:17;;:38;;1939:9;;1950:8;;1921:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:101;1974:9;;:40;;-1:-1:-1;;;1974:40:1;;-1:-1:-1;;;;;1974:9:1;;;;:18;;:40;;1993:9;;2004;;1974:40;;;:::i;19450:2621:0:-;19659:27;;;;;;;;19681:5;19659:27;-1:-1:-1;;;;;19659:27:0;;;;;-1:-1:-1;;;19659:27:0;;;;;;;;;;;;-1:-1:-1;;;19659:27:0;;;;;;;;-1:-1:-1;;;19659:27:0;;;;;;;;;;;;;;-1:-1:-1;;;19659:27:0;;;;;;;;;;;-1:-1:-1;;;19659:27:0;;;;;;;;;;19767:12;;19793:17;;;;19824;;;;19855:21;;;;19545:30;;;;;;19659:27;;19738:174;;19767:12;;19855:21;19738:15;:174::i;:::-;19727:185;;19927:6;:21;;;:26;;19952:1;19927:26;19923:2142;;19987:6;:17;;;19972:32;;:6;:12;;;:32;;;19968:2087;;;20174:328;20215:31;20228:6;:17;;;20215:12;:31::i;:::-;-1:-1:-1;;;;;20174:328:0;20269:31;20282:6;:17;;;20269:12;:31::i;:::-;-1:-1:-1;;;;;20174:328:0;20348:1;20323:6;:21;;;:26;;;;:157;;20457:6;:21;;;20456:22;;;:::i;:::-;20449:30;;23684:177;:::i;20323:157::-;20391:6;:21;;;20384:29;;20174:19;:328::i;:::-;20160:342;;19968:2087;;;20543:6;:17;;;20528:32;;:6;:12;;;:32;;;20524:1531;;;20605:9;;20772:17;;;;-1:-1:-1;;;;;20605:9:0;;;;20718:311;;20759:31;;:12;:31::i;:::-;-1:-1:-1;;;;;20718:311:0;20812:6;:15;;;-1:-1:-1;;;;;20718:311:0;20875:1;20850:6;:21;;;:26;;;;:157;;20984:6;:21;;;20983:22;;;:::i;20850:157::-;20918:6;:21;;;20911:29;;20718:19;:311::i;:::-;20704:325;;21133:311;21173:6;:15;;;-1:-1:-1;;;;;21133:311:0;21211:31;21224:6;:17;;;21211:12;:31::i;:::-;-1:-1:-1;;;;;21133:311:0;21290:1;21265:6;:21;;;:26;;;;:157;;21399:6;:21;;;21398:22;;;:::i;:::-;21391:30;;23867:229;:::i;21265:157::-;21333:6;:21;;;21326:29;;21133:18;:311::i;:::-;21120:324;;21547:48;21556:15;21573:6;:21;;;21547:8;:48::i;:::-;21535:9;:60;;-1:-1:-1;;;;;;21535:60:0;-1:-1:-1;;;;;21535:60:0;;;;;;;;;;-1:-1:-1;20524:1531:0;;;21716:323;21756:31;21769:6;:17;;;21756:12;:31::i;:::-;-1:-1:-1;;;;;21716:323:0;21810:31;21823:6;:17;;;21810:12;:31::i;:::-;-1:-1:-1;;;;;21716:323:0;21889:1;21864:6;:21;;;:26;;;;:157;;21998:6;:21;;;21997:22;;;:::i;21864:157::-;21932:6;:21;;;21925:29;;21716:18;:323::i;:::-;21703:336;;20524:1531;19649:2422;19450:2621;;;;;:::o;1107:158:2:-;1170:7;1196:19;1205:1;554:4;1213:1;1196:8;:19::i;8176:110::-;8277:1;-1:-1:-1;;;;;8257:21:2;;;;8249:30;;;;;181:376:46;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;1463:535:2:-;1669:9;;;1800:19;;1793:27;1825:9;;1839;;;1836:16;;1822:31;1789:65;1779:121;;1884:1;1881;1874:12;1779:121;1963:19;;1463:535;-1:-1:-1;;1463:535:2:o;1564:526:68:-;1680:9;1928:1;-1:-1:-1;;1911:19:68;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:68;;2047:27;;1564:526::o;22159:1188:0:-;22345:30;22398:44;:9;22412:5;22419:10;22431;22398:13;:44::i;:::-;22485:19;;22547:20;;22387:55;;-1:-1:-1;22485:19:0;22582;;;;;22579:493;;22733:19;;22770:20;;22617:214;;:5;;22647:10;;22676:5;;22700:14;;22733:19;22808:5;22617:12;:214::i;:::-;-1:-1:-1;22963:19:0;;23000:20;;22847:213;;:5;;22877:10;;22906:5;;22930:14;;22963:19;23038:4;22847:12;:213::i;:::-;;22579:493;23083:27;;23156:100;:5;23181:10;23193;23205:5;23212:20;23234:21;23156:24;:100::i;:::-;23082:174;;-1:-1:-1;23082:174:0;-1:-1:-1;23266:73:0;:8;23282:14;23082:174;;23266:15;:73::i;:::-;22376:971;;;;22159:1188;;;;;;;:::o;2004:752:2:-;2208:9;;;2339:19;;2332:27;2364:9;;2378;;;2375:16;;2361:31;2328:65;2318:121;;2423:1;2420;2413:12;2318:121;2737:1;2723:11;2719:1;2716;2712:9;2708:27;2704:35;2699:1;2692:9;2685:17;2681:59;2676:64;;2004:752;;;;;:::o;40525:1050:0:-;40842:10;;;40793:12;40842:10;;;;;;;;;;40894:19;;-1:-1:-1;;;;;40894:19:0;40793:12;40954:46;40894:19;40985:14;40954:8;:46::i;:::-;-1:-1:-1;;;;;41023:24:0;;;;41053:25;;;;;41022:57;;;;;;-1:-1:-1;40924:76:0;;-1:-1:-1;41077:1:0;41093:25;41090:254;;41143:11;41137:17;;:4;:17;;;41134:162;;41169:25;;;:47;;;41231:26;;;:49;;;41134:162;41309:16;;;:23;;-1:-1:-1;;;;;41309:23:0;-1:-1:-1;;;41309:23:0;;;41090:254;41353:41;;-1:-1:-1;;;;;;41353:41:0;-1:-1:-1;;;;;41353:41:0;;;;;41425:5;:142;;41522:17;;41514:53;;41515:40;;;;;;;-1:-1:-1;;;41522:17:0;;;;41515:40;:::i;:::-;41514:51;:53::i;:::-;41425:142;;;41454:17;;41446:53;;41447:40;;;;;;;-1:-1:-1;;;41454:17:0;;;;41447:40;:::i;41446:53::-;41405:162;;-1:-1:-1;;;;;41405:162:0;;;-1:-1:-1;;;41405:162:0;;;;;;;-1:-1:-1;40525:1050:0;;;-1:-1:-1;;;;;;;;40525:1050:0:o;42428:1555::-;42781:15;;;;42691:27;42781:15;;;;;;;;;;;42827;;;;;;;;42691:27;;;;42781:15;;42827;42691:27;;;;42968:24;;;;42964:351;;-1:-1:-1;;43029:26:0;;;;43091:27;;;;42964:351;;;43192:26;;;;43170:48;;:19;:48;:::i;:::-;43149:69;;43277:5;:27;;;43254:20;:50;;;;:::i;:::-;43232:72;;42964:351;43363:26;43399:27;43454:9;43440:23;;:11;:23;;;43436:350;;;-1:-1:-1;;43500:26:0;;;;43562:27;;;;43436:350;;;43663:26;;;;43641:48;;:19;:48;:::i;:::-;43620:69;;43748:5;:27;;;43725:20;:50;;;;:::i;:::-;43703:72;;43436:350;43861:18;43818:40;43840:18;43818:19;:40;:::i;:::-;:61;;;;:::i;:::-;43796:83;-1:-1:-1;43957:19:0;43912:42;43935:19;43912:20;:42;:::i;:::-;:64;;;;:::i;:::-;43889:87;;42750:1233;;;;;;42428:1555;;;;;;;;;:::o;35686:1391::-;35861:24;;;;;;;;;;-1:-1:-1;;;;;35861:24:0;;;;;-1:-1:-1;;;35861:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;35931:19;;;;;;35927:261;;35992:1;35974:5;:15;;;-1:-1:-1;;;;;35974:19:0;;35966:34;;;;-1:-1:-1;;;35966:34:0;;30996:2:82;35966:34:0;;;30978:21:82;31035:1;31015:18;;;31008:29;-1:-1:-1;;;31053:18:82;;;31046:32;31095:18;;35966:34:0;30794:325:82;35966:34:0;-1:-1:-1;36074:15:0;;;;35927:261;;;36136:41;36145:5;:15;;;36162:14;36136:8;:41::i;:::-;36120:57;;35927:261;36236:19;36283:113;36373:5;:15;;;-1:-1:-1;;;;;36365:24:0;36391:4;36305:5;:30;;;36284:20;:51;;;;:::i;:::-;36283:81;:113;:81;:113::i;:::-;36236:174;;36420:19;36466:113;36556:5;:15;;;-1:-1:-1;;;;;36548:24:0;36574:4;36488:5;:30;;;36467:20;:51;;;;:::i;36466:113::-;36420:173;;36651:14;:19;;36669:1;36651:19;36647:55;;36672:14;;;:30;;-1:-1:-1;;;;;;36672:30:0;-1:-1:-1;;;;;36672:30:0;;;;;36647:55;36712:29;;;:52;;;36774:29;;;:52;;;-1:-1:-1;;;;;36840:15:0;;;;;:34;;;36873:1;36859:11;-1:-1:-1;;;;;36859:15:0;;36840:34;36836:235;;;37004:11;-1:-1:-1;;;;;36984:31:0;:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;37049:11;-1:-1:-1;;;;;37029:31:0;:4;:16;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;35851:1226:0;;;;35686:1391;;;;:::o;8755:107:2:-;8853:1;8834:20;;;;;;8826:29;;;;;14:131:82;-1:-1:-1;;;;;89:31:82;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:347;324:8;334:6;388:3;381:4;373:6;369:17;365:27;355:55;;406:1;403;396:12;355:55;-1:-1:-1;429:20:82;;472:18;461:30;;458:50;;;504:1;501;494:12;458:50;541:4;533:6;529:17;517:29;;593:3;586:4;577:6;569;565:19;561:30;558:39;555:59;;;610:1;607;600:12;555:59;273:347;;;;;:::o;625:816::-;727:6;735;743;751;759;767;820:3;808:9;799:7;795:23;791:33;788:53;;;837:1;834;827:12;788:53;876:9;863:23;895:31;920:5;895:31;:::i;:::-;945:5;-1:-1:-1;1002:2:82;987:18;;974:32;1015:30;974:32;1015:30;:::i;:::-;1064:7;-1:-1:-1;1118:2:82;1103:18;;1090:32;;-1:-1:-1;1169:2:82;1154:18;;1141:32;;-1:-1:-1;1224:3:82;1209:19;;1196:33;1252:18;1241:30;;1238:50;;;1284:1;1281;1274:12;1238:50;1323:58;1373:7;1364:6;1353:9;1349:22;1323:58;:::i;:::-;625:816;;;;-1:-1:-1;625:816:82;;-1:-1:-1;625:816:82;;1400:8;;625:816;-1:-1:-1;;;625:816:82:o;1699:159::-;1766:20;;1826:6;1815:18;;1805:29;;1795:57;;1848:1;1845;1838:12;1863:590;1942:6;1950;1958;1966;2019:3;2007:9;1998:7;1994:23;1990:33;1987:53;;;2036:1;2033;2026:12;1987:53;2059:28;2077:9;2059:28;:::i;:::-;2049:38;;2137:2;2126:9;2122:18;2109:32;2150:28;2172:5;2150:28;:::i;:::-;2197:5;-1:-1:-1;2254:2:82;2239:18;;2226:32;2267:30;2226:32;2267:30;:::i;:::-;2316:7;-1:-1:-1;2375:2:82;2360:18;;2347:32;2388:33;2347:32;2388:33;:::i;:::-;1863:590;;;;-1:-1:-1;1863:590:82;;-1:-1:-1;;1863:590:82:o;2458:188::-;2526:20;;-1:-1:-1;;;;;2575:46:82;;2565:57;;2555:85;;2636:1;2633;2626:12;2651:541;2744:6;2752;2760;2768;2776;2829:3;2817:9;2808:7;2804:23;2800:33;2797:53;;;2846:1;2843;2836:12;2797:53;2885:9;2872:23;2904:31;2929:5;2904:31;:::i;:::-;2954:5;-1:-1:-1;2978:37:82;3011:2;2996:18;;2978:37;:::i;:::-;2968:47;;3034:37;3067:2;3056:9;3052:18;3034:37;:::i;:::-;3024:47;;3090:38;3124:2;3113:9;3109:18;3090:38;:::i;:::-;3080:48;;3147:39;3181:3;3170:9;3166:19;3147:39;:::i;:::-;3137:49;;2651:541;;;;;;;;:::o;3601:529::-;3683:6;3691;3699;3707;3760:3;3748:9;3739:7;3735:23;3731:33;3728:53;;;3777:1;3774;3767:12;3728:53;3816:9;3803:23;3835:31;3860:5;3835:31;:::i;:::-;3885:5;-1:-1:-1;3909:37:82;3942:2;3927:18;;3909:37;:::i;:::-;3899:47;;3965:38;3999:2;3988:9;3984:18;3965:38;:::i;:::-;3955:48;;4055:2;4044:9;4040:18;4027:32;4068:30;4090:7;4068:30;:::i;4135:180::-;4194:6;4247:2;4235:9;4226:7;4222:23;4218:32;4215:52;;;4263:1;4260;4253:12;4215:52;-1:-1:-1;4286:23:82;;4135:180;-1:-1:-1;4135:180:82:o;5154:674::-;5247:6;5255;5263;5271;5279;5332:3;5320:9;5311:7;5307:23;5303:33;5300:53;;;5349:1;5346;5339:12;5300:53;5388:9;5375:23;5407:28;5429:5;5407:28;:::i;:::-;5454:5;-1:-1:-1;5506:2:82;5491:18;;5478:32;;-1:-1:-1;5557:2:82;5542:18;;5529:32;;-1:-1:-1;5612:2:82;5597:18;;5584:32;5639:18;5628:30;;5625:50;;;5671:1;5668;5661:12;5625:50;5710:58;5760:7;5751:6;5740:9;5736:22;5710:58;:::i;:::-;5154:674;;;;-1:-1:-1;5154:674:82;;-1:-1:-1;5787:8:82;;5684:84;5154:674;-1:-1:-1;;;5154:674:82:o;5833:454::-;5906:6;5914;5922;5975:2;5963:9;5954:7;5950:23;5946:32;5943:52;;;5991:1;5988;5981:12;5943:52;6030:9;6017:23;6049:31;6074:5;6049:31;:::i;:::-;6099:5;-1:-1:-1;6123:37:82;6156:2;6141:18;;6123:37;:::i;:::-;6113:47;;6212:2;6201:9;6197:18;6184:32;6225:30;6247:7;6225:30;:::i;:::-;6274:7;6264:17;;;5833:454;;;;;:::o;6292:385::-;6378:6;6386;6394;6402;6455:3;6443:9;6434:7;6430:23;6426:33;6423:53;;;6472:1;6469;6462:12;6423:53;-1:-1:-1;;6495:23:82;;;6565:2;6550:18;;6537:32;;-1:-1:-1;6616:2:82;6601:18;;6588:32;;6667:2;6652:18;6639:32;;-1:-1:-1;6292:385:82;-1:-1:-1;6292:385:82:o;7410:349::-;7477:6;7485;7538:2;7526:9;7517:7;7513:23;7509:32;7506:52;;;7554:1;7551;7544:12;7506:52;7577:29;7596:9;7577:29;:::i;:::-;7567:39;;7656:2;7645:9;7641:18;7628:32;7704:5;7700:2;7689:21;7682:5;7679:32;7669:60;;7725:1;7722;7715:12;7669:60;7748:5;7738:15;;;7410:349;;;;;:::o;7764:247::-;7823:6;7876:2;7864:9;7855:7;7851:23;7847:32;7844:52;;;7892:1;7889;7882:12;7844:52;7931:9;7918:23;7950:31;7975:5;7950:31;:::i;8016:313::-;8080:6;8088;8141:2;8129:9;8120:7;8116:23;8112:32;8109:52;;;8157:1;8154;8147:12;8109:52;8180:28;8198:9;8180:28;:::i;:::-;8170:38;;8258:2;8247:9;8243:18;8230:32;8271:28;8293:5;8271:28;:::i;9581:523::-;9663:6;9671;9679;9687;9740:3;9728:9;9719:7;9715:23;9711:33;9708:53;;;9757:1;9754;9747:12;9708:53;9780:28;9798:9;9780:28;:::i;:::-;9770:38;;9855:2;9844:9;9840:18;9827:32;9817:42;;9909:2;9898:9;9894:18;9881:32;9922:28;9944:5;9922:28;:::i;10109:315::-;10177:6;10185;10238:2;10226:9;10217:7;10213:23;10209:32;10206:52;;;10254:1;10251;10244:12;10206:52;10293:9;10280:23;10312:31;10337:5;10312:31;:::i;:::-;10362:5;10414:2;10399:18;;;;10386:32;;-1:-1:-1;;;10109:315:82:o;10621:466::-;10705:6;10713;10721;10729;10782:3;10770:9;10761:7;10757:23;10753:33;10750:53;;;10799:1;10796;10789:12;10750:53;10838:9;10825:23;10857:31;10882:5;10857:31;:::i;:::-;10907:5;-1:-1:-1;10931:37:82;10964:2;10949:18;;10931:37;:::i;:::-;10921:47;;10987:37;11020:2;11009:9;11005:18;10987:37;:::i;:::-;10977:47;;11043:38;11077:2;11066:9;11062:18;11043:38;:::i;:::-;11033:48;;10621:466;;;;;;;:::o;11092:316::-;11169:6;11177;11185;11238:2;11226:9;11217:7;11213:23;11209:32;11206:52;;;11254:1;11251;11244:12;11206:52;-1:-1:-1;;11277:23:82;;;11347:2;11332:18;;11319:32;;-1:-1:-1;11398:2:82;11383:18;;;11370:32;;11092:316;-1:-1:-1;11092:316:82:o;11413:184::-;11471:6;11524:2;11512:9;11503:7;11499:23;11495:32;11492:52;;;11540:1;11537;11530:12;11492:52;11563:28;11581:9;11563:28;:::i;11810:454::-;11883:6;11891;11899;11952:2;11940:9;11931:7;11927:23;11923:32;11920:52;;;11968:1;11965;11958:12;11920:52;11991:28;12009:9;11991:28;:::i;:::-;11981:38;;12069:2;12058:9;12054:18;12041:32;12082:28;12104:5;12082:28;:::i;:::-;12129:5;-1:-1:-1;12186:2:82;12171:18;;12158:32;12199:33;12158:32;12199:33;:::i;12269:309::-;12334:6;12342;12395:2;12383:9;12374:7;12370:23;12366:32;12363:52;;;12411:1;12408;12401:12;12363:52;12447:9;12434:23;12424:33;;12507:2;12496:9;12492:18;12479:32;12520:28;12542:5;12520:28;:::i;12583:454::-;12678:6;12686;12694;12702;12710;12763:3;12751:9;12742:7;12738:23;12734:33;12731:53;;;12780:1;12777;12770:12;12731:53;-1:-1:-1;;12803:23:82;;;12873:2;12858:18;;12845:32;;-1:-1:-1;12924:2:82;12909:18;;12896:32;;12975:2;12960:18;;12947:32;;-1:-1:-1;13026:3:82;13011:19;12998:33;;-1:-1:-1;12583:454:82;-1:-1:-1;12583:454:82:o;13042:764::-;13146:6;13154;13162;13170;13178;13186;13239:3;13227:9;13218:7;13214:23;13210:33;13207:53;;;13256:1;13253;13246:12;13207:53;13295:9;13282:23;13314:31;13339:5;13314:31;:::i;:::-;13364:5;-1:-1:-1;13388:37:82;13421:2;13406:18;;13388:37;:::i;:::-;13378:47;;13444:37;13477:2;13466:9;13462:18;13444:37;:::i;:::-;13434:47;;13500:38;13534:2;13523:9;13519:18;13500:38;:::i;:::-;13490:48;;13589:3;13578:9;13574:19;13561:33;13617:18;13609:6;13606:30;13603:50;;;13649:1;13646;13639:12;13811:381;13884:6;13892;13900;13953:2;13941:9;13932:7;13928:23;13924:32;13921:52;;;13969:1;13966;13959:12;13921:52;13992:28;14010:9;13992:28;:::i;:::-;13982:38;;14067:2;14056:9;14052:18;14039:32;14029:42;;14121:2;14110:9;14106:18;14093:32;14134:28;14156:5;14134:28;:::i;15331:450::-;15405:6;15413;15421;15474:2;15462:9;15453:7;15449:23;15445:32;15442:52;;;15490:1;15487;15480:12;15442:52;15529:9;15516:23;15548:31;15573:5;15548:31;:::i;16174:332::-;16376:2;16358:21;;;16415:1;16395:18;;;16388:29;-1:-1:-1;;;16448:2:82;16433:18;;16426:39;16497:2;16482:18;;16174:332::o;16511:335::-;16713:2;16695:21;;;16752:2;16732:18;;;16725:30;-1:-1:-1;;;16786:2:82;16771:18;;16764:41;16837:2;16822:18;;16511:335::o;16851:127::-;16912:10;16907:3;16903:20;16900:1;16893:31;16943:4;16940:1;16933:15;16967:4;16964:1;16957:15;16983:125;17048:9;;;17069:10;;;17066:36;;;17082:18;;:::i;17450:171::-;17518:6;17557:10;;;17545;;;17541:27;;17580:12;;;17577:38;;;17595:18;;:::i;:::-;17577:38;17450:171;;;;:::o;17626:168::-;17693:6;17719:10;;;17731;;;17715:27;;17754:11;;;17751:37;;;17768:18;;:::i;17799:197::-;-1:-1:-1;;;;;17921:10:82;;;17933;;;17917:27;;17956:11;;;17953:37;;;17970:18;;:::i;18665:368::-;18762:6;18770;18778;18786;18839:3;18827:9;18818:7;18814:23;18810:33;18807:53;;;18856:1;18853;18846:12;18807:53;-1:-1:-1;;18879:16:82;;18935:2;18920:18;;18914:25;18979:2;18964:18;;18958:25;19023:2;19008:18;;;19002:25;18879:16;;18914:25;;-1:-1:-1;19002:25:82;;-1:-1:-1;18665:368:82;-1:-1:-1;18665:368:82:o;19038:200::-;19104:9;;;19077:4;19132:9;;19160:10;;19172:12;;;19156:29;19195:12;;;19187:21;;19153:56;19150:82;;;19212:18;;:::i;19243:216::-;19307:9;;;19335:11;;;19282:3;19365:9;;19393:10;;19389:19;;19418:10;;19410:19;;19386:44;19383:70;;;19433:18;;:::i;:::-;19383:70;;19243:216;;;;:::o;19464:245::-;19562:2;19532:17;;;19551;;;;19528:41;-1:-1:-1;;;;;19584:44:82;;-1:-1:-1;;19630:49:82;;19581:99;19578:125;;;19683:18;;:::i;19714:213::-;19749:3;19797:5;19793:2;19782:21;-1:-1:-1;;;;;19827:39:82;19818:7;19815:52;19812:78;;19870:18;;:::i;:::-;19910:1;19906:15;;19714:213;-1:-1:-1;;19714:213:82:o;19932:136::-;19967:3;-1:-1:-1;;;19988:22:82;;19985:48;;20013:18;;:::i;:::-;-1:-1:-1;20053:1:82;20049:13;;19932:136::o;20073:274::-;-1:-1:-1;;;;;20265:32:82;;;;20247:51;;20329:2;20314:18;;20307:34;20235:2;20220:18;;20073:274::o;20352:245::-;20419:6;20472:2;20460:9;20451:7;20447:23;20443:32;20440:52;;;20488:1;20485;20478:12;20440:52;20520:9;20514:16;20539:28;20561:5;20539:28;:::i;20602:128::-;20669:9;;;20690:11;;;20687:37;;;20704:18;;:::i;21633:245::-;21712:6;21720;21773:2;21761:9;21752:7;21748:23;21744:32;21741:52;;;21789:1;21786;21779:12;21741:52;-1:-1:-1;;21812:16:82;;21868:2;21853:18;;;21847:25;21812:16;;21847:25;;-1:-1:-1;21633:245:82:o;22570:127::-;22631:10;22626:3;22622:20;22619:1;22612:31;22662:4;22659:1;22652:15;22686:4;22683:1;22676:15;22702:120;22742:1;22768;22758:35;;22773:18;;:::i;:::-;-1:-1:-1;22807:9:82;;22702:120::o;22827:459::-;23012:6;23001:9;22994:25;23055:2;23050;23039:9;23035:18;23028:30;23094:6;23089:2;23078:9;23074:18;23067:34;23151:6;23143;23138:2;23127:9;23123:18;23110:48;23207:1;23178:22;;;23202:2;23174:31;;;23167:42;;;;23270:2;23249:15;;;-1:-1:-1;;23245:29:82;23230:45;23226:54;;22827:459;-1:-1:-1;;22827:459:82:o;25190:168::-;25263:9;;;25294;;25311:15;;;25305:22;;25291:37;25281:71;;25332:18;;:::i;25363:200::-;-1:-1:-1;;;;;25499:10:82;;;25487;;;25483:27;;25522:12;;;25519:38;;;25537:18;;:::i;26956:331::-;27158:2;27140:21;;;27197:1;27177:18;;;27170:29;-1:-1:-1;;;27230:2:82;27215:18;;27208:38;27278:2;27263:18;;26956:331::o;27292:332::-;27494:2;27476:21;;;27533:1;27513:18;;;27506:29;-1:-1:-1;;;27566:2:82;27551:18;;27544:39;27615:2;27600:18;;27292:332::o;27629:112::-;27661:1;27687;27677:35;;27692:18;;:::i;:::-;-1:-1:-1;27726:9:82;;27629:112::o;28494:184::-;28564:6;28617:2;28605:9;28596:7;28592:23;28588:32;28585:52;;;28633:1;28630;28623:12;28585:52;-1:-1:-1;28656:16:82;;28494:184;-1:-1:-1;28494:184:82:o;28683:423::-;28725:3;28763:5;28757:12;28790:6;28785:3;28778:19;28815:1;28825:162;28839:6;28836:1;28833:13;28825:162;;;28901:4;28957:13;;;28953:22;;28947:29;28929:11;;;28925:20;;28918:59;28854:12;28825:162;;;28829:3;29032:1;29025:4;29016:6;29011:3;29007:16;29003:27;28996:38;29095:4;29088:2;29084:7;29079:2;29071:6;29067:15;29063:29;29058:3;29054:39;29050:50;29043:57;;;28683:423;;;;:::o;29111:220::-;29260:2;29249:9;29242:21;29223:4;29280:45;29321:2;29310:9;29306:18;29298:6;29280:45;:::i;29336:127::-;29397:10;29392:3;29388:20;29385:1;29378:31;29428:4;29425:1;29418:15;29452:4;29449:1;29442:15;29468:291;29645:2;29634:9;29627:21;29608:4;29665:45;29706:2;29695:9;29691:18;29683:6;29665:45;:::i;:::-;29657:53;;29746:6;29741:2;29730:9;29726:18;29719:34;29468:291;;;;;:::o;29764:362::-;29969:2;29958:9;29951:21;29932:4;29989:45;30030:2;30019:9;30015:18;30007:6;29989:45;:::i;:::-;30065:2;30050:18;;30043:34;;;;-1:-1:-1;30108:2:82;30093:18;30086:34;29981:53;29764:362;-1:-1:-1;29764:362:82:o;30131:226::-;30170:3;-1:-1:-1;;;;;30267:2:82;30260:5;30256:14;30294:2;30285:7;30282:15;30279:41;;30300:18;;:::i;:::-;30349:1;30336:15;;30131:226;-1:-1:-1;;;30131:226:82:o",
    "linkReferences": {
      "contracts/bonds/GBC.sol": {
        "LinearCurve": [
          {
            "start": 4205,
            "length": 20
          },
          {
            "start": 6701,
            "length": 20
          },
          {
            "start": 9129,
            "length": 20
          },
          {
            "start": 13596,
            "length": 20
          },
          {
            "start": 13766,
            "length": 20
          },
          {
            "start": 15305,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "108": [
        {
          "start": 2110,
          "length": 32
        }
      ],
      "110": [
        {
          "start": 2904,
          "length": 32
        },
        {
          "start": 4144,
          "length": 32
        }
      ],
      "115": [
        {
          "start": 2710,
          "length": 32
        }
      ],
      "117": [
        {
          "start": 2865,
          "length": 32
        },
        {
          "start": 6456,
          "length": 32
        },
        {
          "start": 7242,
          "length": 32
        }
      ],
      "119": [
        {
          "start": 2749,
          "length": 32
        },
        {
          "start": 6418,
          "length": 32
        },
        {
          "start": 7204,
          "length": 32
        }
      ],
      "121": [
        {
          "start": 2807,
          "length": 32
        }
      ],
      "4085": [
        {
          "start": 7547,
          "length": 32
        },
        {
          "start": 8066,
          "length": 32
        },
        {
          "start": 10333,
          "length": 32
        },
        {
          "start": 10460,
          "length": 32
        }
      ],
      "5855": [
        {
          "start": 3058,
          "length": 32
        },
        {
          "start": 8983,
          "length": 32
        },
        {
          "start": 11750,
          "length": 32
        },
        {
          "start": 12319,
          "length": 32
        },
        {
          "start": 13430,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BaseToken()": "90f81702",
    "PRECISION()": "aaf5eb68",
    "ROUNDLIMIT()": "159054ea",
    "TradeToken()": "df99f8bf",
    "a_initial()": "6e2f7ad3",
    "addDelta(uint128,int128)": "402d44fb",
    "areaBetweenCurveAndMax(uint256)": "14e2b929",
    "b()": "4df7e3d0",
    "b_initial()": "558bdb29",
    "baseGivenLiquidity(uint256,uint256,uint256)": "f9734a24",
    "baseToken()": "c55dae63",
    "calculateInitCurveParams(uint256,uint256,uint256,uint256,uint256)": "ac4bc1cb",
    "calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)": "34327d8b",
    "claimFilledOrder(address,uint16,bool)": "42b6c9fb",
    "claimPartiallyFilledOrder(address,uint16,bool)": "32530d7f",
    "collect(address,uint16,uint16,uint128,uint128)": "098bcc56",
    "controller()": "f77c4791",
    "discount_cap()": "7063b06c",
    "discountedReserves()": "1816eb13",
    "entry()": "67f239dd",
    "factory()": "c45a0155",
    "fee()": "ddca3f43",
    "feeGrowthGlobalBase()": "659a544a",
    "feeGrowthGlobalTrade()": "1d2637ab",
    "flush(address,uint256)": "96fd1c42",
    "getCurPrice()": "11e715d6",
    "getLiq(address,uint16,bool)": "9b608089",
    "getNextPriceLimit(uint16,uint256,bool)": "b501c284",
    "getNumCross(uint16,bool)": "e37699c9",
    "getOneTimeLiquidity(uint16,bool)": "4a3ca717",
    "liquidity()": "1a686502",
    "liquidityGivenBase(uint256,uint256,uint256)": "e7c3614f",
    "liquidityGivenTrade(uint256,uint256,uint256)": "b04a69fd",
    "lock()": "f83d08ba",
    "makerClaimClose(uint16,bool,address)": "a1217e7d",
    "makerClaimOpen(uint16,bool,address)": "f0bb81b3",
    "makerClose(uint16,uint256,bool,address)": "e7ca189a",
    "makerOpen(uint16,uint256,bool,address)": "68087cc3",
    "makerPartiallyClaim(uint16,bool,bool,address)": "08216712",
    "makerReduceClose(uint16,uint256,bool,address)": "9c9d7d3f",
    "makerReduceOpen(uint16,uint256,bool,address)": "957343f0",
    "maxPrice()": "e38d6b5c",
    "owner()": "8da5cb5b",
    "placeLimitOrder(address,uint16,uint128,bool)": "2130ce0d",
    "pointToPrice(uint16)": "8ce26999",
    "positionIsFilled(address,uint16,bool)": "6ed75596",
    "positions(bytes32)": "514ea4bf",
    "precision()": "d3b5dc3b",
    "priceDelta()": "5bfa896a",
    "priceToPoint(uint256)": "2353b18e",
    "provide(address,uint16,uint16,uint128,bytes)": "af0d37bc",
    "reduceLimitOrder(address,uint16,uint128,bool)": "1376ff3e",
    "remove(address,uint16,uint16,uint128)": "7f1d9ae6",
    "resetLiq()": "8d01450f",
    "s_tradeToken()": "10f22221",
    "setEntry(address)": "42bc5292",
    "slot0()": "3850c7bd",
    "takerClose(bool,int256,uint256,bytes)": "556769ba",
    "takerOpen(bool,int256,uint256,bytes)": "244d59cb",
    "tickSpacing()": "d0c93a7c",
    "ticks(uint16)": "b9033a39",
    "trade(address,bool,int256,uint256,bytes)": "004b2045",
    "tradeGivenLiquidity(uint256,uint256,uint256)": "80c0c3e7",
    "tradeToken()": "d83678ac",
    "trustedBurn(address,uint256,bool)": "c93ac3ed",
    "trustedDiscountedMint(address,uint256)": "681504cd",
    "upperBound()": "b09ad8a0",
    "xMax(uint256,uint256,uint256)": "b29d9b6e",
    "xMaxRoundUp(uint256,uint256,uint256)": "9314b03f",
    "yInt(uint256,bool)": "a74d74d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trade\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s_trade\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUNDLIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TradeToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a_initial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"x\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"y\",\"type\":\"int128\"}],\"name\":\"addDelta\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"areaBetweenCurveAndMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b_initial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"L\",\"type\":\"uint256\"}],\"name\":\"baseGivenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"P\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"I\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigma\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alpha\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delta\",\"type\":\"uint256\"}],\"name\":\"calculateInitCurveParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigma\",\"type\":\"uint256\"}],\"name\":\"calculateInitCurveParamsPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"managementFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"claimFilledOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"claimPartiallyFilledOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tickLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tickUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discount_cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountedReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobalBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobalTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flushTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"getLiq\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"pDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getNextPriceLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getNumCross\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getOneTimeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"}],\"name\":\"liquidityGivenBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"}],\"name\":\"liquidityGivenTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClaimClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClaimOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toEscrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"crossId\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toEscrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"crossId\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerPartiallyClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerReduceClose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerReduceOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"placeLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToEscrow\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"numCross\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"}],\"name\":\"pointToPrice\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"positionIsFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"bidCrossId\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askCrossId\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askLiq\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidLiq\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensOwed0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensOwed1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"priceToPoint\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"reduceLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetLiq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tradeToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"}],\"name\":\"setEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"curPrice\",\"type\":\"uint160\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"amortized\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"modifyLiqPoint\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountIn\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"takerClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolamountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolamountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountIn\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"takerOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolamountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolamountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutsideBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutsideTrade\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"askLiquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidLiquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askNumCross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidNumCross\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"trade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"L\",\"type\":\"uint256\"}],\"name\":\"tradeGivenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"}],\"name\":\"trustedBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trustedDiscountedMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upperBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"xMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"xMaxRoundUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"yInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addDelta(uint128,int128)\":{\"params\":{\"x\":\"The liquidity before change\",\"y\":\"The delta by which liquidity should be changed\"},\"returns\":{\"z\":\"The liquidity delta\"}},\"calculateInitCurveParams(uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"sigma\":\"is the proportion of P that is going to be bought at a discount  \"}},\"makerOpen(uint16,uint256,bool,address)\":{\"params\":{\"amount\":\"is in base if long, trade if in short  \"}},\"takerClose(bool,int256,uint256,bytes)\":{\"params\":{\"amountIn\":\"is trade if long, ALSO trade if short, since getting rid of s_trade \"}},\"takerOpen(bool,int256,uint256,bytes)\":{\"params\":{\"amountIn\":\"is base if long, trade if short\",\"priceLimit\":\"is slippage tolerance\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDelta(uint128,int128)\":{\"notice\":\"Add a signed liquidity delta to liquidity and revert if it overflows or underflows\"},\"areaBetweenCurveAndMax(uint256)\":{\"notice\":\"computes area between the curve and max price for given storage parameters\"},\"calculateInitCurveParams(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate and store initial curve params that takes into account validator rewards(from discounted zcb). For validator rewards, just skew up the initial price These params are used for utilizer bond issuance, but a is set to 0 after issuance phase \"},\"calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)\":{\"notice\":\"calculates initparams for pool based instruments  param endPrice is the inception Price of longZCB, or its price when there is no discount\"},\"claimFilledOrder(address,uint16,bool)\":{\"notice\":\"Need to check if the ask/bids were actually filled, which is equivalent to the condition that numCross > crossId, because numCross only increases when crossUp  or crossDown \"},\"claimPartiallyFilledOrder(address,uint16,bool)\":{\"notice\":\"called when maker wants to claim when the the price is at the  point he submitted the order\"},\"makerClose(uint16,uint256,bool,address)\":{\"notice\":\"amount is trade if long, but ALSO trade if short(since trade quantity also coincides with shortTrade quantity )\"},\"makerOpen(uint16,uint256,bool,address)\":{\"notice\":\"provides oneTimeliquidity in the range (point,point+1)\"},\"makerReduceClose(uint16,uint256,bool,address)\":{\"notice\":\"amount is in trade if long, ALSO trade if short \"},\"makerReduceOpen(uint16,uint256,bool,address)\":{\"notice\":\"amount is in base if long, trade if short \"},\"priceToPoint(uint256)\":{\"notice\":\"will round down to nearest integer \"},\"provide(address,uint16,uint16,uint128,bytes)\":{\"notice\":\"provides liquidity in range or adds limit order if pointUpper = pointLower + 1\"},\"resetLiq()\":{\"notice\":\"resets AMM liquidity to 0 and make it ready to be liq provisioned  by anyone \"},\"takerOpen(bool,int256,uint256,bytes)\":{\"notice\":\"Long up the curve, or short down the curve \"},\"trade(address,bool,int256,uint256,bytes)\":{\"notice\":\"param +amountSpecified is in base if moveUp, else is in trade (+ if input asset, - if output asset) -amountSpecified is in trade if moveUp, else is in base  returns amountIn if moveUp, cash, else token returns amountOut if moveUp, token, else cash \"},\"trustedDiscountedMint(address,uint256)\":{\"notice\":\"mints new zcbs \"},\"yInt(uint256,bool)\":{\"notice\":\"get the lower bound of the given price range, or the y intercept of the curve of the current point\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bonds/synthetic.sol\":\"SyntheticZCBPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/math/=lib/prb-math/src/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/bonds/GBC.sol\":{\"keccak256\":\"0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84\",\"dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T\"]},\"contracts/bonds/boundedDerivatives.sol\":{\"keccak256\":\"0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0\",\"urls\":[\"bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c\",\"dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H\"]},\"contracts/bonds/libraries.sol\":{\"keccak256\":\"0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091\",\"urls\":[\"bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e\",\"dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV\"]},\"contracts/bonds/synthetic.sol\":{\"keccak256\":\"0x787122dbd7169d278110f7802b2b0cc997456b72c96a58d31bc1eaefedb58c0f\",\"urls\":[\"bzz-raw://1a1311346aefc4089342bce7da1f23f5b928d16fc4bbb9e4ac3e5f77d531d679\",\"dweb:/ipfs/QmTb6z9GZGs19cX1kwTaReyJmue9TMAyrsmuZ4WdijNASy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trade",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "s_trade",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_entry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BaseToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROUNDLIMIT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TradeToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "a_initial",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "x",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "y",
              "type": "int128"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addDelta",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areaBetweenCurveAndMax",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "b",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "b_initial",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "L",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "baseGivenLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "P",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "I",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sigma",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "alpha",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "delta",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "calculateInitCurveParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "saleAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sigma",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "calculateInitCurveParamsPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "managementFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFilledOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimPartiallyFilledOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "tickLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tickUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount0Requested",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Requested",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collect",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "controller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "discount_cap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "discountedReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeGrowthGlobalBase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeGrowthGlobalTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flushTo",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flush"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLiq",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "pDelta",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getNextPriceLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumCross",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOneTimeLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidity",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "liquidityGivenBase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "T",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "liquidityGivenTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lock"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClaimClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClaimOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "toEscrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "crossId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "toEscrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "crossId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPartiallyClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerReduceClose"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerReduceOpen"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "placeLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToEscrow",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "numCross",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "pointToPrice",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positionIsFilled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "bidCrossId",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askCrossId",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askLiq",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidLiq",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside0LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside1LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensOwed0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensOwed1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "precision",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceDelta",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "priceToPoint",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "provide",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reduceLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToReturn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetLiq"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_tradeToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_entry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntry"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slot0",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "curPrice",
              "type": "uint160"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "feeProtocol",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "unlocked",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "amortized",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "modifyLiqPoint",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountIn",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takerClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolamountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolamountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountIn",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takerOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolamountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolamountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tickSpacing",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ticks",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "liquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "liquidityNet",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthOutsideBase",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthOutsideTrade",
              "type": "uint256"
            },
            {
              "internalType": "int56",
              "name": "tickCumulativeOutside",
              "type": "int56"
            },
            {
              "internalType": "uint160",
              "name": "secondsPerLiquidityOutsideX128",
              "type": "uint160"
            },
            {
              "internalType": "uint32",
              "name": "secondsOutside",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "askLiquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidLiquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askNumCross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidNumCross",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "L",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tradeGivenLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradeToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "long",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustedBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustedDiscountedMint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "upperBound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "xMax",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "xMaxRoundUp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "yInt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addDelta(uint128,int128)": {
            "params": {
              "x": "The liquidity before change",
              "y": "The delta by which liquidity should be changed"
            },
            "returns": {
              "z": "The liquidity delta"
            }
          },
          "calculateInitCurveParams(uint256,uint256,uint256,uint256,uint256)": {
            "params": {
              "sigma": "is the proportion of P that is going to be bought at a discount  "
            }
          },
          "makerOpen(uint16,uint256,bool,address)": {
            "params": {
              "amount": "is in base if long, trade if in short  "
            }
          },
          "takerClose(bool,int256,uint256,bytes)": {
            "params": {
              "amountIn": "is trade if long, ALSO trade if short, since getting rid of s_trade "
            }
          },
          "takerOpen(bool,int256,uint256,bytes)": {
            "params": {
              "amountIn": "is base if long, trade if short",
              "priceLimit": "is slippage tolerance"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDelta(uint128,int128)": {
            "notice": "Add a signed liquidity delta to liquidity and revert if it overflows or underflows"
          },
          "areaBetweenCurveAndMax(uint256)": {
            "notice": "computes area between the curve and max price for given storage parameters"
          },
          "calculateInitCurveParams(uint256,uint256,uint256,uint256,uint256)": {
            "notice": "calculate and store initial curve params that takes into account validator rewards(from discounted zcb). For validator rewards, just skew up the initial price These params are used for utilizer bond issuance, but a is set to 0 after issuance phase "
          },
          "calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)": {
            "notice": "calculates initparams for pool based instruments  param endPrice is the inception Price of longZCB, or its price when there is no discount"
          },
          "claimFilledOrder(address,uint16,bool)": {
            "notice": "Need to check if the ask/bids were actually filled, which is equivalent to the condition that numCross > crossId, because numCross only increases when crossUp  or crossDown "
          },
          "claimPartiallyFilledOrder(address,uint16,bool)": {
            "notice": "called when maker wants to claim when the the price is at the  point he submitted the order"
          },
          "makerClose(uint16,uint256,bool,address)": {
            "notice": "amount is trade if long, but ALSO trade if short(since trade quantity also coincides with shortTrade quantity )"
          },
          "makerOpen(uint16,uint256,bool,address)": {
            "notice": "provides oneTimeliquidity in the range (point,point+1)"
          },
          "makerReduceClose(uint16,uint256,bool,address)": {
            "notice": "amount is in trade if long, ALSO trade if short "
          },
          "makerReduceOpen(uint16,uint256,bool,address)": {
            "notice": "amount is in base if long, trade if short "
          },
          "priceToPoint(uint256)": {
            "notice": "will round down to nearest integer "
          },
          "provide(address,uint16,uint16,uint128,bytes)": {
            "notice": "provides liquidity in range or adds limit order if pointUpper = pointLower + 1"
          },
          "resetLiq()": {
            "notice": "resets AMM liquidity to 0 and make it ready to be liq provisioned  by anyone "
          },
          "takerOpen(bool,int256,uint256,bytes)": {
            "notice": "Long up the curve, or short down the curve "
          },
          "trade(address,bool,int256,uint256,bytes)": {
            "notice": "param +amountSpecified is in base if moveUp, else is in trade (+ if input asset, - if output asset) -amountSpecified is in trade if moveUp, else is in base  returns amountIn if moveUp, cash, else token returns amountOut if moveUp, token, else cash "
          },
          "trustedDiscountedMint(address,uint256)": {
            "notice": "mints new zcbs "
          },
          "yInt(uint256,bool)": {
            "notice": "get the lower bound of the given price range, or the y intercept of the curve of the current point"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/math/=lib/prb-math/src/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/bonds/synthetic.sol": "SyntheticZCBPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bonds/GBC.sol": {
        "keccak256": "0x574912dce505b2614d17ee567bd1ff544c01267f976c010e534c2f3794d07488",
        "urls": [
          "bzz-raw://5a28e5a9db4c9f6a7166ff7d504841333ce57f50c509590fbb14557a86dd9f84",
          "dweb:/ipfs/QmUhrVivf9Px27NbzKap1MFarK3MCKj9rCDpDomxV7kA7T"
        ],
        "license": "UNLICENSED"
      },
      "contracts/bonds/boundedDerivatives.sol": {
        "keccak256": "0xbf3861007c1aa30ece9e7421bfb1b3bfc679a46d56a7a44ef6f96174443a55c0",
        "urls": [
          "bzz-raw://87393dc204a91872683de17da45336a26f991c3d8a09ebd05c82f12ca89e408c",
          "dweb:/ipfs/QmQJJ6HCd6DZQsEua6WDc1RatuRtF4FxVwxhWzvvBdWD3H"
        ],
        "license": null
      },
      "contracts/bonds/libraries.sol": {
        "keccak256": "0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091",
        "urls": [
          "bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e",
          "dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV"
        ],
        "license": null
      },
      "contracts/bonds/synthetic.sol": {
        "keccak256": "0x787122dbd7169d278110f7802b2b0cc997456b72c96a58d31bc1eaefedb58c0f",
        "urls": [
          "bzz-raw://1a1311346aefc4089342bce7da1f23f5b928d16fc4bbb9e4ac3e5f77d531d679",
          "dweb:/ipfs/QmTb6z9GZGs19cX1kwTaReyJmue9TMAyrsmuZ4WdijNASy"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/bonds/synthetic.sol",
    "id": 6246,
    "exportedSymbols": {
      "BoundedDerivativesPool": [
        5086
      ],
      "ERC20": [
        5712
      ],
      "FixedPointMathLib": [
        59351
      ],
      "LinearCurve": [
        2950
      ],
      "SyntheticZCBPool": [
        6245
      ],
      "SyntheticZCBPoolFactory": [
        5836
      ],
      "ZCBFactory": [
        5750
      ],
      "console": [
        45593
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5934:3",
    "nodes": [
      {
        "id": 5714,
        "nodeType": "PragmaDirective",
        "src": "0:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 5716,
        "nodeType": "ImportDirective",
        "src": "24:39:3",
        "nodes": [],
        "absolutePath": "contracts/bonds/GBC.sol",
        "file": "./GBC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6246,
        "sourceUnit": 4055,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5715,
              "name": "LinearCurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2950,
              "src": "33:11:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5718,
        "nodeType": "ImportDirective",
        "src": "65:64:3",
        "nodes": [],
        "absolutePath": "contracts/bonds/boundedDerivatives.sol",
        "file": "./boundedDerivatives.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6246,
        "sourceUnit": 5095,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5717,
              "name": "BoundedDerivativesPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5086,
              "src": "73:22:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5720,
        "nodeType": "ImportDirective",
        "src": "131:70:3",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
        "file": "solmate/utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6246,
        "sourceUnit": 59352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5719,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59351,
              "src": "139:17:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5722,
        "nodeType": "ImportDirective",
        "src": "202:38:3",
        "nodes": [],
        "absolutePath": "contracts/bonds/libraries.sol",
        "file": "./libraries.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6246,
        "sourceUnit": 5713,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5721,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5712,
              "src": "210:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5723,
        "nodeType": "ImportDirective",
        "src": "242:31:3",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6246,
        "sourceUnit": 45594,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5750,
        "nodeType": "ContractDefinition",
        "src": "275:246:3",
        "nodes": [
          {
            "id": 5749,
            "nodeType": "FunctionDefinition",
            "src": "300:218:3",
            "nodes": [],
            "body": {
              "id": 5748,
              "nodeType": "Block",
              "src": "416:102:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5734,
                      "mutability": "mutable",
                      "name": "bondToken",
                      "nameLocation": "432:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 5748,
                      "src": "426:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5712",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 5733,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5732,
                          "name": "ERC20",
                          "nameLocations": [
                            "426:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5712,
                          "src": "426:5:3"
                        },
                        "referencedDeclaration": 5712,
                        "src": "426:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5712",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5742,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5738,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5725,
                        "src": "454:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 5739,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5727,
                        "src": "459:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 5740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "472:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 5737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "444:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20_$5712_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20)"
                      },
                      "typeName": {
                        "id": 5736,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5735,
                          "name": "ERC20",
                          "nameLocations": [
                            "448:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5712,
                          "src": "448:5:3"
                        },
                        "referencedDeclaration": 5712,
                        "src": "448:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5712",
                          "typeString": "contract ERC20"
                        }
                      }
                    },
                    "id": 5741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "444:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5712",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "426:49:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5745,
                        "name": "bondToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5734,
                        "src": "500:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5712",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5712",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 5744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "492:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5743,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "492:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5731,
                  "id": 5747,
                  "nodeType": "Return",
                  "src": "485:25:3"
                }
              ]
            },
            "functionSelector": "c1558302",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newBond",
            "nameLocation": "309:7:3",
            "parameters": {
              "id": 5728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5725,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "340:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "326:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5724,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5727,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "369:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "355:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "316:75:3"
            },
            "returnParameters": {
              "id": 5731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5749,
                  "src": "407:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:9:3"
            },
            "scope": 5750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ZCBFactory",
        "contractDependencies": [
          5712
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5750
        ],
        "name": "ZCBFactory",
        "nameLocation": "284:10:3",
        "scope": 6246,
        "usedErrors": []
      },
      {
        "id": 5836,
        "nodeType": "ContractDefinition",
        "src": "522:851:3",
        "nodes": [
          {
            "id": 5752,
            "nodeType": "VariableDeclaration",
            "src": "560:35:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "immutable",
            "name": "controller",
            "nameLocation": "585:10:3",
            "scope": 5836,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5751,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "560:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5754,
            "nodeType": "VariableDeclaration",
            "src": "601:35:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1a76dc0",
            "mutability": "immutable",
            "name": "zcbFactory",
            "nameLocation": "626:10:3",
            "scope": 5836,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5753,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5770,
            "nodeType": "FunctionDefinition",
            "src": "643:130:3",
            "nodes": [],
            "body": {
              "id": 5769,
              "nodeType": "Block",
              "src": "696:77:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5761,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5752,
                      "src": "706:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5762,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5756,
                      "src": "719:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "706:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5764,
                  "nodeType": "ExpressionStatement",
                  "src": "706:24:3"
                },
                {
                  "expression": {
                    "id": 5767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5765,
                      "name": "zcbFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5754,
                      "src": "741:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5766,
                      "name": "_zcbFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5758,
                      "src": "754:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5768,
                  "nodeType": "ExpressionStatement",
                  "src": "741:24:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5756,
                  "mutability": "mutable",
                  "name": "_controller",
                  "nameLocation": "663:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5770,
                  "src": "655:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5758,
                  "mutability": "mutable",
                  "name": "_zcbFactory",
                  "nameLocation": "684:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5770,
                  "src": "676:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:42:3"
            },
            "returnParameters": {
              "id": 5760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:3"
            },
            "scope": 5836,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5778,
            "nodeType": "EventDefinition",
            "src": "779:67:3",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b",
            "name": "PoolCreated",
            "nameLocation": "785:11:3",
            "parameters": {
              "id": 5777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "805:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "797:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5774,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "longZCB",
                  "nameLocation": "819:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "811:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5776,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shortZCB",
                  "nameLocation": "836:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5778,
                  "src": "828:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:49:3"
            }
          },
          {
            "id": 5835,
            "nodeType": "FunctionDefinition",
            "src": "911:460:3",
            "nodes": [],
            "body": {
              "id": 5834,
              "nodeType": "Block",
              "src": "1058:313:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5793,
                      "name": "longZCB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5786,
                      "src": "1068:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6c6f6e675a4342",
                          "id": 5798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1109:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1d4118dbcc6f36781802b2ce59c32b219c0312ebdd142571924c91dea39cb97c",
                            "typeString": "literal_string \"longZCB\""
                          },
                          "value": "longZCB"
                        },
                        {
                          "hexValue": "6c6f6e67",
                          "id": 5799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aa063063977143f6be4b49a41e26e13f452feaaf1e52e4794516f0c2e72126c5",
                            "typeString": "literal_string \"long\""
                          },
                          "value": "long"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1d4118dbcc6f36781802b2ce59c32b219c0312ebdd142571924c91dea39cb97c",
                            "typeString": "literal_string \"longZCB\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aa063063977143f6be4b49a41e26e13f452feaaf1e52e4794516f0c2e72126c5",
                            "typeString": "literal_string \"long\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5795,
                              "name": "zcbFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5754,
                              "src": "1089:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5794,
                            "name": "ZCBFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5750,
                            "src": "1078:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZCBFactory_$5750_$",
                              "typeString": "type(contract ZCBFactory)"
                            }
                          },
                          "id": 5796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZCBFactory_$5750",
                            "typeString": "contract ZCBFactory"
                          }
                        },
                        "id": 5797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1101:7:3",
                        "memberName": "newBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5749,
                        "src": "1078:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory,string memory) external returns (address)"
                        }
                      },
                      "id": 5800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1078:49:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1068:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5802,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:59:3"
                },
                {
                  "expression": {
                    "id": 5811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5803,
                      "name": "shortZCB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5788,
                      "src": "1137:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "73686f72745a4342",
                          "id": 5808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1179:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_759da99598a73174594124040ab84582cf72859b4bad76e2b89dec937f8d2bfc",
                            "typeString": "literal_string \"shortZCB\""
                          },
                          "value": "shortZCB"
                        },
                        {
                          "hexValue": "73686f7274",
                          "id": 5809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1191:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c1e422d971fccc51c25056cba97f61e0a4ad399e1ac87d9ec96553211c674e3",
                            "typeString": "literal_string \"short\""
                          },
                          "value": "short"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_759da99598a73174594124040ab84582cf72859b4bad76e2b89dec937f8d2bfc",
                            "typeString": "literal_string \"shortZCB\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2c1e422d971fccc51c25056cba97f61e0a4ad399e1ac87d9ec96553211c674e3",
                            "typeString": "literal_string \"short\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5805,
                              "name": "zcbFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5754,
                              "src": "1159:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5804,
                            "name": "ZCBFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5750,
                            "src": "1148:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZCBFactory_$5750_$",
                              "typeString": "type(contract ZCBFactory)"
                            }
                          },
                          "id": 5806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1148:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZCBFactory_$5750",
                            "typeString": "contract ZCBFactory"
                          }
                        },
                        "id": 5807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1171:7:3",
                        "memberName": "newBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5749,
                        "src": "1148:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory,string memory) external returns (address)"
                        }
                      },
                      "id": 5810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1148:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1137:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5812,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:62:3"
                },
                {
                  "expression": {
                    "id": 5823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5813,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5791,
                      "src": "1210:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                        "typeString": "contract SyntheticZCBPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5817,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5781,
                          "src": "1251:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5818,
                          "name": "longZCB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5786,
                          "src": "1257:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5819,
                          "name": "shortZCB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5788,
                          "src": "1266:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5820,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5783,
                          "src": "1276:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5821,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "1283:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1217:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_SyntheticZCBPool_$6245_$",
                          "typeString": "function (address,address,address,address,address) returns (contract SyntheticZCBPool)"
                        },
                        "typeName": {
                          "id": 5815,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5814,
                            "name": "SyntheticZCBPool",
                            "nameLocations": [
                              "1221:16:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6245,
                            "src": "1221:16:3"
                          },
                          "referencedDeclaration": 6245,
                          "src": "1221:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                            "typeString": "contract SyntheticZCBPool"
                          }
                        }
                      },
                      "id": 5822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1217:86:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                        "typeString": "contract SyntheticZCBPool"
                      }
                    },
                    "src": "1210:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                      "typeString": "contract SyntheticZCBPool"
                    }
                  },
                  "id": 5824,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:93:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5828,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5791,
                            "src": "1339:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          ],
                          "id": 5827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1331:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5826,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1331:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1331:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5830,
                        "name": "longZCB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5786,
                        "src": "1346:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5831,
                        "name": "shortZCB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5788,
                        "src": "1355:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5825,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5778,
                      "src": "1319:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 5832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5833,
                  "nodeType": "EmitStatement",
                  "src": "1314:50:3"
                }
              ]
            },
            "documentation": {
              "id": 5779,
              "nodeType": "StructuredDocumentation",
              "src": "852:54:3",
              "text": "@notice param base is the collateral used in pool "
            },
            "functionSelector": "981f5136",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPool",
            "nameLocation": "920:7:3",
            "parameters": {
              "id": 5784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5781,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "945:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "937:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5783,
                  "mutability": "mutable",
                  "name": "entry",
                  "nameLocation": "968:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "960:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:56:3"
            },
            "returnParameters": {
              "id": 5792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5786,
                  "mutability": "mutable",
                  "name": "longZCB",
                  "nameLocation": "1009:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "1001:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5788,
                  "mutability": "mutable",
                  "name": "shortZCB",
                  "nameLocation": "1026:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "1018:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5791,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1053:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5835,
                  "src": "1036:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                    "typeString": "contract SyntheticZCBPool"
                  },
                  "typeName": {
                    "id": 5790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5789,
                      "name": "SyntheticZCBPool",
                      "nameLocations": [
                        "1036:16:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6245,
                      "src": "1036:16:3"
                    },
                    "referencedDeclaration": 6245,
                    "src": "1036:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticZCBPool_$6245",
                      "typeString": "contract SyntheticZCBPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:58:3"
            },
            "scope": 5836,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SyntheticZCBPoolFactory",
        "contractDependencies": [
          6245
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5836
        ],
        "name": "SyntheticZCBPoolFactory",
        "nameLocation": "531:23:3",
        "scope": 6246,
        "usedErrors": []
      },
      {
        "id": 6245,
        "nodeType": "ContractDefinition",
        "src": "1375:4558:3",
        "nodes": [
          {
            "id": 5841,
            "nodeType": "UsingForDirective",
            "src": "1432:36:3",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 5839,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1438:17:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59351,
              "src": "1438:17:3"
            },
            "typeName": {
              "id": 5840,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1460:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5843,
            "nodeType": "VariableDeclaration",
            "src": "1474:24:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e2f7ad3",
            "mutability": "mutable",
            "name": "a_initial",
            "nameLocation": "1489:9:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5842,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1474:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5845,
            "nodeType": "VariableDeclaration",
            "src": "1504:24:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "558bdb29",
            "mutability": "mutable",
            "name": "b_initial",
            "nameLocation": "1519:9:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5844,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1504:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5847,
            "nodeType": "VariableDeclaration",
            "src": "1561:16:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "4df7e3d0",
            "mutability": "mutable",
            "name": "b",
            "nameLocation": "1576:1:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5846,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1561:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5849,
            "nodeType": "VariableDeclaration",
            "src": "1583:27:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "7063b06c",
            "mutability": "mutable",
            "name": "discount_cap",
            "nameLocation": "1598:12:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5848,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1583:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5851,
            "nodeType": "VariableDeclaration",
            "src": "1617:33:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "1816eb13",
            "mutability": "mutable",
            "name": "discountedReserves",
            "nameLocation": "1632:18:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5850,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1617:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5853,
            "nodeType": "VariableDeclaration",
            "src": "1657:25:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "b09ad8a0",
            "mutability": "mutable",
            "name": "upperBound",
            "nameLocation": "1672:10:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5852,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1657:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5855,
            "nodeType": "VariableDeclaration",
            "src": "1689:35:3",
            "nodes": [],
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "immutable",
            "name": "controller",
            "nameLocation": "1714:10:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5854,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1689:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5858,
            "nodeType": "VariableDeclaration",
            "src": "1731:40:3",
            "nodes": [],
            "constant": true,
            "functionSelector": "d3b5dc3b",
            "mutability": "constant",
            "name": "precision",
            "nameLocation": "1755:9:3",
            "scope": 6245,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1731:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 5857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1767:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 5886,
            "nodeType": "FunctionDefinition",
            "src": "1778:259:3",
            "nodes": [],
            "body": {
              "id": 5885,
              "nodeType": "Block",
              "src": "1966:71:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5877,
                      "name": "entry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1976:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5878,
                      "name": "_entry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5866,
                      "src": "1984:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1976:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5880,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:14:3"
                },
                {
                  "expression": {
                    "id": 5883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5881,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5855,
                      "src": "2001:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5882,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5868,
                      "src": "2014:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2001:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5884,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:24:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5871,
                    "name": "base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5860,
                    "src": "1940:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5872,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5862,
                    "src": "1945:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5873,
                    "name": "s_trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5864,
                    "src": "1951:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 5874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1960:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 5875,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5870,
                  "name": "BoundedDerivativesPool",
                  "nameLocations": [
                    "1917:22:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5086,
                  "src": "1917:22:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1917:49:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5860,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1798:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5886,
                  "src": "1790:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5862,
                  "mutability": "mutable",
                  "name": "trade",
                  "nameLocation": "1821:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5886,
                  "src": "1813:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5864,
                  "mutability": "mutable",
                  "name": "s_trade",
                  "nameLocation": "1845:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5886,
                  "src": "1837:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5866,
                  "mutability": "mutable",
                  "name": "_entry",
                  "nameLocation": "1871:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5886,
                  "src": "1863:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1863:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5868,
                  "mutability": "mutable",
                  "name": "_controller",
                  "nameLocation": "1896:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5886,
                  "src": "1888:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1789:128:3"
            },
            "returnParameters": {
              "id": 5876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5982,
            "nodeType": "FunctionDefinition",
            "src": "2411:814:3",
            "nodes": [],
            "body": {
              "id": 5981,
              "nodeType": "Block",
              "src": "2565:660:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5901,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2583:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2587:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2583:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5903,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5855,
                          "src": "2597:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2583:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a6564",
                        "id": 5905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2609:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        },
                        "value": "unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        }
                      ],
                      "id": 5900,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2575:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5907,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:49:3"
                },
                {
                  "expression": {
                    "id": 5920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5908,
                      "name": "b_initial",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5845,
                      "src": "2635:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5914,
                              "name": "P",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5889,
                              "src": "2664:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 5915,
                              "name": "I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5891,
                              "src": "2666:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2664:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 5909,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2648:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 5910,
                                  "name": "P",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5889,
                                  "src": "2650:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2648:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 5912,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2647:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2653:10:3",
                          "memberName": "divWadDown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59253,
                          "src": "2647:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2647:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 5918,
                        "name": "precision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5858,
                        "src": "2671:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2647:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2635:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5921,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:45:3"
                },
                {
                  "expression": {
                    "id": 5932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5922,
                      "name": "a_initial",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5843,
                      "src": "2691:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5928,
                            "name": "P",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5889,
                            "src": "2736:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5929,
                            "name": "I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5891,
                            "src": "2738:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2736:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5923,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5858,
                                "src": "2704:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 5924,
                                "name": "b_initial",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5845,
                                "src": "2714:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2704:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5926,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2703:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2725:10:3",
                        "memberName": "divWadDown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59253,
                        "src": "2703:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2703:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2691:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5933,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:49:3"
                },
                {
                  "expression": {
                    "id": 5948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 5934,
                          "name": "discount_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5849,
                          "src": "2867:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5935,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5847,
                          "src": "2881:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5936,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2866:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5941,
                              "name": "sigma",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5893,
                              "src": "2928:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5939,
                              "name": "P",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5889,
                              "src": "2915:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2917:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59221,
                            "src": "2915:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2915:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 5943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2936:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 5944,
                          "name": "a_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5843,
                          "src": "2939:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5945,
                          "name": "b_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5845,
                          "src": "2950:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 5946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2961:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 5937,
                          "name": "LinearCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2950,
                          "src": "2886:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2950_$",
                            "typeString": "type(library LinearCurve)"
                          }
                        },
                        "id": 5938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2898:16:3",
                        "memberName": "amountOutGivenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2829,
                        "src": "2886:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 5947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2886:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "2866:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5949,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:100:3"
                },
                {
                  "expression": {
                    "id": 5965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 5950,
                          "name": "upperBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5853,
                          "src": "2979:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5951,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2976:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5956,
                                "name": "alpha",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5895,
                                "src": "3035:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 5957,
                                "name": "delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5897,
                                "src": "3041:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3035:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5954,
                              "name": "P",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5889,
                              "src": "3022:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3024:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59221,
                            "src": "3022:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3022:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 5960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3049:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 5961,
                          "name": "a_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5843,
                          "src": "3052:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5962,
                          "name": "b_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5845,
                          "src": "3063:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 5963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3073:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 5952,
                          "name": "LinearCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2950,
                          "src": "2993:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2950_$",
                            "typeString": "type(library LinearCurve)"
                          }
                        },
                        "id": 5953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3005:16:3",
                        "memberName": "amountOutGivenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2829,
                        "src": "2993:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 5964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2993:85:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "2976:102:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5966,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:102:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5972,
                                "name": "a_initial",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5843,
                                "src": "3176:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 5970,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5858,
                                "src": "3155:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3165:10:3",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59253,
                              "src": "3155:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3155:31:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3147:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 5968,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "3147:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3147:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 5967,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "3134:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 5975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5976,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5978,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5847,
                        "src": "3216:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5977,
                      "name": "setPriceAndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "3199:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5980,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:19:3"
                }
              ]
            },
            "documentation": {
              "id": 5887,
              "nodeType": "StructuredDocumentation",
              "src": "2043:363:3",
              "text": "@notice calculate and store initial curve params that takes into account\n validator rewards(from discounted zcb). For validator rewards, just skew up the initial price\n These params are used for utilizer bond issuance, but a is set to 0 after issuance phase \n @param sigma is the proportion of P that is going to be bought at a discount  "
            },
            "functionSelector": "ac4bc1cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateInitCurveParams",
            "nameLocation": "2420:24:3",
            "parameters": {
              "id": 5898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5889,
                  "mutability": "mutable",
                  "name": "P",
                  "nameLocation": "2462:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "2454:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5891,
                  "mutability": "mutable",
                  "name": "I",
                  "nameLocation": "2482:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "2474:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5893,
                  "mutability": "mutable",
                  "name": "sigma",
                  "nameLocation": "2502:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "2494:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5895,
                  "mutability": "mutable",
                  "name": "alpha",
                  "nameLocation": "2525:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "2517:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5897,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "2549:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5982,
                  "src": "2541:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2444:111:3"
            },
            "returnParameters": {
              "id": 5899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6096,
            "nodeType": "FunctionDefinition",
            "src": "3394:1132:3",
            "nodes": [],
            "body": {
              "id": 6095,
              "nodeType": "Block",
              "src": "3588:938:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5997,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3606:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3610:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3606:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5999,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5855,
                          "src": "3620:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3606:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a6564",
                        "id": 6001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3632:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        },
                        "value": "unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        }
                      ],
                      "id": 5996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3598:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3598:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6003,
                  "nodeType": "ExpressionStatement",
                  "src": "3598:49:3"
                },
                {
                  "assignments": [
                    6005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6005,
                      "mutability": "mutable",
                      "name": "saleAmountQty",
                      "nameLocation": "3708:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6095,
                      "src": "3700:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6004,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3700:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6015,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6011,
                          "name": "initPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5987,
                          "src": "3750:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 6012,
                          "name": "endPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5989,
                          "src": "3761:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3750:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 6006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3725:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 6007,
                              "name": "saleAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5985,
                              "src": "3727:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3725:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6009,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3724:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3739:10:3",
                      "memberName": "divWadDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59253,
                      "src": "3724:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3724:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3700:70:3"
                },
                {
                  "assignments": [
                    6017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6017,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "3789:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6095,
                      "src": "3781:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3781:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6025,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6023,
                        "name": "saleAmountQty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6005,
                        "src": "3827:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6018,
                              "name": "endPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5989,
                              "src": "3794:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 6019,
                              "name": "initPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5987,
                              "src": "3805:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3794:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6021,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3793:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3816:10:3",
                      "memberName": "divWadDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59253,
                      "src": "3793:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3781:60:3"
                },
                {
                  "expression": {
                    "id": 6039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 6026,
                          "name": "discount_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5849,
                          "src": "3912:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 6027,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3911:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6032,
                              "name": "sigma",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5991,
                              "src": "3981:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6030,
                              "name": "saleAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5985,
                              "src": "3959:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3970:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59221,
                            "src": "3959:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3959:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 6034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3988:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 6035,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6017,
                          "src": "3991:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6036,
                          "name": "initPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5987,
                          "src": "3994:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 6037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4004:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 6028,
                          "name": "LinearCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2950,
                          "src": "3930:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2950_$",
                            "typeString": "type(library LinearCurve)"
                          }
                        },
                        "id": 6029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3942:16:3",
                        "memberName": "amountOutGivenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2829,
                        "src": "3930:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 6038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3930:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "3911:99:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6040,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:99:3"
                },
                {
                  "expression": {
                    "id": 6043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6041,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5847,
                      "src": "4021:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6042,
                      "name": "initPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5987,
                      "src": "4025:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4021:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6044,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:13:3"
                },
                {
                  "expression": {
                    "id": 6062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6045,
                      "name": "managementFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5994,
                      "src": "4118:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 6048,
                                "name": "endPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5989,
                                "src": "4158:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6046,
                                "name": "discount_cap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5849,
                                "src": "4134:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4147:10:3",
                              "memberName": "mulWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59221,
                              "src": "4134:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4134:33:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 6052,
                                "name": "sigma",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5991,
                                "src": "4205:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6050,
                                "name": "saleAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5985,
                                "src": "4183:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4194:10:3",
                              "memberName": "mulWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59221,
                              "src": "4183:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4183:28:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4134:77:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6057,
                              "name": "endPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5989,
                              "src": "4239:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6055,
                              "name": "saleAmountQty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6005,
                              "src": "4214:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4228:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59221,
                            "src": "4214:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4214:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4134:114:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 6060,
                        "name": "saleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5985,
                        "src": "4251:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4134:127:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4118:143:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6063,
                  "nodeType": "ExpressionStatement",
                  "src": "4118:143:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6069,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6017,
                                "src": "4360:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6067,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5858,
                                "src": "4339:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4349:10:3",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59253,
                              "src": "4339:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4339:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4331:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 6065,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "4331:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4331:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 6064,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "4318:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 6072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6073,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6075,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5847,
                        "src": "4392:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6074,
                      "name": "setPriceAndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "4375:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4375:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6077,
                  "nodeType": "ExpressionStatement",
                  "src": "4375:19:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6080,
                            "name": "endPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5989,
                            "src": "4438:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6079,
                          "name": "priceToPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2099,
                          "src": "4425:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                            "typeString": "function (uint256) pure returns (uint16)"
                          }
                        },
                        "id": 6081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4425:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4454:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              },
                              "typeName": {
                                "id": 6083,
                                "name": "int128",
                                "nodeType": "ElementaryTypeName",
                                "src": "4454:6:3",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              }
                            ],
                            "id": 6082,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4449:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_int128",
                            "typeString": "type(int128)"
                          }
                        },
                        "id": 6086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4462:3:3",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4449:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      ],
                      "id": 6078,
                      "name": "setDynamicLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1918,
                      "src": "4405:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_int128_$returns$__$",
                        "typeString": "function (uint16,int128)"
                      }
                    },
                    "id": 6087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6088,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6091,
                            "name": "endPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5989,
                            "src": "4508:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6090,
                          "name": "priceToPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2099,
                          "src": "4495:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                            "typeString": "function (uint256) pure returns (uint16)"
                          }
                        },
                        "id": 6092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4495:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 6089,
                      "name": "setModifyLiqPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "4477:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 6093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6094,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:41:3"
                }
              ]
            },
            "documentation": {
              "id": 5983,
              "nodeType": "StructuredDocumentation",
              "src": "3231:158:3",
              "text": "@notice calculates initparams for pool based instruments \n param endPrice is the inception Price of longZCB, or its price when there is no discount"
            },
            "functionSelector": "34327d8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateInitCurveParamsPool",
            "nameLocation": "3403:28:3",
            "parameters": {
              "id": 5992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5985,
                  "mutability": "mutable",
                  "name": "saleAmount",
                  "nameLocation": "3449:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "3441:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5987,
                  "mutability": "mutable",
                  "name": "initPrice",
                  "nameLocation": "3478:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "3470:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5989,
                  "mutability": "mutable",
                  "name": "endPrice",
                  "nameLocation": "3506:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "3498:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5991,
                  "mutability": "mutable",
                  "name": "sigma",
                  "nameLocation": "3533:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "3525:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3431:117:3"
            },
            "returnParameters": {
              "id": 5995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5994,
                  "mutability": "mutable",
                  "name": "managementFee",
                  "nameLocation": "3574:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6096,
                  "src": "3566:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3565:23:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6123,
            "nodeType": "FunctionDefinition",
            "src": "4623:246:3",
            "nodes": [],
            "body": {
              "id": 6122,
              "nodeType": "Block",
              "src": "4699:170:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6105,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6105,
                      "mutability": "mutable",
                      "name": "amountDelta",
                      "nameLocation": "4718:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6122,
                      "src": "4710:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4710:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6114,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6108,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6099,
                        "src": "4764:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 6109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4772:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 6110,
                        "name": "a_initial",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5843,
                        "src": "4775:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6111,
                        "name": "b_initial",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5845,
                        "src": "4786:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 6112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4797:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6106,
                        "name": "LinearCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2950,
                        "src": "4735:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2950_$",
                          "typeString": "type(library LinearCurve)"
                        }
                      },
                      "id": 6107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4747:16:3",
                      "memberName": "amountOutGivenIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2829,
                      "src": "4735:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 6113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4735:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4709:93:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 6117,
                          "name": "maxPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "4843:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6115,
                          "name": "amountDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6105,
                          "src": "4820:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4832:10:3",
                        "memberName": "mulWadDown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59221,
                        "src": "4820:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4820:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6119,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6099,
                      "src": "4855:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4820:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6103,
                  "id": 6121,
                  "nodeType": "Return",
                  "src": "4813:48:3"
                }
              ]
            },
            "documentation": {
              "id": 6097,
              "nodeType": "StructuredDocumentation",
              "src": "4532:86:3",
              "text": "@notice computes area between the curve and max price for given storage parameters"
            },
            "functionSelector": "14e2b929",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areaBetweenCurveAndMax",
            "nameLocation": "4632:22:3",
            "parameters": {
              "id": 6100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6099,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4663:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6123,
                  "src": "4655:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4655:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4654:16:3"
            },
            "returnParameters": {
              "id": 6103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6102,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6123,
                  "src": "4691:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4690:9:3"
            },
            "scope": 6245,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6151,
            "nodeType": "FunctionDefinition",
            "src": "4907:241:3",
            "nodes": [],
            "body": {
              "id": 6150,
              "nodeType": "Block",
              "src": "5008:140:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5026:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5030:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5026:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6134,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "5040:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5026:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5047:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5018:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6138,
                  "nodeType": "ExpressionStatement",
                  "src": "5018:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6142,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6126,
                        "src": "5086:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6143,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6128,
                        "src": "5096:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6139,
                        "name": "TradeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "5070:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5712",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5081:4:3",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5698,
                      "src": "5070:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5070:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6145,
                  "nodeType": "ExpressionStatement",
                  "src": "5070:33:3"
                },
                {
                  "expression": {
                    "id": 6148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6146,
                      "name": "discountedReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "5113:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6147,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6128,
                      "src": "5135:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5113:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6149,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:28:3"
                }
              ]
            },
            "documentation": {
              "id": 6124,
              "nodeType": "StructuredDocumentation",
              "src": "4875:27:3",
              "text": "@notice mints new zcbs "
            },
            "functionSelector": "681504cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trustedDiscountedMint",
            "nameLocation": "4916:21:3",
            "parameters": {
              "id": 6129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6126,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4955:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6151,
                  "src": "4947:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4947:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6128,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4982:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6151,
                  "src": "4974:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4974:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4937:62:3"
            },
            "returnParameters": {
              "id": 6130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5008:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6185,
            "nodeType": "FunctionDefinition",
            "src": "5155:267:3",
            "nodes": [],
            "body": {
              "id": 6184,
              "nodeType": "Block",
              "src": "5264:158:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5282:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5286:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5282:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6163,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "5296:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5282:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5303:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5274:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5274:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6167,
                  "nodeType": "ExpressionStatement",
                  "src": "5274:40:3"
                },
                {
                  "condition": {
                    "id": 6168,
                    "name": "long",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6157,
                    "src": "5329:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6179,
                          "name": "trader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6153,
                          "src": "5400:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6180,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6155,
                          "src": "5408:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6176,
                          "name": "s_tradeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4080,
                          "src": "5382:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5712",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5395:4:3",
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5711,
                        "src": "5382:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 6181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5382:33:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6182,
                    "nodeType": "ExpressionStatement",
                    "src": "5382:33:3"
                  },
                  "id": 6183,
                  "nodeType": "IfStatement",
                  "src": "5325:90:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6172,
                          "name": "trader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6153,
                          "src": "5351:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6173,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6155,
                          "src": "5359:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6169,
                          "name": "TradeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4077,
                          "src": "5335:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5712",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5346:4:3",
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5711,
                        "src": "5335:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 6174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5335:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6175,
                    "nodeType": "ExpressionStatement",
                    "src": "5335:31:3"
                  }
                }
              ]
            },
            "functionSelector": "c93ac3ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trustedBurn",
            "nameLocation": "5164:11:3",
            "parameters": {
              "id": 6158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6153,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5193:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6185,
                  "src": "5185:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5185:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6155,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5218:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6185,
                  "src": "5210:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6157,
                  "mutability": "mutable",
                  "name": "long",
                  "nameLocation": "5240:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6185,
                  "src": "5235:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5235:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5175:79:3"
            },
            "returnParameters": {
              "id": 6159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6224,
            "nodeType": "FunctionDefinition",
            "src": "5428:253:3",
            "nodes": [],
            "body": {
              "id": 6223,
              "nodeType": "Block",
              "src": "5485:196:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5503:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5507:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5503:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6195,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5855,
                          "src": "5517:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5503:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5529:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5495:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5495:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6199,
                  "nodeType": "ExpressionStatement",
                  "src": "5495:45:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6200,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6189,
                      "src": "5555:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5570:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6202,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5570:7:3",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 6201,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "5565:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5565:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 6205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5579:3:3",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "5565:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5555:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6218,
                          "name": "flushTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6187,
                          "src": "5657:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6219,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6189,
                          "src": "5666:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6215,
                          "name": "BaseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4074,
                          "src": "5638:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5712",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5648:8:3",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5436,
                        "src": "5638:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 6220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5638:35:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6221,
                    "nodeType": "ExpressionStatement",
                    "src": "5638:35:3"
                  },
                  "id": 6222,
                  "nodeType": "IfStatement",
                  "src": "5551:122:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6210,
                          "name": "flushTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6187,
                          "src": "5603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6211,
                            "name": "baseBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4212,
                            "src": "5612:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 6212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5612:9:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6207,
                          "name": "BaseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4074,
                          "src": "5584:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5712",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5594:8:3",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5436,
                        "src": "5584:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 6213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5584:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6214,
                    "nodeType": "ExpressionStatement",
                    "src": "5584:38:3"
                  }
                }
              ]
            },
            "functionSelector": "96fd1c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flush",
            "nameLocation": "5437:5:3",
            "parameters": {
              "id": 6190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6187,
                  "mutability": "mutable",
                  "name": "flushTo",
                  "nameLocation": "5451:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6224,
                  "src": "5443:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5443:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6189,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5468:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6224,
                  "src": "5460:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5460:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5442:33:3"
            },
            "returnParameters": {
              "id": 6191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5485:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6244,
            "nodeType": "FunctionDefinition",
            "src": "5789:141:3",
            "nodes": [],
            "body": {
              "id": 6243,
              "nodeType": "Block",
              "src": "5817:113:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5835:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5839:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5835:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6231,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5855,
                          "src": "5849:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5835:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5861:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5827:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5827:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6235,
                  "nodeType": "ExpressionStatement",
                  "src": "5827:45:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 6237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5896:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 6236,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "5883:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 6238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5883:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6239,
                  "nodeType": "ExpressionStatement",
                  "src": "5883:15:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6240,
                      "name": "amortizeLiq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1940,
                      "src": "5909:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5909:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6242,
                  "nodeType": "ExpressionStatement",
                  "src": "5909:13:3"
                }
              ]
            },
            "documentation": {
              "id": 6225,
              "nodeType": "StructuredDocumentation",
              "src": "5687:97:3",
              "text": "@notice resets AMM liquidity to 0 and make it ready to be liq provisioned \n by anyone "
            },
            "functionSelector": "8d01450f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetLiq",
            "nameLocation": "5798:8:3",
            "parameters": {
              "id": 6226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5806:2:3"
            },
            "returnParameters": {
              "id": 6227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5817:0:3"
            },
            "scope": 6245,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5837,
              "name": "BoundedDerivativesPool",
              "nameLocations": [
                "1404:22:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5086,
              "src": "1404:22:3"
            },
            "id": 5838,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:22:3"
          }
        ],
        "canonicalName": "SyntheticZCBPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6245,
          5086,
          2378
        ],
        "name": "SyntheticZCBPool",
        "nameLocation": "1384:16:3",
        "scope": 6246,
        "usedErrors": []
      }
    ]
  },
  "id": 3
}